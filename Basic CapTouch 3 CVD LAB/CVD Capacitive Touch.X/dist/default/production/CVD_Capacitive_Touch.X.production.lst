

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Sep 23 20:36:50 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F2550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   108                           UFRM equ 0F66h ;# 
   109  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   110                           UFRML equ 0F66h ;# 
   111  0000                     # 139 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   112                           UFRMH equ 0F67h ;# 
   113  0000                     # 179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   114                           UIR equ 0F68h ;# 
   115  0000                     # 235 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   116                           UIE equ 0F69h ;# 
   117  0000                     # 291 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   118                           UEIR equ 0F6Ah ;# 
   119  0000                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   120                           UEIE equ 0F6Bh ;# 
   121  0000                     # 393 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   122                           USTAT equ 0F6Ch ;# 
   123  0000                     # 453 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   124                           UCON equ 0F6Dh ;# 
   125  0000                     # 504 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   126                           UADDR equ 0F6Eh ;# 
   127  0000                     # 568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   128                           UCFG equ 0F6Fh ;# 
   129  0000                     # 647 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   130                           UEP0 equ 0F70h ;# 
   131  0000                     # 755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   132                           UEP1 equ 0F71h ;# 
   133  0000                     # 863 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   134                           UEP2 equ 0F72h ;# 
   135  0000                     # 971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   136                           UEP3 equ 0F73h ;# 
   137  0000                     # 1079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   138                           UEP4 equ 0F74h ;# 
   139  0000                     # 1187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   140                           UEP5 equ 0F75h ;# 
   141  0000                     # 1295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   142                           UEP6 equ 0F76h ;# 
   143  0000                     # 1403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   144                           UEP7 equ 0F77h ;# 
   145  0000                     # 1511 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   146                           UEP8 equ 0F78h ;# 
   147  0000                     # 1587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   148                           UEP9 equ 0F79h ;# 
   149  0000                     # 1663 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   150                           UEP10 equ 0F7Ah ;# 
   151  0000                     # 1739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   152                           UEP11 equ 0F7Bh ;# 
   153  0000                     # 1815 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   154                           UEP12 equ 0F7Ch ;# 
   155  0000                     # 1891 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   156                           UEP13 equ 0F7Dh ;# 
   157  0000                     # 1967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   158                           UEP14 equ 0F7Eh ;# 
   159  0000                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   160                           UEP15 equ 0F7Fh ;# 
   161  0000                     # 2119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   162                           PORTA equ 0F80h ;# 
   163  0000                     # 2258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   164                           PORTB equ 0F81h ;# 
   165  0000                     # 2368 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   166                           PORTC equ 0F82h ;# 
   167  0000                     # 2510 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   168                           PORTE equ 0F84h ;# 
   169  0000                     # 2549 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   170                           LATA equ 0F89h ;# 
   171  0000                     # 2649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   172                           LATB equ 0F8Ah ;# 
   173  0000                     # 2761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   174                           LATC equ 0F8Bh ;# 
   175  0000                     # 2839 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   176                           TRISA equ 0F92h ;# 
   177  0000                     # 2844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   178                           DDRA equ 0F92h ;# 
   179  0000                     # 3037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   180                           TRISB equ 0F93h ;# 
   181  0000                     # 3042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   182                           DDRB equ 0F93h ;# 
   183  0000                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   184                           TRISC equ 0F94h ;# 
   185  0000                     # 3264 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   186                           DDRC equ 0F94h ;# 
   187  0000                     # 3413 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   188                           OSCTUNE equ 0F9Bh ;# 
   189  0000                     # 3472 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   190                           PIE1 equ 0F9Dh ;# 
   191  0000                     # 3543 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   192                           PIR1 equ 0F9Eh ;# 
   193  0000                     # 3614 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   194                           IPR1 equ 0F9Fh ;# 
   195  0000                     # 3685 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   196                           PIE2 equ 0FA0h ;# 
   197  0000                     # 3756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   198                           PIR2 equ 0FA1h ;# 
   199  0000                     # 3827 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   200                           IPR2 equ 0FA2h ;# 
   201  0000                     # 3898 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   202                           EECON1 equ 0FA6h ;# 
   203  0000                     # 3964 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   204                           EECON2 equ 0FA7h ;# 
   205  0000                     # 3971 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   206                           EEDATA equ 0FA8h ;# 
   207  0000                     # 3978 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   208                           EEADR equ 0FA9h ;# 
   209  0000                     # 3985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   210                           RCSTA equ 0FABh ;# 
   211  0000                     # 3990 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   212                           RCSTA1 equ 0FABh ;# 
   213  0000                     # 4195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   214                           TXSTA equ 0FACh ;# 
   215  0000                     # 4200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   216                           TXSTA1 equ 0FACh ;# 
   217  0000                     # 4451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   218                           TXREG equ 0FADh ;# 
   219  0000                     # 4456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   220                           TXREG1 equ 0FADh ;# 
   221  0000                     # 4463 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   222                           RCREG equ 0FAEh ;# 
   223  0000                     # 4468 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   224                           RCREG1 equ 0FAEh ;# 
   225  0000                     # 4475 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   226                           SPBRG equ 0FAFh ;# 
   227  0000                     # 4480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   228                           SPBRG1 equ 0FAFh ;# 
   229  0000                     # 4487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   230                           SPBRGH equ 0FB0h ;# 
   231  0000                     # 4494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   232                           T3CON equ 0FB1h ;# 
   233  0000                     # 4615 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   234                           TMR3 equ 0FB2h ;# 
   235  0000                     # 4622 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   236                           TMR3L equ 0FB2h ;# 
   237  0000                     # 4629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   238                           TMR3H equ 0FB3h ;# 
   239  0000                     # 4636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   240                           CMCON equ 0FB4h ;# 
   241  0000                     # 4726 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   242                           CVRCON equ 0FB5h ;# 
   243  0000                     # 4811 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   244                           ECCP1AS equ 0FB6h ;# 
   245  0000                     # 4816 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   246                           CCP1AS equ 0FB6h ;# 
   247  0000                     # 4941 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   248                           ECCP1DEL equ 0FB7h ;# 
   249  0000                     # 4946 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   250                           CCP1DEL equ 0FB7h ;# 
   251  0000                     # 4981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   252                           BAUDCON equ 0FB8h ;# 
   253  0000                     # 4986 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   254                           BAUDCTL equ 0FB8h ;# 
   255  0000                     # 5161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   256                           CCP2CON equ 0FBAh ;# 
   257  0000                     # 5225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   258                           CCPR2 equ 0FBBh ;# 
   259  0000                     # 5232 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   260                           CCPR2L equ 0FBBh ;# 
   261  0000                     # 5239 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   262                           CCPR2H equ 0FBCh ;# 
   263  0000                     # 5246 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   264                           CCP1CON equ 0FBDh ;# 
   265  0000                     # 5310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   266                           CCPR1 equ 0FBEh ;# 
   267  0000                     # 5317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   268                           CCPR1L equ 0FBEh ;# 
   269  0000                     # 5324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   270                           CCPR1H equ 0FBFh ;# 
   271  0000                     # 5331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   272                           ADCON2 equ 0FC0h ;# 
   273  0000                     # 5402 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   274                           ADCON1 equ 0FC1h ;# 
   275  0000                     # 5487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   276                           ADCON0 equ 0FC2h ;# 
   277  0000                     # 5606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   278                           ADRES equ 0FC3h ;# 
   279  0000                     # 5613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   280                           ADRESL equ 0FC3h ;# 
   281  0000                     # 5620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   282                           ADRESH equ 0FC4h ;# 
   283  0000                     # 5627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   284                           SSPCON2 equ 0FC5h ;# 
   285  0000                     # 5689 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   286                           SSPCON1 equ 0FC6h ;# 
   287  0000                     # 5759 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   288                           SSPSTAT equ 0FC7h ;# 
   289  0000                     # 6007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   290                           SSPADD equ 0FC8h ;# 
   291  0000                     # 6014 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   292                           SSPBUF equ 0FC9h ;# 
   293  0000                     # 6021 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   294                           T2CON equ 0FCAh ;# 
   295  0000                     # 6119 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   296                           PR2 equ 0FCBh ;# 
   297  0000                     # 6124 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   298                           MEMCON equ 0FCBh ;# 
   299  0000                     # 6229 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   300                           TMR2 equ 0FCCh ;# 
   301  0000                     # 6236 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   302                           T1CON equ 0FCDh ;# 
   303  0000                     # 6339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   304                           TMR1 equ 0FCEh ;# 
   305  0000                     # 6346 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   306                           TMR1L equ 0FCEh ;# 
   307  0000                     # 6353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   308                           TMR1H equ 0FCFh ;# 
   309  0000                     # 6360 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   310                           RCON equ 0FD0h ;# 
   311  0000                     # 6509 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   312                           WDTCON equ 0FD1h ;# 
   313  0000                     # 6537 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   314                           HLVDCON equ 0FD2h ;# 
   315  0000                     # 6542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   316                           LVDCON equ 0FD2h ;# 
   317  0000                     # 6807 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   318                           OSCCON equ 0FD3h ;# 
   319  0000                     # 6890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   320                           T0CON equ 0FD5h ;# 
   321  0000                     # 6960 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   322                           TMR0 equ 0FD6h ;# 
   323  0000                     # 6967 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   324                           TMR0L equ 0FD6h ;# 
   325  0000                     # 6974 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   326                           TMR0H equ 0FD7h ;# 
   327  0000                     # 6981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   328                           STATUS equ 0FD8h ;# 
   329  0000                     # 7052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   330                           FSR2 equ 0FD9h ;# 
   331  0000                     # 7059 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   332                           FSR2L equ 0FD9h ;# 
   333  0000                     # 7066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   334                           FSR2H equ 0FDAh ;# 
   335  0000                     # 7073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   336                           PLUSW2 equ 0FDBh ;# 
   337  0000                     # 7080 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   338                           PREINC2 equ 0FDCh ;# 
   339  0000                     # 7087 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   340                           POSTDEC2 equ 0FDDh ;# 
   341  0000                     # 7094 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   342                           POSTINC2 equ 0FDEh ;# 
   343  0000                     # 7101 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   344                           INDF2 equ 0FDFh ;# 
   345  0000                     # 7108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   346                           BSR equ 0FE0h ;# 
   347  0000                     # 7115 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   348                           FSR1 equ 0FE1h ;# 
   349  0000                     # 7122 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   350                           FSR1L equ 0FE1h ;# 
   351  0000                     # 7129 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   352                           FSR1H equ 0FE2h ;# 
   353  0000                     # 7136 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   354                           PLUSW1 equ 0FE3h ;# 
   355  0000                     # 7143 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   356                           PREINC1 equ 0FE4h ;# 
   357  0000                     # 7150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   358                           POSTDEC1 equ 0FE5h ;# 
   359  0000                     # 7157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   360                           POSTINC1 equ 0FE6h ;# 
   361  0000                     # 7164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   362                           INDF1 equ 0FE7h ;# 
   363  0000                     # 7171 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   364                           WREG equ 0FE8h ;# 
   365  0000                     # 7178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   366                           FSR0 equ 0FE9h ;# 
   367  0000                     # 7185 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   368                           FSR0L equ 0FE9h ;# 
   369  0000                     # 7192 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   370                           FSR0H equ 0FEAh ;# 
   371  0000                     # 7199 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   372                           PLUSW0 equ 0FEBh ;# 
   373  0000                     # 7206 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   374                           PREINC0 equ 0FECh ;# 
   375  0000                     # 7213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   376                           POSTDEC0 equ 0FEDh ;# 
   377  0000                     # 7220 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   378                           POSTINC0 equ 0FEEh ;# 
   379  0000                     # 7227 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   380                           INDF0 equ 0FEFh ;# 
   381  0000                     # 7234 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   382                           INTCON3 equ 0FF0h ;# 
   383  0000                     # 7326 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   384                           INTCON2 equ 0FF1h ;# 
   385  0000                     # 7403 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   386                           INTCON equ 0FF2h ;# 
   387  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   388                           PROD equ 0FF3h ;# 
   389  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   390                           PRODL equ 0FF3h ;# 
   391  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   392                           PRODH equ 0FF4h ;# 
   393  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   394                           TABLAT equ 0FF5h ;# 
   395  0000                     # 7550 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   396                           TBLPTR equ 0FF6h ;# 
   397  0000                     # 7557 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   398                           TBLPTRL equ 0FF6h ;# 
   399  0000                     # 7564 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   400                           TBLPTRH equ 0FF7h ;# 
   401  0000                     # 7571 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   402                           TBLPTRU equ 0FF8h ;# 
   403  0000                     # 7580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   404                           PCLAT equ 0FF9h ;# 
   405  0000                     # 7587 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   406                           PC equ 0FF9h ;# 
   407  0000                     # 7594 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   408                           PCL equ 0FF9h ;# 
   409  0000                     # 7601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   410                           PCLATH equ 0FFAh ;# 
   411  0000                     # 7608 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   412                           PCLATU equ 0FFBh ;# 
   413  0000                     # 7615 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   414                           STKPTR equ 0FFCh ;# 
   415  0000                     # 7691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   416                           TOS equ 0FFDh ;# 
   417  0000                     # 7698 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   418                           TOSL equ 0FFDh ;# 
   419  0000                     # 7705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   420                           TOSH equ 0FFEh ;# 
   421  0000                     # 7712 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f2550.h"
   422                           TOSU equ 0FFFh ;# 
   423  0000                     	FNCALL	_main,_ADC_Init
   424                           	FNCALL	_main,_CVD_Touch_Sample
   425                           	FNCALL	_main,_UART_TX_Init
   426                           	FNCALL	_CVD_Touch_Sample,_UART_Write_String
   427                           	FNCALL	_CVD_Touch_Sample,_sprintf
   428                           	FNCALL	_sprintf,_vfprintf
   429                           	FNCALL	_vfprintf,_vfpfcnvrt
   430                           	FNCALL	_vfpfcnvrt,_dtoa
   431                           	FNCALL	_vfpfcnvrt,_fputc
   432                           	FNCALL	_dtoa,___aodiv
   433                           	FNCALL	_dtoa,___aomod
   434                           	FNCALL	_dtoa,_abs
   435                           	FNCALL	_dtoa,_pad
   436                           	FNCALL	_pad,_fputc
   437                           	FNCALL	_pad,_fputs
   438                           	FNCALL	_pad,_strlen
   439                           	FNCALL	_fputs,_fputc
   440                           	FNCALL	_fputc,_putch
   441                           	FNCALL	_UART_Write_String,_UART_Write
   442                           	FNROOT	_main
   443                           	global	_nout
   444                           	global	_width
   445                           	global	_prec
   446                           	global	_flags
   447                           	global	_AD_RES
   448                           	global	_dbuf
   449                           	global	_Buffer
   450                           	global	_ADRESL
   451                           _ADRESL	set	0xFC3
   452  0000                     	global	_ADRESH
   453                           _ADRESH	set	0xFC4
   454  0000                     	global	_TXREG
   455                           _TXREG	set	0xFAD
   456  0000                     	global	_SPBRG
   457                           _SPBRG	set	0xFAF
   458  0000                     	global	_ADCON0
   459                           _ADCON0	set	0xFC2
   460  0000                     	global	_ADCON2
   461                           _ADCON2	set	0xFC0
   462  0000                     	global	_ADCON1
   463                           _ADCON1	set	0xFC1
   464  0000                     	global	_TRISA
   465                           _TRISA	set	0xF92
   466  0000                     	global	_GO_nDONE
   467                           _GO_nDONE	set	0x7E11
   468  0000                     	global	_TRMT
   469                           _TRMT	set	0x7D61
   470  0000                     	global	_TXEN
   471                           _TXEN	set	0x7D65
   472  0000                     	global	_TRISC7
   473                           _TRISC7	set	0x7CA7
   474  0000                     	global	_TRISC6
   475                           _TRISC6	set	0x7CA6
   476  0000                     	global	_BRG16
   477                           _BRG16	set	0x7DC3
   478  0000                     	global	_SPEN
   479                           _SPEN	set	0x7D5F
   480  0000                     	global	_SYNC
   481                           _SYNC	set	0x7D64
   482  0000                     	global	_BRGH
   483                           _BRGH	set	0x7D62
   484  0000                     	global	_RB0
   485                           _RB0	set	0x7C08
   486  0000                     	global	_TRISB0
   487                           _TRISB0	set	0x7C98
   488  0000                     	global	_RC0
   489                           _RC0	set	0x7C10
   490  0000                     	global	_TRISC0
   491                           _TRISC0	set	0x7CA0
   492  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   493                           global __psmallconst
   494                           __psmallconst:
   495  000800                     	db	0
   496  000800  00                 	
   497                           STR_1:
   498  000801                     	db	37
   499  000801  25                 	db	100	;'d'
   500  000802  64                 	db	32
   501  000803  20                 	db	10
   502  000804  0A                 	db	13
   503  000805  0D                 	db	0
   504  000806  00                 ; #config settings
   505                           global __CFG_PLLDIV$2
   506                           __CFG_PLLDIV$2 equ 0x0
   507  0000                     global __CFG_CPUDIV$OSC1_PLL2
   508                           __CFG_CPUDIV$OSC1_PLL2 equ 0x0
   509  0000                     global __CFG_USBDIV$1
   510                           __CFG_USBDIV$1 equ 0x0
   511  0000                     global __CFG_FOSC$HSPLL_HS
   512                           __CFG_FOSC$HSPLL_HS equ 0x0
   513  0000                     global __CFG_FCMEN$OFF
   514                           __CFG_FCMEN$OFF equ 0x0
   515  0000                     global __CFG_IESO$ON
   516                           __CFG_IESO$ON equ 0x0
   517  0000                     global __CFG_PWRT$OFF
   518                           __CFG_PWRT$OFF equ 0x0
   519  0000                     global __CFG_BOR$OFF
   520                           __CFG_BOR$OFF equ 0x0
   521  0000                     global __CFG_BORV$3
   522                           __CFG_BORV$3 equ 0x0
   523  0000                     global __CFG_VREGEN$OFF
   524                           __CFG_VREGEN$OFF equ 0x0
   525  0000                     global __CFG_WDT$OFF
   526                           __CFG_WDT$OFF equ 0x0
   527  0000                     global __CFG_WDTPS$32768
   528                           __CFG_WDTPS$32768 equ 0x0
   529  0000                     global __CFG_CCP2MX$ON
   530                           __CFG_CCP2MX$ON equ 0x0
   531  0000                     global __CFG_PBADEN$OFF
   532                           __CFG_PBADEN$OFF equ 0x0
   533  0000                     global __CFG_LPT1OSC$OFF
   534                           __CFG_LPT1OSC$OFF equ 0x0
   535  0000                     global __CFG_MCLRE$ON
   536                           __CFG_MCLRE$ON equ 0x0
   537  0000                     global __CFG_STVREN$ON
   538                           __CFG_STVREN$ON equ 0x0
   539  0000                     global __CFG_LVP$OFF
   540                           __CFG_LVP$OFF equ 0x0
   541  0000                     global __CFG_XINST$OFF
   542                           __CFG_XINST$OFF equ 0x0
   543  0000                     global __CFG_CP0$OFF
   544                           __CFG_CP0$OFF equ 0x0
   545  0000                     global __CFG_CP1$OFF
   546                           __CFG_CP1$OFF equ 0x0
   547  0000                     global __CFG_CP2$OFF
   548                           __CFG_CP2$OFF equ 0x0
   549  0000                     global __CFG_CP3$OFF
   550                           __CFG_CP3$OFF equ 0x0
   551  0000                     global __CFG_CPB$OFF
   552                           __CFG_CPB$OFF equ 0x0
   553  0000                     global __CFG_CPD$OFF
   554                           __CFG_CPD$OFF equ 0x0
   555  0000                     global __CFG_WRT0$OFF
   556                           __CFG_WRT0$OFF equ 0x0
   557  0000                     global __CFG_WRT1$OFF
   558                           __CFG_WRT1$OFF equ 0x0
   559  0000                     global __CFG_WRT2$OFF
   560                           __CFG_WRT2$OFF equ 0x0
   561  0000                     global __CFG_WRT3$OFF
   562                           __CFG_WRT3$OFF equ 0x0
   563  0000                     global __CFG_WRTC$OFF
   564                           __CFG_WRTC$OFF equ 0x0
   565  0000                     global __CFG_WRTB$OFF
   566                           __CFG_WRTB$OFF equ 0x0
   567  0000                     global __CFG_WRTD$OFF
   568                           __CFG_WRTD$OFF equ 0x0
   569  0000                     global __CFG_EBTR0$OFF
   570                           __CFG_EBTR0$OFF equ 0x0
   571  0000                     global __CFG_EBTR1$OFF
   572                           __CFG_EBTR1$OFF equ 0x0
   573  0000                     global __CFG_EBTR2$OFF
   574                           __CFG_EBTR2$OFF equ 0x0
   575  0000                     global __CFG_EBTR3$OFF
   576                           __CFG_EBTR3$OFF equ 0x0
   577  0000                     global __CFG_EBTRB$OFF
   578                           __CFG_EBTRB$OFF equ 0x0
   579  0000                     	file	"C:\Users\KHALED~1\AppData\Local\Temp\saog."
   580                           	line	#
   581                           psect	cinit,class=CODE,delta=1,reloc=2
   582                           global __pcinit
   583                           __pcinit:
   584  0014F8                     global start_initialization
   585                           start_initialization:
   586  0014F8                     
   587                           global __initialization
   588                           __initialization:
   589  0014F8                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
   590                           global __pbssBANK0
   591                           __pbssBANK0:
   592  000060                     _nout:
   593  000060                            ds      2
   594  000060                     _width:
   595  000062                            ds      2
   596  000062                     _prec:
   597  000064                            ds      2
   598  000064                     _flags:
   599  000066                            ds      2
   600  000066                     	global	_AD_RES
   601                           _AD_RES:
   602  000068                            ds      2
   603  000068                     _dbuf:
   604  00006A                            ds      32
   605  00006A                     	global	_Buffer
   606                           _Buffer:
   607  00008A                            ds      10
   608  00008A                     	file	"C:\Users\KHALED~1\AppData\Local\Temp\saog."
   609                           	line	#
   610                           psect	cinit
   611                           ; Clear objects allocated to BANK0 (52 bytes)
   612                           	global __pbssBANK0
   613                           lfsr	0,__pbssBANK0
   614  0014F8  EE00  F060         movlw	52
   615  0014FC  0E34               clear_0:
   616  0014FE                     clrf	postinc0,c
   617  0014FE  6AEE               decf	wreg
   618  001500  06E8               bnz	clear_0
   619  001502  E1FD               psect cinit,class=CODE,delta=1
   620                           global end_of_initialization,__end_of__initialization
   621                           
   622                           ;End of C runtime variable initialization code
   623                           
   624                           end_of_initialization:
   625  001504                     __end_of__initialization:
   626  001504                     	GLOBAL	__Lsmallconst
   627                           	movlw	low highword(__Lsmallconst)
   628  001504  0E00               	movwf	tblptru
   629  001506  6EF8               	movlw	high(__Lsmallconst)
   630  001508  0E08               	movwf	tblptrh
   631  00150A  6EF7               movlb 0
   632  00150C  0100               goto _main	;jump to C main() function
   633  00150E  EF53  F00A         psect	cstackBANK0,class=BANK0,space=1,noexec
   634                           global __pcstackBANK0
   635                           __pcstackBANK0:
   636  000094                     	global	sprintf@ret
   637                           sprintf@ret:	; 2 bytes @ 0x0
   638  000094                     	ds   2
   639  000094                     	global	sprintf@ap
   640                           sprintf@ap:	; 2 bytes @ 0x2
   641  000096                     	ds   2
   642  000096                     	global	sprintf@f
   643                           sprintf@f:	; 6 bytes @ 0x4
   644  000098                     	ds   6
   645  000098                     ??_CVD_Touch_Sample:	; 1 bytes @ 0xA
   646  00009E                     	ds   4
   647  00009E                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   648                           global __pcstackCOMRAM
   649                           __pcstackCOMRAM:
   650  000001                     ?_ADC_Init:	; 1 bytes @ 0x0
   651  000001                     ??_ADC_Init:	; 1 bytes @ 0x0
   652  000001                     ?_UART_TX_Init:	; 1 bytes @ 0x0
   653  000001                     ??_UART_TX_Init:	; 1 bytes @ 0x0
   654  000001                     ?_CVD_Touch_Sample:	; 1 bytes @ 0x0
   655  000001                     ?_putch:	; 1 bytes @ 0x0
   656  000001                     ??_putch:	; 1 bytes @ 0x0
   657  000001                     ?_main:	; 1 bytes @ 0x0
   658  000001                     ?_UART_Write:	; 1 bytes @ 0x0
   659  000001                     ??_UART_Write:	; 1 bytes @ 0x0
   660  000001                     ?_fputc:	; 2 bytes @ 0x0
   661  000001                     	global	?_strlen
   662                           ?_strlen:	; 2 bytes @ 0x0
   663  000001                     	global	?___aodiv
   664                           ?___aodiv:	; 8 bytes @ 0x0
   665  000001                     	global	?___aomod
   666                           ?___aomod:	; 8 bytes @ 0x0
   667  000001                     	global	UART_Write@data
   668                           UART_Write@data:	; 1 bytes @ 0x0
   669  000001                     putch@c:	; 1 bytes @ 0x0
   670  000001                     	global	fputc@c
   671                           fputc@c:	; 2 bytes @ 0x0
   672  000001                     	global	strlen@s
   673                           strlen@s:	; 2 bytes @ 0x0
   674  000001                     	global	___aodiv@dividend
   675                           ___aodiv@dividend:	; 8 bytes @ 0x0
   676  000001                     	global	___aomod@dividend
   677                           ___aomod@dividend:	; 8 bytes @ 0x0
   678  000001                     	ds   1
   679  000001                     ?_UART_Write_String:	; 1 bytes @ 0x1
   680  000002                     	global	UART_Write_String@text
   681                           UART_Write_String@text:	; 2 bytes @ 0x1
   682  000002                     	ds   1
   683  000002                     ??_strlen:	; 1 bytes @ 0x2
   684  000003                     	global	fputc@fp
   685                           fputc@fp:	; 2 bytes @ 0x2
   686  000003                     	ds   1
   687  000003                     ??_UART_Write_String:	; 1 bytes @ 0x3
   688  000004                     	global	UART_Write_String@i
   689                           UART_Write_String@i:	; 2 bytes @ 0x3
   690  000004                     	ds   1
   691  000004                     ??_fputc:	; 1 bytes @ 0x4
   692  000005                     	global	strlen@a
   693                           strlen@a:	; 2 bytes @ 0x4
   694  000005                     	ds   4
   695  000005                     	global	___aodiv@divisor
   696                           ___aodiv@divisor:	; 8 bytes @ 0x8
   697  000009                     	global	___aomod@divisor
   698                           ___aomod@divisor:	; 8 bytes @ 0x8
   699  000009                     	ds   1
   700  000009                     ?_fputs:	; 2 bytes @ 0x9
   701  00000A                     	global	fputs@s
   702                           fputs@s:	; 2 bytes @ 0x9
   703  00000A                     	ds   2
   704  00000A                     	global	fputs@fp
   705                           fputs@fp:	; 2 bytes @ 0xB
   706  00000C                     	ds   2
   707  00000C                     ??_fputs:	; 1 bytes @ 0xD
   708  00000E                     	global	fputs@c
   709                           fputs@c:	; 1 bytes @ 0xD
   710  00000E                     	ds   1
   711  00000E                     	global	fputs@i
   712                           fputs@i:	; 2 bytes @ 0xE
   713  00000F                     	ds   2
   714  00000F                     ??___aodiv:	; 1 bytes @ 0x10
   715  000011                     ??___aomod:	; 1 bytes @ 0x10
   716  000011                     	global	?_pad
   717                           ?_pad:	; 2 bytes @ 0x10
   718  000011                     	global	___aodiv@counter
   719                           ___aodiv@counter:	; 1 bytes @ 0x10
   720  000011                     	global	___aomod@counter
   721                           ___aomod@counter:	; 1 bytes @ 0x10
   722  000011                     	global	pad@fp
   723                           pad@fp:	; 2 bytes @ 0x10
   724  000011                     	ds   1
   725  000011                     	global	___aodiv@sign
   726                           ___aodiv@sign:	; 1 bytes @ 0x11
   727  000012                     	global	___aomod@sign
   728                           ___aomod@sign:	; 1 bytes @ 0x11
   729  000012                     	ds   1
   730  000012                     	global	?_abs
   731                           ?_abs:	; 2 bytes @ 0x12
   732  000013                     	global	pad@buf
   733                           pad@buf:	; 2 bytes @ 0x12
   734  000013                     	global	abs@a
   735                           abs@a:	; 2 bytes @ 0x12
   736  000013                     	global	___aodiv@quotient
   737                           ___aodiv@quotient:	; 8 bytes @ 0x12
   738  000013                     	ds   2
   739  000013                     ??_abs:	; 1 bytes @ 0x14
   740  000015                     	global	pad@p
   741                           pad@p:	; 2 bytes @ 0x14
   742  000015                     	ds   2
   743  000015                     ??_pad:	; 1 bytes @ 0x16
   744  000017                     	ds   1
   745  000017                     	global	pad@i
   746                           pad@i:	; 2 bytes @ 0x17
   747  000018                     	ds   2
   748  000018                     	global	pad@w
   749                           pad@w:	; 2 bytes @ 0x19
   750  00001A                     	ds   2
   751  00001A                     	global	?_dtoa
   752                           ?_dtoa:	; 2 bytes @ 0x1B
   753  00001C                     	global	dtoa@fp
   754                           dtoa@fp:	; 2 bytes @ 0x1B
   755  00001C                     	ds   2
   756  00001C                     	global	dtoa@d
   757                           dtoa@d:	; 8 bytes @ 0x1D
   758  00001E                     	ds   8
   759  00001E                     ??_dtoa:	; 1 bytes @ 0x25
   760  000026                     	ds   8
   761  000026                     	global	_dtoa$134
   762                           _dtoa$134:	; 2 bytes @ 0x2D
   763  00002E                     	ds   2
   764  00002E                     	global	dtoa@p
   765                           dtoa@p:	; 2 bytes @ 0x2F
   766  000030                     	ds   2
   767  000030                     	global	dtoa@w
   768                           dtoa@w:	; 2 bytes @ 0x31
   769  000032                     	ds   2
   770  000032                     	global	dtoa@s
   771                           dtoa@s:	; 2 bytes @ 0x33
   772  000034                     	ds   2
   773  000034                     	global	dtoa@n
   774                           dtoa@n:	; 8 bytes @ 0x35
   775  000036                     	ds   8
   776  000036                     	global	dtoa@i
   777                           dtoa@i:	; 2 bytes @ 0x3D
   778  00003E                     	ds   2
   779  00003E                     	global	?_vfpfcnvrt
   780                           ?_vfpfcnvrt:	; 2 bytes @ 0x3F
   781  000040                     	global	vfpfcnvrt@fp
   782                           vfpfcnvrt@fp:	; 2 bytes @ 0x3F
   783  000040                     	ds   2
   784  000040                     	global	vfpfcnvrt@fmt
   785                           vfpfcnvrt@fmt:	; 2 bytes @ 0x41
   786  000042                     	ds   2
   787  000042                     	global	vfpfcnvrt@ap
   788                           vfpfcnvrt@ap:	; 2 bytes @ 0x43
   789  000044                     	ds   2
   790  000044                     ??_vfpfcnvrt:	; 1 bytes @ 0x45
   791  000046                     	ds   2
   792  000046                     	global	vfpfcnvrt@ll
   793                           vfpfcnvrt@ll:	; 8 bytes @ 0x47
   794  000048                     	ds   8
   795  000048                     	global	?_vfprintf
   796                           ?_vfprintf:	; 2 bytes @ 0x4F
   797  000050                     	global	vfprintf@fp
   798                           vfprintf@fp:	; 2 bytes @ 0x4F
   799  000050                     	ds   2
   800  000050                     	global	vfprintf@fmt
   801                           vfprintf@fmt:	; 2 bytes @ 0x51
   802  000052                     	ds   2
   803  000052                     	global	vfprintf@ap
   804                           vfprintf@ap:	; 2 bytes @ 0x53
   805  000054                     	ds   2
   806  000054                     ??_vfprintf:	; 1 bytes @ 0x55
   807  000056                     	global	vfprintf@cfmt
   808                           vfprintf@cfmt:	; 2 bytes @ 0x55
   809  000056                     	ds   2
   810  000056                     	global	?_sprintf
   811                           ?_sprintf:	; 2 bytes @ 0x57
   812  000058                     	global	sprintf@s
   813                           sprintf@s:	; 2 bytes @ 0x57
   814  000058                     	ds   2
   815  000058                     	global	sprintf@fmt
   816                           sprintf@fmt:	; 2 bytes @ 0x59
   817  00005A                     	ds   4
   818  00005A                     ??_sprintf:	; 1 bytes @ 0x5D
   819  00005E                     ??_main:	; 1 bytes @ 0x5D
   820  00005E                     	ds   1
   821  00005E                     ;!
   822                           ;!Data Sizes:
   823                           ;!    Strings     6
   824                           ;!    Constant    0
   825                           ;!    Data        0
   826                           ;!    BSS         52
   827                           ;!    Persistent  0
   828                           ;!    Stack       0
   829                           ;!
   830                           ;!Auto Spaces:
   831                           ;!    Space          Size  Autos    Used
   832                           ;!    COMRAM           95     94      94
   833                           ;!    BANK0           160     14      66
   834                           ;!    BANK1           256      0       0
   835                           ;!    BANK2           256      0       0
   836                           ;!    BANK3           256      0       0
   837                           ;!    BANK4           256      0       0
   838                           ;!    BANK5           256      0       0
   839                           ;!    BANK6           256      0       0
   840                           ;!    BANK7           256      0       0
   841                           
   842                           ;!
   843                           ;!Pointer List with Targets:
   844                           ;!
   845                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 32
   846                           ;!		 -> dbuf(BANK0[32]), 
   847                           ;!
   848                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 32
   849                           ;!		 -> dbuf(BANK0[32]), 
   850                           ;!
   851                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
   852                           ;!		 -> STR_1(CODE[6]), 
   853                           ;!
   854                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 10
   855                           ;!		 -> Buffer(BANK0[10]), 
   856                           ;!
   857                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
   858                           ;!		 -> ?_sprintf(COMRAM[2]), 
   859                           ;!
   860                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 10
   861                           ;!		 -> Buffer(BANK0[10]), 
   862                           ;!
   863                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 32
   864                           ;!		 -> dbuf(BANK0[32]), 
   865                           ;!
   866                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
   867                           ;!		 -> sprintf@f(BANK0[6]), 
   868                           ;!
   869                           ;!    S595_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
   870                           ;!		 -> Buffer(BANK0[10]), 
   871                           ;!
   872                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
   873                           ;!		 -> Buffer(BANK0[10]), 
   874                           ;!
   875                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
   876                           ;!		 -> sprintf@f(BANK0[6]), 
   877                           ;!
   878                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
   879                           ;!		 -> sprintf@ap(BANK0[2]), 
   880                           ;!
   881                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
   882                           ;!		 -> sprintf@f(BANK0[6]), 
   883                           ;!
   884                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
   885                           ;!		 -> STR_1(CODE[6]), 
   886                           ;!
   887                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
   888                           ;!		 -> STR_1(CODE[6]), 
   889                           ;!
   890                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
   891                           ;!		 -> sprintf@f(BANK0[6]), 
   892                           ;!
   893                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
   894                           ;!		 -> sprintf@ap(BANK0[2]), 
   895                           ;!
   896                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
   897                           ;!		 -> vfprintf@cfmt(COMRAM[2]), 
   898                           ;!
   899                           ;!    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
   900                           ;!		 -> sprintf@f(BANK0[6]), 
   901                           ;!
   902                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
   903                           ;!		 -> sprintf@f(BANK0[6]), 
   904                           ;!
   905                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 32
   906                           ;!		 -> dbuf(BANK0[32]), 
   907                           ;!
   908                           ;!    UART_Write_String@text	PTR unsigned char  size(2) Largest target is 10
   909                           ;!		 -> Buffer(BANK0[10]), 
   910                           ;!
   911                           
   912                           
   913                           ;!
   914                           ;!Critical Paths under _main in COMRAM
   915                           ;!
   916                           ;!    _CVD_Touch_Sample->_sprintf
   917                           ;!    _sprintf->_vfprintf
   918                           ;!    _vfprintf->_vfpfcnvrt
   919                           ;!    _vfpfcnvrt->_dtoa
   920                           ;!    _dtoa->_pad
   921                           ;!    _pad->_fputs
   922                           ;!    _fputs->_fputc
   923                           ;!    _abs->___aomod
   924                           ;!    _UART_Write_String->_UART_Write
   925                           ;!
   926                           ;!Critical Paths under _main in BANK0
   927                           ;!
   928                           ;!    _main->_CVD_Touch_Sample
   929                           ;!    _CVD_Touch_Sample->_sprintf
   930                           ;!
   931                           ;!Critical Paths under _main in BANK1
   932                           ;!
   933                           ;!    None.
   934                           ;!
   935                           ;!Critical Paths under _main in BANK2
   936                           ;!
   937                           ;!    None.
   938                           ;!
   939                           ;!Critical Paths under _main in BANK3
   940                           ;!
   941                           ;!    None.
   942                           ;!
   943                           ;!Critical Paths under _main in BANK4
   944                           ;!
   945                           ;!    None.
   946                           ;!
   947                           ;!Critical Paths under _main in BANK5
   948                           ;!
   949                           ;!    None.
   950                           ;!
   951                           ;!Critical Paths under _main in BANK6
   952                           ;!
   953                           ;!    None.
   954                           ;!
   955                           ;!Critical Paths under _main in BANK7
   956                           ;!
   957                           ;!    None.
   958                           
   959 ;;
   960 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   961 ;;
   962                           
   963                           ;!
   964                           ;!Call Graph Tables:
   965                           ;!
   966                           ;! ---------------------------------------------------------------------------------
   967                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   968                           ;! ---------------------------------------------------------------------------------
   969                           ;! (0) _main                                                 1     1      0    6644
   970                           ;!                                             93 COMRAM     1     1      0
   971                           ;!                           _ADC_Init
   972                           ;!                   _CVD_Touch_Sample
   973                           ;!                       _UART_TX_Init
   974                           ;! ---------------------------------------------------------------------------------
   975                           ;! (1) _UART_TX_Init                                         0     0      0       0
   976                           ;! ---------------------------------------------------------------------------------
   977                           ;! (1) _CVD_Touch_Sample                                     4     4      0    6644
   978                           ;!                                             10 BANK0      4     4      0
   979                           ;!                  _UART_Write_String
   980                           ;!                            _sprintf
   981                           ;! ---------------------------------------------------------------------------------
   982                           ;! (2) _sprintf                                             16    10      6    6456
   983                           ;!                                             87 COMRAM     6     0      6
   984                           ;!                                              0 BANK0     10    10      0
   985                           ;!                           _vfprintf
   986                           ;! ---------------------------------------------------------------------------------
   987                           ;! (3) _vfprintf                                             8     2      6    6105
   988                           ;!                                             79 COMRAM     8     2      6
   989                           ;!                          _vfpfcnvrt
   990                           ;! ---------------------------------------------------------------------------------
   991                           ;! (4) _vfpfcnvrt                                           42    36      6    5751
   992                           ;!                                             63 COMRAM    16    10      6
   993                           ;!                               _dtoa
   994                           ;!                              _fputc
   995                           ;! ---------------------------------------------------------------------------------
   996                           ;! (5) _dtoa                                                36    26     10    4358
   997                           ;!                                             27 COMRAM    36    26     10
   998                           ;!                            ___aodiv
   999                           ;!                            ___aomod
  1000                           ;!                                _abs
  1001                           ;!                                _pad
  1002                           ;! ---------------------------------------------------------------------------------
  1003                           ;! (6) _pad                                                 11     5      6    2709
  1004                           ;!                                             16 COMRAM    11     5      6
  1005                           ;!                              _fputc
  1006                           ;!                              _fputs
  1007                           ;!                             _strlen
  1008                           ;! ---------------------------------------------------------------------------------
  1009                           ;! (7) _strlen                                               6     4      2     166
  1010                           ;!                                              0 COMRAM     6     4      2
  1011                           ;! ---------------------------------------------------------------------------------
  1012                           ;! (7) _fputs                                                7     3      4    1235
  1013                           ;!                                              9 COMRAM     7     3      4
  1014                           ;!                              _fputc
  1015                           ;! ---------------------------------------------------------------------------------
  1016                           ;! (5) _fputc                                                9     5      4     834
  1017                           ;!                                              0 COMRAM     9     5      4
  1018                           ;!                              _putch
  1019                           ;! ---------------------------------------------------------------------------------
  1020                           ;! (6) _putch                                                1     1      0       0
  1021                           ;! ---------------------------------------------------------------------------------
  1022                           ;! (6) _abs                                                  4     2      2     142
  1023                           ;!                                             18 COMRAM     4     2      2
  1024                           ;!                            ___aomod (ARG)
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! (6) ___aomod                                             18     2     16     448
  1027                           ;!                                              0 COMRAM    18     2     16
  1028                           ;! ---------------------------------------------------------------------------------
  1029                           ;! (6) ___aodiv                                             26    10     16     452
  1030                           ;!                                              0 COMRAM    26    10     16
  1031                           ;! ---------------------------------------------------------------------------------
  1032                           ;! (2) _UART_Write_String                                    4     2      2     188
  1033                           ;!                                              1 COMRAM     4     2      2
  1034                           ;!                         _UART_Write
  1035                           ;! ---------------------------------------------------------------------------------
  1036                           ;! (3) _UART_Write                                           1     1      0      22
  1037                           ;!                                              0 COMRAM     1     1      0
  1038                           ;! ---------------------------------------------------------------------------------
  1039                           ;! (1) _ADC_Init                                             0     0      0       0
  1040                           ;! ---------------------------------------------------------------------------------
  1041                           ;! Estimated maximum stack depth 7
  1042                           ;! ---------------------------------------------------------------------------------
  1043                           ;!
  1044                           ;! Call Graph Graphs:
  1045                           ;!
  1046                           ;! _main (ROOT)
  1047                           ;!   _ADC_Init
  1048                           ;!   _CVD_Touch_Sample
  1049                           ;!     _UART_Write_String
  1050                           ;!       _UART_Write
  1051                           ;!     _sprintf
  1052                           ;!       _vfprintf
  1053                           ;!         _vfpfcnvrt
  1054                           ;!           _dtoa
  1055                           ;!             ___aodiv
  1056                           ;!             ___aomod
  1057                           ;!             _abs
  1058                           ;!               ___aomod (ARG)
  1059                           ;!             _pad
  1060                           ;!               _fputc
  1061                           ;!                 _putch
  1062                           ;!               _fputs
  1063                           ;!                 _fputc
  1064                           ;!                   _putch
  1065                           ;!               _strlen
  1066                           ;!           _fputc
  1067                           ;!             _putch
  1068                           ;!   _UART_TX_Init
  1069                           ;!
  1070                           
  1071                           ;! Address spaces:
  1072                           
  1073                           ;!Name               Size   Autos  Total    Cost      Usage
  1074                           ;!BIGRAM             7FF      0       0      21        0.0%
  1075                           ;!EEDATA             100      0       0       0        0.0%
  1076                           ;!BITBANK7           100      0       0      18        0.0%
  1077                           ;!BANK7              100      0       0      19        0.0%
  1078                           ;!BITBANK6           100      0       0      16        0.0%
  1079                           ;!BANK6              100      0       0      17        0.0%
  1080                           ;!BITBANK5           100      0       0      14        0.0%
  1081                           ;!BANK5              100      0       0      15        0.0%
  1082                           ;!BITBANK4           100      0       0      12        0.0%
  1083                           ;!BANK4              100      0       0      13        0.0%
  1084                           ;!BITBANK3           100      0       0      10        0.0%
  1085                           ;!BANK3              100      0       0      11        0.0%
  1086                           ;!BITBANK2           100      0       0       8        0.0%
  1087                           ;!BANK2              100      0       0       9        0.0%
  1088                           ;!BITBANK1           100      0       0       6        0.0%
  1089                           ;!BANK1              100      0       0       7        0.0%
  1090                           ;!BITBANK0            A0      0       0       4        0.0%
  1091                           ;!BANK0               A0      E      42       5       41.3%
  1092                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1093                           ;!COMRAM              5F     5E      5E       1       98.9%
  1094                           ;!BITSFR               0      0       0     200        0.0%
  1095                           ;!SFR                  0      0       0     200        0.0%
  1096                           ;!STACK                0      0       0       2        0.0%
  1097                           ;!NULL                 0      0       0       0        0.0%
  1098                           ;!ABS                  0      0      A0      20        0.0%
  1099                           ;!DATA                 0      0      A0       3        0.0%
  1100                           ;!CODE                 0      0       0       0        0.0%
  1101                           
  1102                           	global	_main
  1103                           
  1104 ;; *************** function _main *****************
  1105 ;; Defined at:
  1106 ;;		line 24 in file "main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1122 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1123 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1124 ;;Total ram usage:        1 bytes
  1125 ;; Hardware stack levels required when called:    9
  1126 ;; This function calls:
  1127 ;;		_ADC_Init
  1128 ;;		_CVD_Touch_Sample
  1129 ;;		_UART_TX_Init
  1130 ;; This function is called by:
  1131 ;;		Startup code after reset
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1135                           	file	"main.c"
  1136                           	line	24
  1137                           global __ptext0
  1138                           __ptext0:
  1139  0014A6                     psect	text0
  1140                           	file	"main.c"
  1141                           	line	24
  1142                           	global	__size_of_main
  1143                           	__size_of_main	equ	__end_of_main-_main
  1144  0000                     	
  1145                           _main:
  1146  0014A6                     ;incstack = 0
  1147                           	opt	stack 22
  1148                           	line	26
  1149                           	
  1150                           l1512:
  1151  0014A6                     ;main.c: 26:     ADC_Init();
  1152                           	call	_ADC_Init	;wreg free
  1153  0014A6  EC89  F00A         	line	27
  1154                           ;main.c: 27:     UART_TX_Init();
  1155                           	call	_UART_TX_Init	;wreg free
  1156  0014AA  EC94  F00A         	line	28
  1157                           	
  1158                           l1514:
  1159  0014AE                     ;main.c: 28:     TRISC0 = 0;
  1160                           	bcf	c:(31904/8),(31904)&7	;volatile
  1161  0014AE  9094               	line	29
  1162                           	
  1163                           l1516:
  1164  0014B0                     ;main.c: 29:     RC0 = 0;
  1165                           	bcf	c:(31760/8),(31760)&7	;volatile
  1166  0014B0  9082               	line	30
  1167                           	
  1168                           l1518:
  1169  0014B2                     ;main.c: 30:     TRISB0 = 0;
  1170                           	bcf	c:(31896/8),(31896)&7	;volatile
  1171  0014B2  9093               	line	31
  1172                           	
  1173                           l1520:
  1174  0014B4                     ;main.c: 31:     RB0 = 0;
  1175                           	bcf	c:(31752/8),(31752)&7	;volatile
  1176  0014B4  9081               	goto	l1522
  1177  0014B6  EF5D  F00A         	line	32
  1178                           ;main.c: 32:     while(1)
  1179                           	
  1180                           l61:
  1181  0014BA                     	line	34
  1182                           	
  1183                           l1522:
  1184  0014BA                     ;main.c: 33:     {;main.c: 34:        CVD_Touch_Sample();
  1185                           	call	_CVD_Touch_Sample	;wreg free
  1186  0014BA  EC86  F008         	line	35
  1187                           	
  1188                           l1524:
  1189  0014BE                     ;main.c: 35:        _delay((unsigned long)((10)*(48000000/4000.0)));
  1190                           	opt asmopt_push
  1191                           opt asmopt_off
  1192                           movlw	156
  1193  0014BE  0E9C               movwf	(??_main+0+0)&0ffh,c,f
  1194  0014C0  6E5E               	movlw	215
  1195  0014C2  0ED7               u1037:
  1196  0014C4                     decfsz	wreg,f
  1197  0014C4  2EE8               	bra	u1037
  1198  0014C6  D7FE               	decfsz	(??_main+0+0)&0ffh,c,f
  1199  0014C8  2E5E               	bra	u1037
  1200  0014CA  D7FC               	nop
  1201  0014CC  F000               opt asmopt_pop
  1202                           
  1203                           	goto	l1522
  1204  0014CE  EF5D  F00A         	line	36
  1205                           ;main.c: 36:     }
  1206                           	
  1207                           l62:
  1208  0014D2                     	goto	l1522
  1209  0014D2  EF5D  F00A         	
  1210                           l63:
  1211  0014D6                     	line	38
  1212                           ;main.c: 37:     return;
  1213                           	
  1214                           l64:
  1215  0014D6                     	global	start
  1216                           	goto	start
  1217  0014D6  EF00  F000         	opt stack 0
  1218                           GLOBAL	__end_of_main
  1219                           	__end_of_main:
  1220  0014DA                     	signat	_main,89
  1221                           	global	_UART_TX_Init
  1222                           
  1223 ;; *************** function _UART_TX_Init *****************
  1224 ;; Defined at:
  1225 ;;		line 48 in file "main.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1239 ;;      Params:         0       0       0       0       0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1252                           	line	48
  1253                           global __ptext1
  1254                           __ptext1:
  1255  001528                     psect	text1
  1256                           	file	"main.c"
  1257                           	line	48
  1258                           	global	__size_of_UART_TX_Init
  1259                           	__size_of_UART_TX_Init	equ	__end_of_UART_TX_Init-_UART_TX_Init
  1260  0000                     	
  1261                           _UART_TX_Init:
  1262  001528                     ;incstack = 0
  1263                           	opt	stack 30
  1264                           	line	50
  1265                           	
  1266                           l1160:
  1267  001528                     ;main.c: 50:   BRGH = 1;
  1268                           	bsf	c:(32098/8),(32098)&7	;volatile
  1269  001528  84AC               	line	51
  1270                           	
  1271                           l1162:
  1272  00152A                     ;main.c: 51:   SPBRG = 155;
  1273                           	movlw	low(09Bh)
  1274  00152A  0E9B               	movwf	((c:4015)),c	;volatile
  1275  00152C  6EAF               	line	53
  1276                           	
  1277                           l1164:
  1278  00152E                     ;main.c: 53:   SYNC = 0;
  1279                           	bcf	c:(32100/8),(32100)&7	;volatile
  1280  00152E  98AC               	line	54
  1281                           	
  1282                           l1166:
  1283  001530                     ;main.c: 54:   SPEN = 1;
  1284                           	bsf	c:(32095/8),(32095)&7	;volatile
  1285  001530  8EAB               	line	55
  1286                           	
  1287                           l1168:
  1288  001532                     ;main.c: 55:   BRG16 = 0;
  1289                           	bcf	c:(32195/8),(32195)&7	;volatile
  1290  001532  96B8               	line	57
  1291                           	
  1292                           l1170:
  1293  001534                     ;main.c: 57:   TRISC6 = 0;
  1294                           	bcf	c:(31910/8),(31910)&7	;volatile
  1295  001534  9C94               	line	58
  1296                           	
  1297                           l1172:
  1298  001536                     ;main.c: 58:   TRISC7 = 1;
  1299                           	bsf	c:(31911/8),(31911)&7	;volatile
  1300  001536  8E94               	line	59
  1301                           	
  1302                           l1174:
  1303  001538                     ;main.c: 59:   TXEN = 1;
  1304                           	bsf	c:(32101/8),(32101)&7	;volatile
  1305  001538  8AAC               	line	60
  1306                           	
  1307                           l70:
  1308  00153A                     	return	;funcret
  1309  00153A  0012               	opt stack 0
  1310                           GLOBAL	__end_of_UART_TX_Init
  1311                           	__end_of_UART_TX_Init:
  1312  00153C                     	signat	_UART_TX_Init,89
  1313                           	global	_CVD_Touch_Sample
  1314                           
  1315 ;; *************** function _CVD_Touch_Sample *****************
  1316 ;; Defined at:
  1317 ;;		line 73 in file "main.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1331 ;;      Params:         0       0       0       0       0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1333 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1334 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1335 ;;Total ram usage:        4 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    8
  1338 ;; This function calls:
  1339 ;;		_UART_Write_String
  1340 ;;		_sprintf
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1346                           	line	73
  1347                           global __ptext2
  1348                           __ptext2:
  1349  00110C                     psect	text2
  1350                           	file	"main.c"
  1351                           	line	73
  1352                           	global	__size_of_CVD_Touch_Sample
  1353                           	__size_of_CVD_Touch_Sample	equ	__end_of_CVD_Touch_Sample-_CVD_Touch_Sample
  1354  0000                     	
  1355                           _CVD_Touch_Sample:
  1356  00110C                     ;incstack = 0
  1357                           	opt	stack 22
  1358                           	line	75
  1359                           	
  1360                           l1488:
  1361  00110C                     ;main.c: 75:     ADRESH = 0x00;
  1362                           	movlw	low(0)
  1363  00110C  0E00               	movwf	((c:4036)),c	;volatile
  1364  00110E  6EC4               	line	76
  1365                           ;main.c: 76:     ADRESL = 0x00;
  1366                           	movlw	low(0)
  1367  001110  0E00               	movwf	((c:4035)),c	;volatile
  1368  001112  6EC3               	line	77
  1369                           ;main.c: 77:     ADCON0 = 0x01;
  1370                           	movlw	low(01h)
  1371  001114  0E01               	movwf	((c:4034)),c	;volatile
  1372  001116  6EC2               	line	78
  1373                           	
  1374                           l1490:
  1375  001118                     ;main.c: 78:     TRISC0 = 1;
  1376                           	bsf	c:(31904/8),(31904)&7	;volatile
  1377  001118  8094               	line	79
  1378                           ;main.c: 79:     ADCON0 = 0x05;
  1379                           	movlw	low(05h)
  1380  00111A  0E05               	movwf	((c:4034)),c	;volatile
  1381  00111C  6EC2               	line	80
  1382                           	
  1383                           l1492:
  1384  00111E                     ;main.c: 80:     GO_nDONE = 1;
  1385                           	bsf	c:(32273/8),(32273)&7	;volatile
  1386  00111E  82C2               	line	81
  1387                           ;main.c: 81:     while(GO_nDONE);
  1388                           	goto	l85
  1389  001120  EF92  F008         	
  1390                           l86:
  1391  001124                     	
  1392                           l85:
  1393  001124                     	btfsc	c:(32273/8),(32273)&7	;volatile
  1394  001124  B2C2               	goto	u981
  1395  001126  EF97  F008         	goto	u980
  1396  00112A  EF99  F008         u981:
  1397  00112E                     	goto	l85
  1398  00112E  EF92  F008         u980:
  1399  001132                     	goto	l1494
  1400  001132  EF9B  F008         	
  1401                           l87:
  1402  001136                     	line	82
  1403                           	
  1404                           l1494:
  1405  001136                     ;main.c: 82:     AD_RES = (ADRESH<<2)+(ADRESL>>6);
  1406                           	movff	(c:4035),??_CVD_Touch_Sample+0+0	;volatile
  1407  001136  CFC3 F09E          	movlw	06h
  1408  00113A  0E06               	movlb	0	; () banked
  1409  00113C  0100               	movwf	(??_CVD_Touch_Sample+1+0)&0ffh
  1410  00113E  6F9F               u995:
  1411  001140                     	bcf	status,0
  1412  001140  90D8               	rrcf	(??_CVD_Touch_Sample+0+0)&0ffh
  1413  001142  339E               	decfsz	(??_CVD_Touch_Sample+1+0)&0ffh
  1414  001144  2F9F               	goto	u995
  1415  001146  EFA0  F008         	movf	((c:4036)),c,w	;volatile
  1416  00114A  50C4               	movwf	(??_CVD_Touch_Sample+2+0)&0ffh
  1417  00114C  6FA0               	clrf	(??_CVD_Touch_Sample+2+0+1)&0ffh
  1418  00114E  6BA1               
  1419                           	bcf	status,0
  1420  001150  90D8               	rlcf	(??_CVD_Touch_Sample+2+0)&0ffh
  1421  001152  37A0               	rlcf	(??_CVD_Touch_Sample+2+1)&0ffh
  1422  001154  37A1               	bcf	status,0
  1423  001156  90D8               	rlcf	(??_CVD_Touch_Sample+2+0)&0ffh
  1424  001158  37A0               	rlcf	(??_CVD_Touch_Sample+2+1)&0ffh
  1425  00115A  37A1               	movf	(??_CVD_Touch_Sample+0+0)&0ffh,w
  1426  00115C  519E               	addwf	(??_CVD_Touch_Sample+2+0)&0ffh,w
  1427  00115E  25A0               	movwf	((_AD_RES))&0ffh
  1428  001160  6F68               	movlw	0
  1429  001162  0E00               	addwfc	(??_CVD_Touch_Sample+2+1)&0ffh,w
  1430  001164  21A1               	movwf	1+((_AD_RES))&0ffh
  1431  001166  6F69               	line	83
  1432                           	
  1433                           l1496:; BSR set to: 0
  1434  001168                     
  1435                           ;main.c: 83:     sprintf(Buffer, "%d \n\r", AD_RES);
  1436                           		movlw	low(_Buffer)
  1437  001168  0E8A               	movwf	((c:sprintf@s)),c
  1438  00116A  6E58               	movlw	high(_Buffer)
  1439  00116C  0E00               	movwf	((c:sprintf@s+1)),c
  1440  00116E  6E59               
  1441                           		movlw	low(STR_1)
  1442  001170  0E01               	movwf	((c:sprintf@fmt)),c
  1443  001172  6E5A               	movlw	high(STR_1)
  1444  001174  0E08               	movwf	((c:sprintf@fmt+1)),c
  1445  001176  6E5B               
  1446                           	movff	(_AD_RES),0+((c:?_sprintf)+04h)
  1447  001178  C068  F05C         	movff	(_AD_RES+1),1+((c:?_sprintf)+04h)
  1448  00117C  C069  F05D         	call	_sprintf	;wreg free
  1449  001180  EC8F  F009         	line	84
  1450                           	
  1451                           l1498:
  1452  001184                     ;main.c: 84:     UART_Write_String(Buffer);
  1453                           		movlw	low(_Buffer)
  1454  001184  0E8A               	movwf	((c:UART_Write_String@text)),c
  1455  001186  6E02               	movlw	high(_Buffer)
  1456  001188  0E00               	movwf	((c:UART_Write_String@text+1)),c
  1457  00118A  6E03               
  1458                           	call	_UART_Write_String	;wreg free
  1459  00118C  EC0D  F00A         	line	85
  1460                           	
  1461                           l1500:
  1462  001190                     ;main.c: 85:     if(AD_RES < 200)
  1463                           	movlb	0	; () banked
  1464  001190  0100               		movf	((_AD_RES+1))&0ffh,w
  1465  001192  5169               	bnz	u1001
  1466  001194  E107               	movlw	200
  1467  001196  0EC8               	subwf	 ((_AD_RES))&0ffh,w
  1468  001198  5D68               	btfsc	status,0
  1469  00119A  B0D8               	goto	u1001
  1470  00119C  EFD2  F008         	goto	u1000
  1471  0011A0  EFD4  F008         
  1472                           u1001:
  1473  0011A4                     	goto	l1506
  1474  0011A4  EFEC  F008         u1000:
  1475  0011A8                     	line	87
  1476                           	
  1477                           l1502:; BSR set to: 0
  1478  0011A8                     
  1479                           ;main.c: 86:     {;main.c: 87:         RB0 = ~RB0;
  1480                           	btfss	c:(31752/8),(31752)&7	;volatile
  1481  0011A8  A081               	goto	u1011
  1482  0011AA  EFD9  F008         	goto	u1010
  1483  0011AE  EFDC  F008         u1011:
  1484  0011B2                     	bsf	c:(31752/8),(31752)&7	;volatile
  1485  0011B2  8081               	goto	u1025
  1486  0011B4  EFDD  F008         u1010:
  1487  0011B8                     	bcf	c:(31752/8),(31752)&7	;volatile
  1488  0011B8  9081               u1025:
  1489  0011BA                     	line	88
  1490                           	
  1491                           l1504:
  1492  0011BA                     ;main.c: 88:         _delay((unsigned long)((200)*(48000000/4000.0)));
  1493                           	opt asmopt_push
  1494                           opt asmopt_off
  1495                           movlw  13
  1496  0011BA  0E0D               	movlb	0	; () banked
  1497  0011BC  0100               movwf	(??_CVD_Touch_Sample+0+0+1)&0ffh,f
  1498  0011BE  6F9F               movlw	45
  1499  0011C0  0E2D               movwf	(??_CVD_Touch_Sample+0+0)&0ffh,f
  1500  0011C2  6F9E               	movlw	215
  1501  0011C4  0ED7               u1047:
  1502  0011C6                     decfsz	wreg,f
  1503  0011C6  2EE8               	bra	u1047
  1504  0011C8  D7FE               	decfsz	(??_CVD_Touch_Sample+0+0)&0ffh,f
  1505  0011CA  2F9E               	bra	u1047
  1506  0011CC  D7FC               	decfsz	(??_CVD_Touch_Sample+0+0+1)&0ffh,f
  1507  0011CE  2F9F               	bra	u1047
  1508  0011D0  D7FA               	nop2
  1509  0011D2  D000               opt asmopt_pop
  1510                           
  1511                           	goto	l1506
  1512  0011D4  EFEC  F008         	line	89
  1513                           ;main.c: 89:     }
  1514                           	
  1515                           l88:
  1516  0011D8                     	line	90
  1517                           	
  1518                           l1506:
  1519  0011D8                     ;main.c: 90:     ADCON0 = 0x01;
  1520                           	movlw	low(01h)
  1521  0011D8  0E01               	movwf	((c:4034)),c	;volatile
  1522  0011DA  6EC2               	line	91
  1523                           	
  1524                           l1508:
  1525  0011DC                     ;main.c: 91:     TRISC0 = 0;
  1526                           	bcf	c:(31904/8),(31904)&7	;volatile
  1527  0011DC  9094               	line	92
  1528                           	
  1529                           l1510:
  1530  0011DE                     ;main.c: 92:     RC0 = 0;
  1531                           	bcf	c:(31760/8),(31760)&7	;volatile
  1532  0011DE  9082               	line	93
  1533                           	
  1534                           l89:
  1535  0011E0                     	return	;funcret
  1536  0011E0  0012               	opt stack 0
  1537                           GLOBAL	__end_of_CVD_Touch_Sample
  1538                           	__end_of_CVD_Touch_Sample:
  1539  0011E2                     	signat	_CVD_Touch_Sample,89
  1540                           	global	_sprintf
  1541                           
  1542 ;; *************** function _sprintf *****************
  1543 ;; Defined at:
  1544 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  s               2   87[COMRAM] PTR unsigned char 
  1547 ;;		 -> Buffer(10), 
  1548 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1549 ;;		 -> STR_1(6), 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1552 ;;  ap              2    2[BANK0 ] PTR void [1]
  1553 ;;		 -> ?_sprintf(2), 
  1554 ;;  ret             2    0[BANK0 ] int 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  2   87[COMRAM] int 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1564 ;;      Params:         6       0       0       0       0       0       0       0       0
  1565 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1567 ;;      Totals:         6      10       0       0       0       0       0       0       0
  1568 ;;Total ram usage:       16 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    7
  1571 ;; This function calls:
  1572 ;;		_vfprintf
  1573 ;; This function is called by:
  1574 ;;		_CVD_Touch_Sample
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           psect	text3,class=CODE,space=0,reloc=2,group=2
  1578                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  1579                           	line	9
  1580                           global __ptext3
  1581                           __ptext3:
  1582  00131E                     psect	text3
  1583                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  1584                           	line	9
  1585                           	global	__size_of_sprintf
  1586                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  1587  0000                     	
  1588                           _sprintf:
  1589  00131E                     ;incstack = 0
  1590                           	opt	stack 22
  1591                           	line	15
  1592                           	
  1593                           l1476:
  1594  00131E                     		movlw	low(?_sprintf+04h)
  1595  00131E  0E5C               	movlb	0	; () banked
  1596  001320  0100               	movwf	((sprintf@ap))&0ffh
  1597  001322  6F96               	movlw	high(?_sprintf+04h)
  1598  001324  0E00               	movwf	((sprintf@ap+1))&0ffh
  1599  001326  6F97               
  1600                           	line	16
  1601                           		movff	(c:sprintf@s),(sprintf@f)
  1602  001328  C058  F098         	movff	(c:sprintf@s+1),(sprintf@f+1)
  1603  00132C  C059  F099         
  1604                           	line	17
  1605                           	
  1606                           l1478:; BSR set to: 0
  1607  001330                     
  1608                           	movlw	high(0)
  1609  001330  0E00               	movwf	(1+(sprintf@f+02h))&0ffh
  1610  001332  6F9B               	movlw	low(0)
  1611  001334  0E00               	movwf	(0+(sprintf@f+02h))&0ffh
  1612  001336  6F9A               	line	18
  1613                           	
  1614                           l1480:; BSR set to: 0
  1615  001338                     
  1616                           	movlw	high(0)
  1617  001338  0E00               	movwf	(1+(sprintf@f+04h))&0ffh
  1618  00133A  6F9D               	movlw	low(0)
  1619  00133C  0E00               	movwf	(0+(sprintf@f+04h))&0ffh
  1620  00133E  6F9C               	line	19
  1621                           	
  1622                           l1482:; BSR set to: 0
  1623  001340                     
  1624                           		movlw	low(sprintf@f)
  1625  001340  0E98               	movwf	((c:vfprintf@fp)),c
  1626  001342  6E50               	movlw	high(sprintf@f)
  1627  001344  0E00               	movwf	((c:vfprintf@fp+1)),c
  1628  001346  6E51               
  1629                           		movff	(c:sprintf@fmt),(c:vfprintf@fmt)
  1630  001348  C05A  F052         	movff	(c:sprintf@fmt+1),(c:vfprintf@fmt+1)
  1631  00134C  C05B  F053         
  1632                           		movlw	low(sprintf@ap)
  1633  001350  0E96               	movwf	((c:vfprintf@ap)),c
  1634  001352  6E54               	movlw	high(sprintf@ap)
  1635  001354  0E00               	movwf	((c:vfprintf@ap+1)),c
  1636  001356  6E55               
  1637                           	call	_vfprintf	;wreg free
  1638  001358  EC5C  F009         	movff	0+?_vfprintf,(sprintf@ret)
  1639  00135C  C050  F094         	movff	1+?_vfprintf,(sprintf@ret+1)
  1640  001360  C051  F095         	line	20
  1641                           	
  1642                           l1484:
  1643  001364                     	movlb	0	; () banked
  1644  001364  0100               	movf	(0+(sprintf@f+02h))&0ffh,w
  1645  001366  519A               	addwf	((c:sprintf@s)),c,w
  1646  001368  2458               	movwf	c:fsr2l
  1647  00136A  6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
  1648  00136C  519B               	addwfc	((c:sprintf@s+1)),c,w
  1649  00136E  2059               	movwf	1+c:fsr2l
  1650  001370  6EDA               	movlw	low(0)
  1651  001372  0E00               	movwf	indf2
  1652  001374  6EDF               	goto	l869
  1653  001376  EFBD  F009         	line	22
  1654                           	
  1655                           l1486:; BSR set to: 0
  1656  00137A                     
  1657                           	line	23
  1658                           ;	Return value of _sprintf is never used
  1659                           	
  1660                           l869:; BSR set to: 0
  1661  00137A                     
  1662                           	return	;funcret
  1663  00137A  0012               	opt stack 0
  1664                           GLOBAL	__end_of_sprintf
  1665                           	__end_of_sprintf:
  1666  00137C                     	signat	_sprintf,4698
  1667                           	global	_vfprintf
  1668                           
  1669 ;; *************** function _vfprintf *****************
  1670 ;; Defined at:
  1671 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1674 ;;		 -> sprintf@f(6), 
  1675 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1676 ;;		 -> STR_1(6), 
  1677 ;;  ap              2   83[COMRAM] PTR PTR void 
  1678 ;;		 -> sprintf@ap(2), 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1681 ;;		 -> STR_1(6), 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2   79[COMRAM] int 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         6       0       0       0       0       0       0       0       0
  1692 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1694 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1695 ;;Total ram usage:        8 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    6
  1698 ;; This function calls:
  1699 ;;		_vfpfcnvrt
  1700 ;; This function is called by:
  1701 ;;		_sprintf
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           psect	text4,class=CODE,space=0,reloc=2,group=0
  1705                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1706                           	line	1368
  1707                           global __ptext4
  1708                           __ptext4:
  1709  0012B8                     psect	text4
  1710                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1711                           	line	1368
  1712                           	global	__size_of_vfprintf
  1713                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  1714  0000                     	
  1715                           _vfprintf:; BSR set to: 0
  1716  0012B8                     
  1717                           ;incstack = 0
  1718                           	opt	stack 22
  1719                           	line	1373
  1720                           	
  1721                           l1460:
  1722  0012B8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1723                           		movff	(c:vfprintf@fmt),(c:vfprintf@cfmt)
  1724  0012B8  C052  F056         	movff	(c:vfprintf@fmt+1),(c:vfprintf@cfmt+1)
  1725  0012BC  C053  F057         
  1726                           	line	1374
  1727                           	
  1728                           l1462:
  1729  0012C0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  1730                           	movlw	high(0)
  1731  0012C0  0E00               	movlb	0	; () banked
  1732  0012C2  0100               	movwf	((_nout+1))&0ffh
  1733  0012C4  6F61               	movlw	low(0)
  1734  0012C6  0E00               	movwf	((_nout))&0ffh
  1735  0012C8  6F60               	line	1375
  1736                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  1737                           	goto	l1466
  1738  0012CA  EF7C  F009         	
  1739                           l159:; BSR set to: 0
  1740  0012CE                     
  1741                           	line	1376
  1742                           	
  1743                           l1464:; BSR set to: 0
  1744  0012CE                     
  1745                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  1746                           		movff	(c:vfprintf@fp),(c:vfpfcnvrt@fp)
  1747  0012CE  C050  F040         	movff	(c:vfprintf@fp+1),(c:vfpfcnvrt@fp+1)
  1748  0012D2  C051  F041         
  1749                           		movlw	low(vfprintf@cfmt)
  1750  0012D6  0E56               	movwf	((c:vfpfcnvrt@fmt)),c
  1751  0012D8  6E42               	movlw	high(vfprintf@cfmt)
  1752  0012DA  0E00               	movwf	((c:vfpfcnvrt@fmt+1)),c
  1753  0012DC  6E43               
  1754                           		movff	(c:vfprintf@ap),(c:vfpfcnvrt@ap)
  1755  0012DE  C054  F044         	movff	(c:vfprintf@ap+1),(c:vfpfcnvrt@ap+1)
  1756  0012E2  C055  F045         
  1757                           	call	_vfpfcnvrt	;wreg free
  1758  0012E6  EC93  F005         	movf	(0+?_vfpfcnvrt),c,w
  1759  0012EA  5040               	movlb	0	; () banked
  1760  0012EC  0100               	addwf	((_nout))&0ffh
  1761  0012EE  2760               	movf	(1+?_vfpfcnvrt),c,w
  1762  0012F0  5041               	addwfc	((_nout+1))&0ffh
  1763  0012F2  2361               
  1764                           	goto	l1466
  1765  0012F4  EF7C  F009         	line	1377
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  1767                           	
  1768                           l158:; BSR set to: 0
  1769  0012F8                     
  1770                           	line	1375
  1771                           	
  1772                           l1466:; BSR set to: 0
  1773  0012F8                     
  1774                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  1775                           	movff	(c:vfprintf@cfmt),tblptrl
  1776  0012F8  C056  FFF6         	movff	(c:vfprintf@cfmt+1),tblptrh
  1777  0012FC  C057  FFF7         	if	0	;tblptru may be non-zero
  1778  001300                     	clrf	tblptru
  1780  001300                     	if	0	;tblptru may be non-zero
  1781  001300                     	global __mediumconst
  1782                           movlw	low highword(__mediumconst)
  1785  001300                     	tblrd	*
  1786  001300  0008               	
  1787                           	movf	tablat,w
  1788  001302  50F5               	iorlw	0
  1789  001304  0900               	btfss	status,2
  1790  001306  A4D8               	goto	u961
  1791  001308  EF88  F009         	goto	u960
  1792  00130C  EF8A  F009         u961:
  1793  001310                     	goto	l1464
  1794  001310  EF67  F009         u960:
  1795  001314                     	
  1796                           l160:; BSR set to: 0
  1797  001314                     
  1798                           	line	1378
  1799                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  1800                           	movff	(_nout),(c:?_vfprintf)
  1801  001314  C060  F050         	movff	(_nout+1),(c:?_vfprintf+1)
  1802  001318  C061  F051         	line	1382
  1803                           	
  1804                           l161:; BSR set to: 0
  1805  00131C                     
  1806                           	return	;funcret
  1807  00131C  0012               	opt stack 0
  1808                           GLOBAL	__end_of_vfprintf
  1809                           	__end_of_vfprintf:
  1810  00131E                     	signat	_vfprintf,12410
  1811                           	global	_vfpfcnvrt
  1812                           
  1813 ;; *************** function _vfpfcnvrt *****************
  1814 ;; Defined at:
  1815 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1818 ;;		 -> sprintf@f(6), 
  1819 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1820 ;;		 -> vfprintf@cfmt(2), 
  1821 ;;  ap              2   67[COMRAM] PTR PTR void 
  1822 ;;		 -> sprintf@ap(2), 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  ll              8   71[COMRAM] long long 
  1825 ;;  llu             8    0        unsigned long long 
  1826 ;;  f               4    0        unsigned long long 
  1827 ;;  vp              3    0        PTR void 
  1828 ;;  ct              3    0        unsigned char [3]
  1829 ;;  cp              3    0        PTR unsigned char 
  1830 ;;  i               2    0        int 
  1831 ;;  done            2    0        int 
  1832 ;;  c               1    0        unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  2   63[COMRAM] int 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1842 ;;      Params:         6       0       0       0       0       0       0       0       0
  1843 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1844 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1845 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1846 ;;Total ram usage:       16 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    5
  1849 ;; This function calls:
  1850 ;;		_dtoa
  1851 ;;		_fputc
  1852 ;; This function is called by:
  1853 ;;		_vfprintf
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           psect	text5,class=CODE,space=0,reloc=2,group=0
  1857                           	line	670
  1858                           global __ptext5
  1859                           __ptext5:
  1860  000B26                     psect	text5
  1861                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1862                           	line	670
  1863                           	global	__size_of_vfpfcnvrt
  1864                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  1865  0000                     	
  1866                           _vfpfcnvrt:; BSR set to: 0
  1867  000B26                     
  1868                           ;incstack = 0
  1869                           	opt	stack 22
  1870                           	line	680
  1871                           	
  1872                           l1414:
  1873  000B26                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1874                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1875  000B26  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1876  000B2A  C043  FFDA         	movff	postinc2,tblptrl
  1877  000B2E  CFDE FFF6          	movff	postdec2,tblptrh
  1878  000B32  CFDD FFF7          	if	0	;tblptru may be non-zero
  1879  000B36                     	clrf	tblptru
  1881  000B36                     	if	0	;tblptru may be non-zero
  1882  000B36                     	global __mediumconst
  1883                           movlw	low highword(__mediumconst)
  1886  000B36                     	tblrd	*
  1887  000B36  0008               	
  1888                           	movf	tablat,w
  1889  000B38  50F5               	xorlw	025h
  1890  000B3A  0A25               	btfss	status,2
  1891  000B3C  A4D8               	goto	u911
  1892  000B3E  EFA3  F005         	goto	u910
  1893  000B42  EFA5  F005         u911:
  1894  000B46                     	goto	l1448
  1895  000B46  EF59  F006         u910:
  1896  000B4A                     	line	681
  1897                           	
  1898                           l1416:
  1899  000B4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  1900                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1901  000B4A  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1902  000B4E  C043  FFDA         	incf	postinc2
  1903  000B52  2ADE               	movlw	0
  1904  000B54  0E00               	addwfc	postdec2
  1905  000B56  22DD               	line	683
  1906                           	
  1907                           l1418:
  1908  000B58                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  1909                           	movlw	high(0)
  1910  000B58  0E00               	movlb	0	; () banked
  1911  000B5A  0100               	movwf	((_width+1))&0ffh
  1912  000B5C  6F63               	movlw	low(0)
  1913  000B5E  0E00               	movwf	((_width))&0ffh
  1914  000B60  6F62               	movff	(_width),(_flags)
  1915  000B62  C062  F066         	movff	(_width+1),(_flags+1)
  1916  000B66  C063  F067         	line	684
  1917                           	
  1918                           l1420:; BSR set to: 0
  1919  000B6A                     
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  1921                           	setf	((_prec))&0ffh
  1922  000B6A  6964               	setf	((_prec+1))&0ffh
  1923  000B6C  6965               	line	825
  1924                           	
  1925                           l1422:; BSR set to: 0
  1926  000B6E                     
  1927                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:       
                                   if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1928                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1929  000B6E  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1930  000B72  C043  FFDA         	movff	postinc2,tblptrl
  1931  000B76  CFDE FFF6          	movff	postdec2,tblptrh
  1932  000B7A  CFDD FFF7          	if	0	;tblptru may be non-zero
  1933  000B7E                     	clrf	tblptru
  1935  000B7E                     	if	0	;tblptru may be non-zero
  1936  000B7E                     	global __mediumconst
  1937                           movlw	low highword(__mediumconst)
  1940  000B7E                     	tblrd	*
  1941  000B7E  0008               	
  1942                           	movf	tablat,w
  1943  000B80  50F5               	xorlw	064h
  1944  000B82  0A64               	btfsc	status,2
  1945  000B84  B4D8               	goto	u921
  1946  000B86  EFC7  F005         	goto	u920
  1947  000B8A  EFC9  F005         u921:
  1948  000B8E                     	goto	l1426
  1949  000B8E  EFDD  F005         u920:
  1950  000B92                     	
  1951                           l1424:; BSR set to: 0
  1952  000B92                     
  1953                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1954  000B92  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1955  000B96  C043  FFDA         	movff	postinc2,tblptrl
  1956  000B9A  CFDE FFF6          	movff	postdec2,tblptrh
  1957  000B9E  CFDD FFF7          	if	0	;tblptru may be non-zero
  1958  000BA2                     	clrf	tblptru
  1960  000BA2                     	if	0	;tblptru may be non-zero
  1961  000BA2                     	global __mediumconst
  1962                           movlw	low highword(__mediumconst)
  1965  000BA2                     	tblrd	*
  1966  000BA2  0008               	
  1967                           	movf	tablat,w
  1968  000BA4  50F5               	xorlw	069h
  1969  000BA6  0A69               	btfss	status,2
  1970  000BA8  A4D8               	goto	u931
  1971  000BAA  EFD9  F005         	goto	u930
  1972  000BAE  EFDB  F005         u931:
  1973  000BB2                     	goto	l1432
  1974  000BB2  EF1F  F006         u930:
  1975  000BB6                     	goto	l1426
  1976  000BB6  EFDD  F005         	
  1977                           l153:; BSR set to: 0
  1978  000BBA                     
  1979                           	line	827
  1980                           	
  1981                           l1426:; BSR set to: 0
  1982  000BBA                     
  1983                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:       
                                       ++*fmt;
  1984                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  1985  000BBA  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  1986  000BBE  C043  FFDA         	incf	postinc2
  1987  000BC2  2ADE               	movlw	0
  1988  000BC4  0E00               	addwfc	postdec2
  1989  000BC6  22DD               	line	828
  1990                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:       
                                       ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1991                           	movff	(c:vfpfcnvrt@ap),fsr2l
  1992  000BC8  C044  FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  1993  000BCC  C045  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  1994  000BD0  CFDF F046          	movlw	low(02h)
  1995  000BD4  0E02               	addwf	postinc2
  1996  000BD6  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  1997  000BD8  CFDF F047          	movlw	high(02h)
  1998  000BDC  0E00               	addwfc	postdec2
  1999  000BDE  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  2000  000BE0  C046  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  2001  000BE4  C047  FFDA         	movff	postinc2,(c:vfpfcnvrt@ll)
  2002  000BE8  CFDE F048          	movff	postdec2,(c:vfpfcnvrt@ll+1)
  2003  000BEC  CFDD F049          	movlw	0
  2004  000BF0  0E00               	btfsc	((c:vfpfcnvrt@ll+1)),c,7
  2005  000BF2  BE49               	movlw	-1
  2006  000BF4  0EFF               	movwf	((c:vfpfcnvrt@ll+2)),c
  2007  000BF6  6E4A               	movwf	((c:vfpfcnvrt@ll+3)),c
  2008  000BF8  6E4B               	movwf	((c:vfpfcnvrt@ll+4)),c
  2009  000BFA  6E4C               	movwf	((c:vfpfcnvrt@ll+5)),c
  2010  000BFC  6E4D               	movwf	((c:vfpfcnvrt@ll+6)),c
  2011  000BFE  6E4E               	movwf	((c:vfpfcnvrt@ll+7)),c
  2012  000C00  6E4F               	line	830
  2013                           	
  2014                           l1428:; BSR set to: 0
  2015  000C02                     
  2016                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:       
                                       return dtoa(fp, ll);
  2017                           		movff	(c:vfpfcnvrt@fp),(c:dtoa@fp)
  2018  000C02  C040  F01C         	movff	(c:vfpfcnvrt@fp+1),(c:dtoa@fp+1)
  2019  000C06  C041  F01D         
  2020                           	movff	(c:vfpfcnvrt@ll),(c:dtoa@d)
  2021  000C0A  C048  F01E         	movff	(c:vfpfcnvrt@ll+1),(c:dtoa@d+1)
  2022  000C0E  C049  F01F         	movff	(c:vfpfcnvrt@ll+2),(c:dtoa@d+2)
  2023  000C12  C04A  F020         	movff	(c:vfpfcnvrt@ll+3),(c:dtoa@d+3)
  2024  000C16  C04B  F021         	movff	(c:vfpfcnvrt@ll+4),(c:dtoa@d+4)
  2025  000C1A  C04C  F022         	movff	(c:vfpfcnvrt@ll+5),(c:dtoa@d+5)
  2026  000C1E  C04D  F023         	movff	(c:vfpfcnvrt@ll+6),(c:dtoa@d+6)
  2027  000C22  C04E  F024         	movff	(c:vfpfcnvrt@ll+7),(c:dtoa@d+7)
  2028  000C26  C04F  F025         	call	_dtoa	;wreg free
  2029  000C2A  EC04  F004         	movff	0+?_dtoa,(c:?_vfpfcnvrt)
  2030  000C2E  C01C  F040         	movff	1+?_dtoa,(c:?_vfpfcnvrt+1)
  2031  000C32  C01D  F041         	goto	l154
  2032  000C36  EF78  F006         	
  2033                           l1430:
  2034  000C3A                     	goto	l154
  2035  000C3A  EF78  F006         	line	831
  2036                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 831:       
                                   }
  2037                           	
  2038                           l151:
  2039  000C3E                     	line	1350
  2040                           	
  2041                           l1432:
  2042  000C3E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  2043                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2044  000C3E  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2045  000C42  C043  FFDA         	movff	postinc2,tblptrl
  2046  000C46  CFDE FFF6          	movff	postdec2,tblptrh
  2047  000C4A  CFDD FFF7          	if	0	;tblptru may be non-zero
  2048  000C4E                     	clrf	tblptru
  2050  000C4E                     	if	0	;tblptru may be non-zero
  2051  000C4E                     	global __mediumconst
  2052                           movlw	low highword(__mediumconst)
  2055  000C4E                     	tblrd	*
  2056  000C4E  0008               	
  2057                           	movf	tablat,w
  2058  000C50  50F5               	xorlw	025h
  2059  000C52  0A25               	btfss	status,2
  2060  000C54  A4D8               	goto	u941
  2061  000C56  EF2F  F006         	goto	u940
  2062  000C5A  EF31  F006         u941:
  2063  000C5E                     	goto	l1442
  2064  000C5E  EF4A  F006         u940:
  2065  000C62                     	line	1351
  2066                           	
  2067                           l1434:
  2068  000C62                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  2069                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2070  000C62  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2071  000C66  C043  FFDA         	incf	postinc2
  2072  000C6A  2ADE               	movlw	0
  2073  000C6C  0E00               	addwfc	postdec2
  2074  000C6E  22DD               	line	1352
  2075                           	
  2076                           l1436:
  2077  000C70                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  2078                           	movlw	high(025h)
  2079  000C70  0E00               	movwf	((c:fputc@c+1)),c
  2080  000C72  6E02               	movlw	low(025h)
  2081  000C74  0E25               	movwf	((c:fputc@c)),c
  2082  000C76  6E01               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  2083  000C78  C040  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  2084  000C7C  C041  F004         
  2085                           	call	_fputc	;wreg free
  2086  000C80  EC17  F008         	line	1353
  2087                           	
  2088                           l1438:
  2089  000C84                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  2090                           	movlw	high(01h)
  2091  000C84  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2092  000C86  6E41               	movlw	low(01h)
  2093  000C88  0E01               	movwf	((c:?_vfpfcnvrt)),c
  2094  000C8A  6E40               	goto	l154
  2095  000C8C  EF78  F006         	
  2096                           l1440:
  2097  000C90                     	goto	l154
  2098  000C90  EF78  F006         	line	1354
  2099                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  2100                           	
  2101                           l155:
  2102  000C94                     	line	1357
  2103                           	
  2104                           l1442:
  2105  000C94                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  2106                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2107  000C94  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2108  000C98  C043  FFDA         	incf	postinc2
  2109  000C9C  2ADE               	movlw	0
  2110  000C9E  0E00               	addwfc	postdec2
  2111  000CA0  22DD               	line	1358
  2112                           	
  2113                           l1444:
  2114  000CA2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  2115                           	movlw	high(0)
  2116  000CA2  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2117  000CA4  6E41               	movlw	low(0)
  2118  000CA6  0E00               	movwf	((c:?_vfpfcnvrt)),c
  2119  000CA8  6E40               	goto	l154
  2120  000CAA  EF78  F006         	
  2121                           l1446:
  2122  000CAE                     	goto	l154
  2123  000CAE  EF78  F006         	line	1359
  2124                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  2125                           	
  2126                           l150:
  2127  000CB2                     	line	1362
  2128                           	
  2129                           l1448:
  2130  000CB2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  2131                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2132  000CB2  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2133  000CB6  C043  FFDA         	movff	postinc2,tblptrl
  2134  000CBA  CFDE FFF6          	movff	postdec2,tblptrh
  2135  000CBE  CFDD FFF7          	if	0	;tblptru may be non-zero
  2136  000CC2                     	clrf	tblptru
  2138  000CC2                     	if	0	;tblptru may be non-zero
  2139  000CC2                     	global __mediumconst
  2140                           movlw	low highword(__mediumconst)
  2143  000CC2                     	tblrd	*
  2144  000CC2  0008               	
  2145                           	movf	tablat,w
  2146  000CC4  50F5               
  2147                           	movwf	((c:fputc@c)),c
  2148  000CC6  6E01               	clrf	((c:fputc@c+1)),c
  2149  000CC8  6A02               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  2150  000CCA  C040  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  2151  000CCE  C041  F004         
  2152                           	call	_fputc	;wreg free
  2153  000CD2  EC17  F008         	line	1363
  2154                           	
  2155                           l1450:
  2156  000CD6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  2157                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2158  000CD6  C042  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2159  000CDA  C043  FFDA         	incf	postinc2
  2160  000CDE  2ADE               	movlw	0
  2161  000CE0  0E00               	addwfc	postdec2
  2162  000CE2  22DD               	line	1364
  2163                           	
  2164                           l1452:
  2165  000CE4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  2166                           	movlw	high(01h)
  2167  000CE4  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  2168  000CE6  6E41               	movlw	low(01h)
  2169  000CE8  0E01               	movwf	((c:?_vfpfcnvrt)),c
  2170  000CEA  6E40               	goto	l154
  2171  000CEC  EF78  F006         	
  2172                           l1454:
  2173  000CF0                     	line	1365
  2174                           	
  2175                           l154:
  2176  000CF0                     	return	;funcret
  2177  000CF0  0012               	opt stack 0
  2178                           GLOBAL	__end_of_vfpfcnvrt
  2179                           	__end_of_vfpfcnvrt:
  2180  000CF2                     	signat	_vfpfcnvrt,12410
  2181                           	global	_dtoa
  2182                           
  2183 ;; *************** function _dtoa *****************
  2184 ;; Defined at:
  2185 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2188 ;;		 -> sprintf@f(6), 
  2189 ;;  d               8   29[COMRAM] long long 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  n               8   53[COMRAM] long long 
  2192 ;;  i               2   61[COMRAM] int 
  2193 ;;  s               2   51[COMRAM] int 
  2194 ;;  w               2   49[COMRAM] int 
  2195 ;;  p               2   47[COMRAM] int 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  2   27[COMRAM] int 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2205 ;;      Params:        10       0       0       0       0       0       0       0       0
  2206 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2207 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2208 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2209 ;;Total ram usage:       36 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    4
  2212 ;; This function calls:
  2213 ;;		___aodiv
  2214 ;;		___aomod
  2215 ;;		_abs
  2216 ;;		_pad
  2217 ;; This function is called by:
  2218 ;;		_vfpfcnvrt
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           psect	text6,class=CODE,space=0,reloc=2,group=0
  2222                           	line	274
  2223                           global __ptext6
  2224                           __ptext6:
  2225  000808                     psect	text6
  2226                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2227                           	line	274
  2228                           	global	__size_of_dtoa
  2229                           	__size_of_dtoa	equ	__end_of_dtoa-_dtoa
  2230  0000                     	
  2231                           _dtoa:
  2232  000808                     ;incstack = 0
  2233                           	opt	stack 22
  2234                           	line	280
  2235                           	
  2236                           l1352:
  2237  000808                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static
                                  int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\
                                 c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\c
                                 ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\
                                 sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
                                 v2.00\pic\sources\c99\common\doprnt.c: 280:     n = d;
  2238                           	movff	(c:dtoa@d),(c:dtoa@n)
  2239  000808  C01E  F036         	movff	(c:dtoa@d+1),(c:dtoa@n+1)
  2240  00080C  C01F  F037         	movff	(c:dtoa@d+2),(c:dtoa@n+2)
  2241  000810  C020  F038         	movff	(c:dtoa@d+3),(c:dtoa@n+3)
  2242  000814  C021  F039         	movff	(c:dtoa@d+4),(c:dtoa@n+4)
  2243  000818  C022  F03A         	movff	(c:dtoa@d+5),(c:dtoa@n+5)
  2244  00081C  C023  F03B         	movff	(c:dtoa@d+6),(c:dtoa@n+6)
  2245  000820  C024  F03C         	movff	(c:dtoa@d+7),(c:dtoa@n+7)
  2246  000824  C025  F03D         	line	281
  2247                           	
  2248                           l1354:
  2249  000828                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s 
                                 = n < 0 ? 1 : 0;
  2250                           	btfsc	((c:dtoa@n+7)),c,7
  2251  000828  BE3D               	goto	u761
  2252  00082A  EF19  F004         	goto	u760
  2253  00082E  EF1C  F004         
  2254                           u761:
  2255  000832                     	movlw	1
  2256  000832  0E01               	goto	u770
  2257  000834  EF1D  F004         u760:
  2258  000838                     	movlw	0
  2259  000838  0E00               u770:
  2260  00083A                     	movwf	((c:dtoa@s)),c
  2261  00083A  6E34               	clrf	((c:dtoa@s+1)),c
  2262  00083C  6A35               	line	282
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if
                                  (s) {
  2264                           	movf	((c:dtoa@s)),c,w
  2265  00083E  5034               iorwf	((c:dtoa@s+1)),c,w
  2266  000840  1035               	btfsc	status,2
  2267  000842  B4D8               	goto	u781
  2268  000844  EF26  F004         	goto	u780
  2269  000848  EF28  F004         
  2270                           u781:
  2271  00084C                     	goto	l1358
  2272  00084C  EF3A  F004         u780:
  2273  000850                     	line	283
  2274                           	
  2275                           l1356:
  2276  000850                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:       
                                   n = -n;
  2277                           	comf	((c:dtoa@n+7)),c
  2278  000850  1E3D               	comf	((c:dtoa@n+6)),c
  2279  000852  1E3C               	comf	((c:dtoa@n+5)),c
  2280  000854  1E3B               	comf	((c:dtoa@n+4)),c
  2281  000856  1E3A               	comf	((c:dtoa@n+3)),c
  2282  000858  1E39               	comf	((c:dtoa@n+2)),c
  2283  00085A  1E38               	comf	((c:dtoa@n+1)),c
  2284  00085C  1E37               	negf	((c:dtoa@n)),c
  2285  00085E  6C36               	movlw	0
  2286  000860  0E00               	addwfc	((c:dtoa@n+1)),c
  2287  000862  2237               	addwfc	((c:dtoa@n+2)),c
  2288  000864  2238               	addwfc	((c:dtoa@n+3)),c
  2289  000866  2239               	addwfc	((c:dtoa@n+4)),c
  2290  000868  223A               	addwfc	((c:dtoa@n+5)),c
  2291  00086A  223B               	addwfc	((c:dtoa@n+6)),c
  2292  00086C  223C               	addwfc	((c:dtoa@n+7)),c
  2293  00086E  223D               	goto	l1358
  2294  000870  EF3A  F004         	line	284
  2295                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 284:     }

  2296                           	
  2297                           l124:
  2298  000874                     	line	287
  2299                           	
  2300                           l1358:
  2301  000874                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if
                                  (!(prec < 0)) {
  2302                           	movlb	0	; () banked
  2303  000874  0100               	btfsc	((_prec+1))&0ffh,7
  2304  000876  BF65               	goto	u791
  2305  000878  EF40  F004         	goto	u790
  2306  00087C  EF42  F004         
  2307                           u791:
  2308  000880                     	goto	l1362
  2309  000880  EF45  F004         u790:
  2310  000884                     	line	288
  2311                           	
  2312                           l1360:; BSR set to: 0
  2313  000884                     
  2314                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:       
                                   flags &= ~(1 << 1);
  2315                           	bcf	(0+(1/8)+(_flags))&0ffh,(1)&7
  2316  000884  9366               	goto	l1362
  2317  000886  EF45  F004         	line	289
  2318                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }

  2319                           	
  2320                           l125:; BSR set to: 0
  2321  00088A                     
  2322                           	line	290
  2323                           	
  2324                           l1362:; BSR set to: 0
  2325  00088A                     
  2326                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p 
                                 = (0 < prec) ? prec : 1;
  2327                           	btfsc	((_prec+1))&0ffh,7
  2328  00088A  BF65               	goto	u800
  2329  00088C  EF52  F004         	movf	((_prec+1))&0ffh,w
  2330  000890  5165               	bnz	u801
  2331  000892  E106               	decf	((_prec))&0ffh,w
  2332  000894  0564               	btfsc	status,0
  2333  000896  B0D8               	goto	u801
  2334  000898  EF50  F004         	goto	u800
  2335  00089C  EF52  F004         
  2336                           u801:
  2337  0008A0                     	goto	l127
  2338  0008A0  EF58  F004         u800:
  2339  0008A4                     	
  2340                           l1364:; BSR set to: 0
  2341  0008A4                     
  2342                           	movlw	high(01h)
  2343  0008A4  0E00               	movwf	((c:dtoa@p+1)),c
  2344  0008A6  6E31               	movlw	low(01h)
  2345  0008A8  0E01               	movwf	((c:dtoa@p)),c
  2346  0008AA  6E30               	goto	l129
  2347  0008AC  EF5C  F004         	
  2348                           l127:; BSR set to: 0
  2349  0008B0                     
  2350                           	movff	(_prec),(c:dtoa@p)
  2351  0008B0  C064  F030         	movff	(_prec+1),(c:dtoa@p+1)
  2352  0008B4  C065  F031         	
  2353                           l129:; BSR set to: 0
  2354  0008B8                     
  2355                           	line	291
  2356                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w 
                                 = width;
  2357                           	movff	(_width),(c:dtoa@w)
  2358  0008B8  C062  F032         	movff	(_width+1),(c:dtoa@w+1)
  2359  0008BC  C063  F033         	line	292
  2360                           	
  2361                           l1366:; BSR set to: 0
  2362  0008C0                     
  2363                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if
                                  (s || (flags & (1 << 2))) {
  2364                           	movf	((c:dtoa@s)),c,w
  2365  0008C0  5034               iorwf	((c:dtoa@s+1)),c,w
  2366  0008C2  1035               	btfss	status,2
  2367  0008C4  A4D8               	goto	u811
  2368  0008C6  EF67  F004         	goto	u810
  2369  0008CA  EF69  F004         
  2370                           u811:
  2371  0008CE                     	goto	l1370
  2372  0008CE  EF72  F004         u810:
  2373  0008D2                     	
  2374                           l1368:; BSR set to: 0
  2375  0008D2                     
  2376                           	
  2377                           	btfss	((_flags))&0ffh,(2)&7
  2378  0008D2  A566               	goto	u821
  2379  0008D4  EF6E  F004         	goto	u820
  2380  0008D8  EF70  F004         u821:
  2381  0008DC                     	goto	l1372
  2382  0008DC  EF77  F004         u820:
  2383  0008E0                     	goto	l1370
  2384  0008E0  EF72  F004         	
  2385                           l132:; BSR set to: 0
  2386  0008E4                     
  2387                           	line	293
  2388                           	
  2389                           l1370:; BSR set to: 0
  2390  0008E4                     
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:       
                                   --w;
  2392                           	decf	((c:dtoa@w)),c
  2393  0008E4  0632               	btfss	status,0
  2394  0008E6  A0D8               	decf	((c:dtoa@w+1)),c
  2395  0008E8  0633               	goto	l1372
  2396  0008EA  EF77  F004         	line	294
  2397                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 294:     }

  2398                           	
  2399                           l130:; BSR set to: 0
  2400  0008EE                     
  2401                           	line	297
  2402                           	
  2403                           l1372:; BSR set to: 0
  2404  0008EE                     
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i 
                                 = sizeof(dbuf) - 1;
  2406                           	movlw	high(01Fh)
  2407  0008EE  0E00               	movwf	((c:dtoa@i+1)),c
  2408  0008F0  6E3F               	movlw	low(01Fh)
  2409  0008F2  0E1F               	movwf	((c:dtoa@i)),c
  2410  0008F4  6E3E               	line	298
  2411                           	
  2412                           l1374:; BSR set to: 0
  2413  0008F6                     
  2414                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     db
                                 uf[i] = '\0';
  2415                           	movlw	low(_dbuf)
  2416  0008F6  0E6A               	addwf	((c:dtoa@i)),c,w
  2417  0008F8  243E               	movwf	c:fsr2l
  2418  0008FA  6ED9               	movlw	high(_dbuf)
  2419  0008FC  0E00               	addwfc	((c:dtoa@i+1)),c,w
  2420  0008FE  203F               	movwf	1+c:fsr2l
  2421  000900  6EDA               	movlw	low(0)
  2422  000902  0E00               	movwf	indf2
  2423  000904  6EDF               	line	299
  2424                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2425                           	goto	l1386
  2426  000906  EF03  F005         	
  2427                           l134:; BSR set to: 0
  2428  00090A                     
  2429                           	line	300
  2430                           	
  2431                           l1376:
  2432  00090A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:       
                                   --i;
  2433                           	decf	((c:dtoa@i)),c
  2434  00090A  063E               	btfss	status,0
  2435  00090C  A0D8               	decf	((c:dtoa@i+1)),c
  2436  00090E  063F               	line	301
  2437                           	
  2438                           l1378:
  2439  000910                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:       
                                   dbuf[i] = '0' + abs(n % 10);
  2440                           	movlw	low(_dbuf)
  2441  000910  0E6A               	addwf	((c:dtoa@i)),c,w
  2442  000912  243E               	movwf	c:fsr2l
  2443  000914  6ED9               	movlw	high(_dbuf)
  2444  000916  0E00               	addwfc	((c:dtoa@i+1)),c,w
  2445  000918  203F               	movwf	1+c:fsr2l
  2446  00091A  6EDA               	movff	(c:dtoa@n),(c:___aomod@dividend)
  2447  00091C  C036  F001         	movff	(c:dtoa@n+1),(c:___aomod@dividend+1)
  2448  000920  C037  F002         	movff	(c:dtoa@n+2),(c:___aomod@dividend+2)
  2449  000924  C038  F003         	movff	(c:dtoa@n+3),(c:___aomod@dividend+3)
  2450  000928  C039  F004         	movff	(c:dtoa@n+4),(c:___aomod@dividend+4)
  2451  00092C  C03A  F005         	movff	(c:dtoa@n+5),(c:___aomod@dividend+5)
  2452  000930  C03B  F006         	movff	(c:dtoa@n+6),(c:___aomod@dividend+6)
  2453  000934  C03C  F007         	movff	(c:dtoa@n+7),(c:___aomod@dividend+7)
  2454  000938  C03D  F008         	movlw	byte0(0Ah)
  2455  00093C  0E0A               	movwf	((c:___aomod@divisor)),c
  2456  00093E  6E09               	movlw	byte1(0Ah)
  2457  000940  0E00               	movwf	((c:___aomod@divisor+1)),c
  2458  000942  6E0A               	movlw	byte2(0Ah)
  2459  000944  0E00               	movwf	((c:___aomod@divisor+2)),c
  2460  000946  6E0B               	movlw	byte3(0Ah)
  2461  000948  0E00               	movwf	((c:___aomod@divisor+3)),c
  2462  00094A  6E0C               	movlw	byte4(0Ah)
  2463  00094C  0E00               	movwf	((c:___aomod@divisor+4)),c
  2464  00094E  6E0D               	movlw	byte5(0Ah)
  2465  000950  0E00               	movwf	((c:___aomod@divisor+5)),c
  2466  000952  6E0E               	movlw	byte6(0Ah)
  2467  000954  0E00               	movwf	((c:___aomod@divisor+6)),c
  2468  000956  6E0F               	movlw	byte7(0Ah)
  2469  000958  0E00               	movwf	((c:___aomod@divisor+7)),c
  2470  00095A  6E10               	call	___aomod	;wreg free
  2471  00095C  EC51  F007         	movff	0+?___aomod,??_dtoa+0+0
  2472  000960  C001  F026         	movff	1+?___aomod,??_dtoa+0+0+1
  2473  000964  C002  F027         	movff	2+?___aomod,??_dtoa+0+0+2
  2474  000968  C003  F028         	movff	3+?___aomod,??_dtoa+0+0+3
  2475  00096C  C004  F029         	movff	4+?___aomod,??_dtoa+0+0+4
  2476  000970  C005  F02A         	movff	5+?___aomod,??_dtoa+0+0+5
  2477  000974  C006  F02B         	movff	6+?___aomod,??_dtoa+0+0+6
  2478  000978  C007  F02C         	movff	7+?___aomod,??_dtoa+0+0+7
  2479  00097C  C008  F02D         	
  2480                           	movff	??_dtoa+0+0,(c:abs@a)
  2481  000980  C026  F013         	movff	??_dtoa+0+2,(c:abs@a+1)
  2482  000984  C028  F014         	call	_abs	;wreg free
  2483  000988  EC31  F00A         	movf	(0+?_abs),c,w
  2484  00098C  5013               	addlw	low(030h)
  2485  00098E  0F30               	movwf	indf2,c
  2486  000990  6EDF               
  2487                           	line	302
  2488                           	
  2489                           l1380:
  2490  000992                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:       
                                   --p;
  2491                           	decf	((c:dtoa@p)),c
  2492  000992  0630               	btfss	status,0
  2493  000994  A0D8               	decf	((c:dtoa@p+1)),c
  2494  000996  0631               	line	303
  2495                           	
  2496                           l1382:
  2497  000998                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:       
                                   --w;
  2498                           	decf	((c:dtoa@w)),c
  2499  000998  0632               	btfss	status,0
  2500  00099A  A0D8               	decf	((c:dtoa@w+1)),c
  2501  00099C  0633               	line	304
  2502                           	
  2503                           l1384:
  2504  00099E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:       
                                   n = n / 10;
  2505                           	movff	(c:dtoa@n),(c:___aodiv@dividend)
  2506  00099E  C036  F001         	movff	(c:dtoa@n+1),(c:___aodiv@dividend+1)
  2507  0009A2  C037  F002         	movff	(c:dtoa@n+2),(c:___aodiv@dividend+2)
  2508  0009A6  C038  F003         	movff	(c:dtoa@n+3),(c:___aodiv@dividend+3)
  2509  0009AA  C039  F004         	movff	(c:dtoa@n+4),(c:___aodiv@dividend+4)
  2510  0009AE  C03A  F005         	movff	(c:dtoa@n+5),(c:___aodiv@dividend+5)
  2511  0009B2  C03B  F006         	movff	(c:dtoa@n+6),(c:___aodiv@dividend+6)
  2512  0009B6  C03C  F007         	movff	(c:dtoa@n+7),(c:___aodiv@dividend+7)
  2513  0009BA  C03D  F008         	movlw	byte0(0Ah)
  2514  0009BE  0E0A               	movwf	((c:___aodiv@divisor)),c
  2515  0009C0  6E09               	movlw	byte1(0Ah)
  2516  0009C2  0E00               	movwf	((c:___aodiv@divisor+1)),c
  2517  0009C4  6E0A               	movlw	byte2(0Ah)
  2518  0009C6  0E00               	movwf	((c:___aodiv@divisor+2)),c
  2519  0009C8  6E0B               	movlw	byte3(0Ah)
  2520  0009CA  0E00               	movwf	((c:___aodiv@divisor+3)),c
  2521  0009CC  6E0C               	movlw	byte4(0Ah)
  2522  0009CE  0E00               	movwf	((c:___aodiv@divisor+4)),c
  2523  0009D0  6E0D               	movlw	byte5(0Ah)
  2524  0009D2  0E00               	movwf	((c:___aodiv@divisor+5)),c
  2525  0009D4  6E0E               	movlw	byte6(0Ah)
  2526  0009D6  0E00               	movwf	((c:___aodiv@divisor+6)),c
  2527  0009D8  6E0F               	movlw	byte7(0Ah)
  2528  0009DA  0E00               	movwf	((c:___aodiv@divisor+7)),c
  2529  0009DC  6E10               	call	___aodiv	;wreg free
  2530  0009DE  EC79  F006         	movff	0+?___aodiv,(c:dtoa@n)
  2531  0009E2  C001  F036         	movff	1+?___aodiv,(c:dtoa@n+1)
  2532  0009E6  C002  F037         	movff	2+?___aodiv,(c:dtoa@n+2)
  2533  0009EA  C003  F038         	movff	3+?___aodiv,(c:dtoa@n+3)
  2534  0009EE  C004  F039         	movff	4+?___aodiv,(c:dtoa@n+4)
  2535  0009F2  C005  F03A         	movff	5+?___aodiv,(c:dtoa@n+5)
  2536  0009F6  C006  F03B         	movff	6+?___aodiv,(c:dtoa@n+6)
  2537  0009FA  C007  F03C         	movff	7+?___aodiv,(c:dtoa@n+7)
  2538  0009FE  C008  F03D         	
  2539                           	goto	l1386
  2540  000A02  EF03  F005         	line	305
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 305:     }

  2542                           	
  2543                           l133:
  2544  000A06                     	line	299
  2545                           	
  2546                           l1386:
  2547  000A06                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2548                           	btfsc	((c:dtoa@i+1)),c,7
  2549  000A06  BE3F               	goto	u831
  2550  000A08  EF0E  F005         	movf	((c:dtoa@i+1)),c,w
  2551  000A0C  503F               	bnz	u830
  2552  000A0E  E108               	decf	((c:dtoa@i)),c,w
  2553  000A10  043E               	btfss	status,0
  2554  000A12  A0D8               	goto	u831
  2555  000A14  EF0E  F005         	goto	u830
  2556  000A18  EF10  F005         
  2557                           u831:
  2558  000A1C                     	goto	l1396
  2559  000A1C  EF47  F005         u830:
  2560  000A20                     	
  2561                           l1388:
  2562  000A20                     	movf	((c:dtoa@n)),c,w
  2563  000A20  5036               iorwf	((c:dtoa@n+1)),c,w
  2564  000A22  1037               iorwf	((c:dtoa@n+2)),c,w
  2565  000A24  1038               iorwf	((c:dtoa@n+3)),c,w
  2566  000A26  1039               iorwf	((c:dtoa@n+4)),c,w
  2567  000A28  103A               iorwf	((c:dtoa@n+5)),c,w
  2568  000A2A  103B               iorwf	((c:dtoa@n+6)),c,w
  2569  000A2C  103C               iorwf	((c:dtoa@n+7)),c,w
  2570  000A2E  103D               	btfss	status,2
  2571  000A30  A4D8               	goto	u841
  2572  000A32  EF1D  F005         	goto	u840
  2573  000A36  EF1F  F005         
  2574                           u841:
  2575  000A3A                     	goto	l1376
  2576  000A3A  EF85  F004         u840:
  2577  000A3E                     	
  2578                           l1390:
  2579  000A3E                     	btfsc	((c:dtoa@p+1)),c,7
  2580  000A3E  BE31               	goto	u850
  2581  000A40  EF2C  F005         	movf	((c:dtoa@p+1)),c,w
  2582  000A44  5031               	bnz	u851
  2583  000A46  E106               	decf	((c:dtoa@p)),c,w
  2584  000A48  0430               	btfsc	status,0
  2585  000A4A  B0D8               	goto	u851
  2586  000A4C  EF2A  F005         	goto	u850
  2587  000A50  EF2C  F005         
  2588                           u851:
  2589  000A54                     	goto	l1376
  2590  000A54  EF85  F004         u850:
  2591  000A58                     	
  2592                           l1392:
  2593  000A58                     	btfsc	((c:dtoa@w+1)),c,7
  2594  000A58  BE33               	goto	u861
  2595  000A5A  EF37  F005         	movf	((c:dtoa@w+1)),c,w
  2596  000A5E  5033               	bnz	u860
  2597  000A60  E108               	decf	((c:dtoa@w)),c,w
  2598  000A62  0432               	btfss	status,0
  2599  000A64  A0D8               	goto	u861
  2600  000A66  EF37  F005         	goto	u860
  2601  000A6A  EF39  F005         
  2602                           u861:
  2603  000A6E                     	goto	l1396
  2604  000A6E  EF47  F005         u860:
  2605  000A72                     	
  2606                           l1394:
  2607  000A72                     	movlb	0	; () banked
  2608  000A72  0100               	
  2609                           	btfsc	((_flags))&0ffh,(1)&7
  2610  000A74  B366               	goto	u871
  2611  000A76  EF3F  F005         	goto	u870
  2612  000A7A  EF41  F005         u871:
  2613  000A7E                     	goto	l1376
  2614  000A7E  EF85  F004         u870:
  2615  000A82                     	goto	l1396
  2616  000A82  EF47  F005         	
  2617                           l138:; BSR set to: 0
  2618  000A86                     
  2619                           	goto	l1396
  2620  000A86  EF47  F005         	
  2621                           l136:; BSR set to: 0
  2622  000A8A                     
  2623                           	goto	l1396
  2624  000A8A  EF47  F005         	
  2625                           l139:; BSR set to: 0
  2626  000A8E                     
  2627                           	line	308
  2628                           	
  2629                           l1396:
  2630  000A8E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if
                                  (s || (flags & (1 << 2))) {
  2631                           	movf	((c:dtoa@s)),c,w
  2632  000A8E  5034               iorwf	((c:dtoa@s+1)),c,w
  2633  000A90  1035               	btfss	status,2
  2634  000A92  A4D8               	goto	u881
  2635  000A94  EF4E  F005         	goto	u880
  2636  000A98  EF50  F005         
  2637                           u881:
  2638  000A9C                     	goto	l1400
  2639  000A9C  EF5A  F005         u880:
  2640  000AA0                     	
  2641                           l1398:
  2642  000AA0                     	movlb	0	; () banked
  2643  000AA0  0100               	
  2644                           	btfss	((_flags))&0ffh,(2)&7
  2645  000AA2  A566               	goto	u891
  2646  000AA4  EF56  F005         	goto	u890
  2647  000AA8  EF58  F005         u891:
  2648  000AAC                     	goto	l1410
  2649  000AAC  EF7C  F005         u890:
  2650  000AB0                     	goto	l1400
  2651  000AB0  EF5A  F005         	
  2652                           l142:; BSR set to: 0
  2653  000AB4                     
  2654                           	line	309
  2655                           	
  2656                           l1400:
  2657  000AB4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:       
                                   --i;
  2658                           	decf	((c:dtoa@i)),c
  2659  000AB4  063E               	btfss	status,0
  2660  000AB6  A0D8               	decf	((c:dtoa@i+1)),c
  2661  000AB8  063F               	line	310
  2662                           	
  2663                           l1402:
  2664  000ABA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:       
                                   dbuf[i] = s ? '-' : '+';
  2665                           	movf	((c:dtoa@s)),c,w
  2666  000ABA  5034               iorwf	((c:dtoa@s+1)),c,w
  2667  000ABC  1035               	btfss	status,2
  2668  000ABE  A4D8               	goto	u901
  2669  000AC0  EF64  F005         	goto	u900
  2670  000AC4  EF66  F005         
  2671                           u901:
  2672  000AC8                     	goto	l1406
  2673  000AC8  EF6C  F005         u900:
  2674  000ACC                     	
  2675                           l1404:
  2676  000ACC                     	movlw	high(02Bh)
  2677  000ACC  0E00               	movwf	((c:_dtoa$134+1)),c
  2678  000ACE  6E2F               	movlw	low(02Bh)
  2679  000AD0  0E2B               	movwf	((c:_dtoa$134)),c
  2680  000AD2  6E2E               	goto	l1408
  2681  000AD4  EF72  F005         	
  2682                           l144:
  2683  000AD8                     	
  2684                           l1406:
  2685  000AD8                     	movlw	high(02Dh)
  2686  000AD8  0E00               	movwf	((c:_dtoa$134+1)),c
  2687  000ADA  6E2F               	movlw	low(02Dh)
  2688  000ADC  0E2D               	movwf	((c:_dtoa$134)),c
  2689  000ADE  6E2E               	goto	l1408
  2690  000AE0  EF72  F005         	
  2691                           l146:
  2692  000AE4                     	
  2693                           l1408:
  2694  000AE4                     	movlw	low(_dbuf)
  2695  000AE4  0E6A               	addwf	((c:dtoa@i)),c,w
  2696  000AE6  243E               	movwf	c:fsr2l
  2697  000AE8  6ED9               	movlw	high(_dbuf)
  2698  000AEA  0E00               	addwfc	((c:dtoa@i+1)),c,w
  2699  000AEC  203F               	movwf	1+c:fsr2l
  2700  000AEE  6EDA               	movff	(c:_dtoa$134),indf2
  2701  000AF0  C02E  FFDF         
  2702                           	goto	l1410
  2703  000AF4  EF7C  F005         	line	311
  2704                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 311:     }

  2705                           	
  2706                           l140:
  2707  000AF8                     	line	314
  2708                           	
  2709                           l1410:
  2710  000AF8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     re
                                 turn pad(fp, &dbuf[i], w);
  2711                           		movff	(c:dtoa@fp),(c:pad@fp)
  2712  000AF8  C01C  F011         	movff	(c:dtoa@fp+1),(c:pad@fp+1)
  2713  000AFC  C01D  F012         
  2714                           	movlw	low(_dbuf)
  2715  000B00  0E6A               	addwf	((c:dtoa@i)),c,w
  2716  000B02  243E               	movwf	((c:pad@buf)),c
  2717  000B04  6E13               	movlw	high(_dbuf)
  2718  000B06  0E00               	addwfc	((c:dtoa@i+1)),c,w
  2719  000B08  203F               	movwf	1+((c:pad@buf)),c
  2720  000B0A  6E14               	movff	(c:dtoa@w),(c:pad@p)
  2721  000B0C  C032  F015         	movff	(c:dtoa@w+1),(c:pad@p+1)
  2722  000B10  C033  F016         	call	_pad	;wreg free
  2723  000B14  ECF1  F008         	movff	0+?_pad,(c:?_dtoa)
  2724  000B18  C011  F01C         	movff	1+?_pad,(c:?_dtoa+1)
  2725  000B1C  C012  F01D         	goto	l147
  2726  000B20  EF92  F005         	
  2727                           l1412:
  2728  000B24                     	line	315
  2729                           	
  2730                           l147:
  2731  000B24                     	return	;funcret
  2732  000B24  0012               	opt stack 0
  2733                           GLOBAL	__end_of_dtoa
  2734                           	__end_of_dtoa:
  2735  000B26                     	signat	_dtoa,8314
  2736                           	global	_pad
  2737                           
  2738 ;; *************** function _pad *****************
  2739 ;; Defined at:
  2740 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2743 ;;		 -> sprintf@f(6), 
  2744 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2745 ;;		 -> dbuf(32), 
  2746 ;;  p               2   20[COMRAM] int 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  w               2   25[COMRAM] int 
  2749 ;;  i               2   23[COMRAM] int 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  2   16[COMRAM] int 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2759 ;;      Params:         6       0       0       0       0       0       0       0       0
  2760 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2761 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2762 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2763 ;;Total ram usage:       11 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    3
  2766 ;; This function calls:
  2767 ;;		_fputc
  2768 ;;		_fputs
  2769 ;;		_strlen
  2770 ;; This function is called by:
  2771 ;;		_dtoa
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2775                           	line	72
  2776                           global __ptext7
  2777                           __ptext7:
  2778  0011E2                     psect	text7
  2779                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2780                           	line	72
  2781                           	global	__size_of_pad
  2782                           	__size_of_pad	equ	__end_of_pad-_pad
  2783  0000                     	
  2784                           _pad:
  2785  0011E2                     ;incstack = 0
  2786                           	opt	stack 22
  2787                           	line	77
  2788                           	
  2789                           l1246:
  2790  0011E2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2791                           	movlb	0	; () banked
  2792  0011E2  0100               	
  2793                           	btfss	((_flags))&0ffh,(0)&7
  2794  0011E4  A166               	goto	u581
  2795  0011E6  EFF7  F008         	goto	u580
  2796  0011EA  EFF9  F008         u581:
  2797  0011EE                     	goto	l1250
  2798  0011EE  EF05  F009         u580:
  2799  0011F2                     	line	78
  2800                           	
  2801                           l1248:; BSR set to: 0
  2802  0011F2                     
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  2804                           		movff	(c:pad@buf),(c:fputs@s)
  2805  0011F2  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  2806  0011F6  C014  F00B         
  2807                           		movff	(c:pad@fp),(c:fputs@fp)
  2808  0011FA  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  2809  0011FE  C012  F00D         
  2810                           	call	_fputs	;wreg free
  2811  001202  ECE7  F009         	goto	l1250
  2812  001206  EF05  F009         	line	79
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  2814                           	
  2815                           l112:
  2816  00120A                     	line	82
  2817                           	
  2818                           l1250:
  2819  00120A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  2820                           	btfsc	((c:pad@p+1)),c,7
  2821  00120A  BE16               	goto	u591
  2822  00120C  EF0A  F009         	goto	u590
  2823  001210  EF0C  F009         
  2824                           u591:
  2825  001214                     	goto	l1254
  2826  001214  EF12  F009         u590:
  2827  001218                     	
  2828                           l1252:
  2829  001218                     	movff	(c:pad@p),(c:pad@w)
  2830  001218  C015  F01A         	movff	(c:pad@p+1),(c:pad@w+1)
  2831  00121C  C016  F01B         	goto	l116
  2832  001220  EF16  F009         	
  2833                           l114:
  2834  001224                     	
  2835                           l1254:
  2836  001224                     	movlw	high(0)
  2837  001224  0E00               	movwf	((c:pad@w+1)),c
  2838  001226  6E1B               	movlw	low(0)
  2839  001228  0E00               	movwf	((c:pad@w)),c
  2840  00122A  6E1A               	
  2841                           l116:
  2842  00122C                     	line	83
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  2844                           	movlw	high(0)
  2845  00122C  0E00               	movwf	((c:pad@i+1)),c
  2846  00122E  6E19               	movlw	low(0)
  2847  001230  0E00               	movwf	((c:pad@i)),c
  2848  001232  6E18               	line	84
  2849                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  2850                           	goto	l1260
  2851  001234  EF2A  F009         	
  2852                           l118:
  2853  001238                     	line	85
  2854                           	
  2855                           l1256:
  2856  001238                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  2857                           	movlw	high(020h)
  2858  001238  0E00               	movwf	((c:fputc@c+1)),c
  2859  00123A  6E02               	movlw	low(020h)
  2860  00123C  0E20               	movwf	((c:fputc@c)),c
  2861  00123E  6E01               		movff	(c:pad@fp),(c:fputc@fp)
  2862  001240  C011  F003         	movff	(c:pad@fp+1),(c:fputc@fp+1)
  2863  001244  C012  F004         
  2864                           	call	_fputc	;wreg free
  2865  001248  EC17  F008         	line	86
  2866                           	
  2867                           l1258:
  2868  00124C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  2869                           	infsnz	((c:pad@i)),c
  2870  00124C  4A18               	incf	((c:pad@i+1)),c
  2871  00124E  2A19               	goto	l1260
  2872  001250  EF2A  F009         	line	87
  2873                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  2874                           	
  2875                           l117:
  2876  001254                     	line	84
  2877                           	
  2878                           l1260:
  2879  001254                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  2880                           		movf	((c:pad@w)),c,w
  2881  001254  501A               	subwf	((c:pad@i)),c,w
  2882  001256  5C18               	movf	((c:pad@i+1)),c,w
  2883  001258  5019               	xorlw	80h
  2884  00125A  0A80               	movwf	(??_pad+0+0)&0ffh,c
  2885  00125C  6E17               	movf	((c:pad@w+1)),c,w
  2886  00125E  501B               	xorlw	80h
  2887  001260  0A80               	subwfb	(??_pad+0+0)&0ffh,c,w
  2888  001262  5817               	btfss	status,0
  2889  001264  A0D8               	goto	u601
  2890  001266  EF37  F009         	goto	u600
  2891  00126A  EF39  F009         
  2892                           u601:
  2893  00126E                     	goto	l1256
  2894  00126E  EF1C  F009         u600:
  2895  001272                     	
  2896                           l119:
  2897  001272                     	line	90
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  2899                           	movlb	0	; () banked
  2900  001272  0100               	
  2901                           	btfsc	((_flags))&0ffh,(0)&7
  2902  001274  B166               	goto	u611
  2903  001276  EF3F  F009         	goto	u610
  2904  00127A  EF41  F009         u611:
  2905  00127E                     	goto	l1264
  2906  00127E  EF4D  F009         u610:
  2907  001282                     	line	91
  2908                           	
  2909                           l1262:; BSR set to: 0
  2910  001282                     
  2911                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  2912                           		movff	(c:pad@buf),(c:fputs@s)
  2913  001282  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  2914  001286  C014  F00B         
  2915                           		movff	(c:pad@fp),(c:fputs@fp)
  2916  00128A  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  2917  00128E  C012  F00D         
  2918                           	call	_fputs	;wreg free
  2919  001292  ECE7  F009         	goto	l1264
  2920  001296  EF4D  F009         	line	92
  2921                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  2922                           	
  2923                           l120:
  2924  00129A                     	line	94
  2925                           	
  2926                           l1264:
  2927  00129A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  2928                           		movff	(c:pad@buf),(c:strlen@s)
  2929  00129A  C013  F001         	movff	(c:pad@buf+1),(c:strlen@s+1)
  2930  00129E  C014  F002         
  2931                           	call	_strlen	;wreg free
  2932  0012A2  ECBE  F009         	movf	((c:pad@w)),c,w
  2933  0012A6  501A               	addwf	(0+?_strlen),c,w
  2934  0012A8  2401               	movwf	((c:?_pad)),c
  2935  0012AA  6E11               	movf	((c:pad@w+1)),c,w
  2936  0012AC  501B               	addwfc	(1+?_strlen),c,w
  2937  0012AE  2002               	movwf	1+((c:?_pad)),c
  2938  0012B0  6E12               	goto	l121
  2939  0012B2  EF5B  F009         	
  2940                           l1266:
  2941  0012B6                     	line	95
  2942                           	
  2943                           l121:
  2944  0012B6                     	return	;funcret
  2945  0012B6  0012               	opt stack 0
  2946                           GLOBAL	__end_of_pad
  2947                           	__end_of_pad:
  2948  0012B8                     	signat	_pad,12410
  2949                           	global	_strlen
  2950                           
  2951 ;; *************** function _strlen *****************
  2952 ;; Defined at:
  2953 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2956 ;;		 -> dbuf(32), 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  a               2    4[COMRAM] PTR const unsigned char 
  2959 ;;		 -> dbuf(32), 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  2    0[COMRAM] unsigned int 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2969 ;;      Params:         2       0       0       0       0       0       0       0       0
  2970 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2972 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:        6 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_pad
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           psect	text8,class=CODE,space=0,reloc=2,group=2
  2982                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  2983                           	line	12
  2984                           global __ptext8
  2985                           __ptext8:
  2986  00137C                     psect	text8
  2987                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  2988                           	line	12
  2989                           	global	__size_of_strlen
  2990                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  2991  0000                     	
  2992                           _strlen:
  2993  00137C                     ;incstack = 0
  2994                           	opt	stack 24
  2995                           	line	14
  2996                           	
  2997                           l1236:
  2998  00137C                     		movff	(c:strlen@s),(c:strlen@a)
  2999  00137C  C001  F005         	movff	(c:strlen@s+1),(c:strlen@a+1)
  3000  001380  C002  F006         
  3001                           	line	16
  3002                           	goto	l1240
  3003  001384  EFC8  F009         	
  3004                           l876:
  3005  001388                     	line	17
  3006                           	
  3007                           l1238:
  3008  001388                     	infsnz	((c:strlen@s)),c
  3009  001388  4A01               	incf	((c:strlen@s+1)),c
  3010  00138A  2A02               	goto	l1240
  3011  00138C  EFC8  F009         	line	18
  3012                           	
  3013                           l875:
  3014  001390                     	line	16
  3015                           	
  3016                           l1240:
  3017  001390                     	movff	(c:strlen@s),fsr2l
  3018  001390  C001  FFD9         	movff	(c:strlen@s+1),fsr2h
  3019  001394  C002  FFDA         	movf	indf2,w
  3020  001398  50DF               	btfss	status,2
  3021  00139A  A4D8               	goto	u571
  3022  00139C  EFD2  F009         	goto	u570
  3023  0013A0  EFD4  F009         u571:
  3024  0013A4                     	goto	l1238
  3025  0013A4  EFC4  F009         u570:
  3026  0013A8                     	goto	l1242
  3027  0013A8  EFD6  F009         	
  3028                           l877:
  3029  0013AC                     	line	25
  3030                           	
  3031                           l1242:
  3032  0013AC                     	movff	(c:strlen@a),??_strlen+0+0
  3033  0013AC  C005  F003         	movff	(c:strlen@a+1),??_strlen+0+0+1
  3034  0013B0  C006  F004         	comf	(??_strlen+0+0),c
  3035  0013B4  1E03               	comf	(??_strlen+0+1),c
  3036  0013B6  1E04               	infsnz	(??_strlen+0+0),c
  3037  0013B8  4A03               	incf	(??_strlen+0+1),c
  3038  0013BA  2A04               	movf	((c:strlen@s)),c,w
  3039  0013BC  5001               	addwf	(??_strlen+0+0),c,w
  3040  0013BE  2403               	movwf	((c:?_strlen)),c
  3041  0013C0  6E01               	movf	((c:strlen@s+1)),c,w
  3042  0013C2  5002               	addwfc	(??_strlen+0+1),c,w
  3043  0013C4  2004               	movwf	1+((c:?_strlen)),c
  3044  0013C6  6E02               	goto	l878
  3045  0013C8  EFE6  F009         	
  3046                           l1244:
  3047  0013CC                     	line	26
  3048                           	
  3049                           l878:
  3050  0013CC                     	return	;funcret
  3051  0013CC  0012               	opt stack 0
  3052                           GLOBAL	__end_of_strlen
  3053                           	__end_of_strlen:
  3054  0013CE                     	signat	_strlen,4218
  3055                           	global	_fputs
  3056                           
  3057 ;; *************** function _fputs *****************
  3058 ;; Defined at:
  3059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3062 ;;		 -> dbuf(32), 
  3063 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3064 ;;		 -> sprintf@f(6), 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  i               2   14[COMRAM] int 
  3067 ;;  c               1   13[COMRAM] unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  2    9[COMRAM] int 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3077 ;;      Params:         4       0       0       0       0       0       0       0       0
  3078 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3080 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3081 ;;Total ram usage:        7 bytes
  3082 ;; Hardware stack levels used:    1
  3083 ;; Hardware stack levels required when called:    2
  3084 ;; This function calls:
  3085 ;;		_fputc
  3086 ;; This function is called by:
  3087 ;;		_pad
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           psect	text9,class=CODE,space=0,reloc=2,group=2
  3091                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  3092                           	line	8
  3093                           global __ptext9
  3094                           __ptext9:
  3095  0013CE                     psect	text9
  3096                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  3097                           	line	8
  3098                           	global	__size_of_fputs
  3099                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  3100  0000                     	
  3101                           _fputs:
  3102  0013CE                     ;incstack = 0
  3103                           	opt	stack 22
  3104                           	line	13
  3105                           	
  3106                           l1228:
  3107  0013CE                     	movlw	high(0)
  3108  0013CE  0E00               	movwf	((c:fputs@i+1)),c
  3109  0013D0  6E10               	movlw	low(0)
  3110  0013D2  0E00               	movwf	((c:fputs@i)),c
  3111  0013D4  6E0F               	line	14
  3112                           	goto	l1234
  3113  0013D6  EFFA  F009         	
  3114                           l860:
  3115  0013DA                     	line	15
  3116                           	
  3117                           l1230:
  3118  0013DA                     	movff	(c:fputs@c),(c:fputc@c)
  3119  0013DA  C00E  F001         	clrf	((c:fputc@c+1)),c
  3120  0013DE  6A02               		movff	(c:fputs@fp),(c:fputc@fp)
  3121  0013E0  C00C  F003         	movff	(c:fputs@fp+1),(c:fputc@fp+1)
  3122  0013E4  C00D  F004         
  3123                           	call	_fputc	;wreg free
  3124  0013E8  EC17  F008         	line	16
  3125                           	
  3126                           l1232:
  3127  0013EC                     	infsnz	((c:fputs@i)),c
  3128  0013EC  4A0F               	incf	((c:fputs@i+1)),c
  3129  0013EE  2A10               	goto	l1234
  3130  0013F0  EFFA  F009         	line	17
  3131                           	
  3132                           l859:
  3133  0013F4                     	line	14
  3134                           	
  3135                           l1234:
  3136  0013F4                     	movf	((c:fputs@i)),c,w
  3137  0013F4  500F               	addwf	((c:fputs@s)),c,w
  3138  0013F6  240A               	movwf	c:fsr2l
  3139  0013F8  6ED9               	movf	((c:fputs@i+1)),c,w
  3140  0013FA  5010               	addwfc	((c:fputs@s+1)),c,w
  3141  0013FC  200B               	movwf	1+c:fsr2l
  3142  0013FE  6EDA               	movf	indf2,w
  3143  001400  50DF               	movwf	((c:fputs@c)),c
  3144  001402  6E0E               	movf	((c:fputs@c)),c,w
  3145  001404  500E               	btfss	status,2
  3146  001406  A4D8               	goto	u561
  3147  001408  EF08  F00A         	goto	u560
  3148  00140C  EF0A  F00A         u561:
  3149  001410                     	goto	l1230
  3150  001410  EFED  F009         u560:
  3151  001414                     	goto	l862
  3152  001414  EF0C  F00A         	
  3153                           l861:
  3154  001418                     	line	19
  3155                           ;	Return value of _fputs is never used
  3156                           	
  3157                           l862:
  3158  001418                     	return	;funcret
  3159  001418  0012               	opt stack 0
  3160                           GLOBAL	__end_of_fputs
  3161                           	__end_of_fputs:
  3162  00141A                     	signat	_fputs,8314
  3163                           	global	_fputc
  3164                           
  3165 ;; *************** function _fputc *****************
  3166 ;; Defined at:
  3167 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  c               2    0[COMRAM] int 
  3170 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3171 ;;		 -> sprintf@f(6), 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  2    0[COMRAM] int 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3183 ;;      Params:         4       0       0       0       0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3185 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3186 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3187 ;;Total ram usage:        9 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    1
  3190 ;; This function calls:
  3191 ;;		_putch
  3192 ;; This function is called by:
  3193 ;;		_pad
  3194 ;;		_vfpfcnvrt
  3195 ;;		_fputs
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           psect	text10,class=CODE,space=0,reloc=2,group=2
  3199                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  3200                           	line	8
  3201                           global __ptext10
  3202                           __ptext10:
  3203  00102E                     psect	text10
  3204                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  3205                           	line	8
  3206                           	global	__size_of_fputc
  3207                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  3208  0000                     	
  3209                           _fputc:
  3210  00102E                     ;incstack = 0
  3211                           	opt	stack 25
  3212                           	line	12
  3213                           	
  3214                           l1214:
  3215  00102E                     	movf	((c:fputc@fp)),c,w
  3216  00102E  5003               iorwf	((c:fputc@fp+1)),c,w
  3217  001030  1004               	btfsc	status,2
  3218  001032  B4D8               	goto	u521
  3219  001034  EF1E  F008         	goto	u520
  3220  001038  EF20  F008         
  3221                           u521:
  3222  00103C                     	goto	l1218
  3223  00103C  EF2B  F008         u520:
  3224  001040                     	
  3225                           l1216:
  3226  001040                     	movf	((c:fputc@fp)),c,w
  3227  001040  5003               iorwf	((c:fputc@fp+1)),c,w
  3228  001042  1004               	btfss	status,2
  3229  001044  A4D8               	goto	u531
  3230  001046  EF27  F008         	goto	u530
  3231  00104A  EF29  F008         
  3232                           u531:
  3233  00104E                     	goto	l1220
  3234  00104E  EF30  F008         u530:
  3235  001052                     	goto	l1218
  3236  001052  EF2B  F008         	
  3237                           l849:
  3238  001056                     	line	13
  3239                           	
  3240                           l1218:
  3241  001056                     	movf	((c:fputc@c)),c,w
  3242  001056  5001               	
  3243                           	call	_putch
  3244  001058  EC9E  F00A         	line	14
  3245                           	goto	l854
  3246  00105C  EF85  F008         	
  3247                           l847:
  3248  001060                     	line	15
  3249                           	
  3250                           l1220:
  3251  001060                     	lfsr	2,04h
  3252  001060  EE20 F004          	movf	((c:fputc@fp)),c,w
  3253  001064  5003               	addwf	fsr2l
  3254  001066  26D9               	movf	((c:fputc@fp+1)),c,w
  3255  001068  5004               	addwfc	fsr2h
  3256  00106A  22DA               	movf	postinc2,w
  3257  00106C  50DE               iorwf	postinc2,w
  3258  00106E  10DE               	btfsc	status,2
  3259  001070  B4D8               	goto	u541
  3260  001072  EF3D  F008         	goto	u540
  3261  001076  EF3F  F008         
  3262                           u541:
  3263  00107A                     	goto	l1224
  3264  00107A  EF5C  F008         u540:
  3265  00107E                     	
  3266                           l1222:
  3267  00107E                     	lfsr	2,04h
  3268  00107E  EE20 F004          	movf	((c:fputc@fp)),c,w
  3269  001082  5003               	addwf	fsr2l
  3270  001084  26D9               	movf	((c:fputc@fp+1)),c,w
  3271  001086  5004               	addwfc	fsr2h
  3272  001088  22DA               	lfsr	1,02h
  3273  00108A  EE10 F002          	movf	((c:fputc@fp)),c,w
  3274  00108E  5003               	addwf	fsr1l
  3275  001090  26E1               	movf	((c:fputc@fp+1)),c,w
  3276  001092  5004               	addwfc	fsr1h
  3277  001094  22E2               		movf	postinc2,w
  3278  001096  50DE               	subwf	postinc1,w
  3279  001098  5CE6               	movf	postinc1,w
  3280  00109A  50E6               	xorlw	80h
  3281  00109C  0A80               	movwf	(??_fputc+4+0)&0ffh,c
  3282  00109E  6E09               	movf	postinc2,w
  3283  0010A0  50DE               	xorlw	80h
  3284  0010A2  0A80               	subwfb	(??_fputc+4+0)&0ffh,c,w
  3285  0010A4  5809               	btfsc	status,0
  3286  0010A6  B0D8               	goto	u551
  3287  0010A8  EF58  F008         	goto	u550
  3288  0010AC  EF5A  F008         
  3289                           u551:
  3290  0010B0                     	goto	l854
  3291  0010B0  EF85  F008         u550:
  3292  0010B4                     	goto	l1224
  3293  0010B4  EF5C  F008         	
  3294                           l853:
  3295  0010B8                     	line	16
  3296                           	
  3297                           l1224:
  3298  0010B8                     	lfsr	2,02h
  3299  0010B8  EE20 F002          	movf	((c:fputc@fp)),c,w
  3300  0010BC  5003               	addwf	fsr2l
  3301  0010BE  26D9               	movf	((c:fputc@fp+1)),c,w
  3302  0010C0  5004               	addwfc	fsr2h
  3303  0010C2  22DA               	movff	postinc2,??_fputc+0+0
  3304  0010C4  CFDE F005          	movff	postdec2,??_fputc+0+0+1
  3305  0010C8  CFDD F006          	movff	(c:fputc@fp),fsr2l
  3306  0010CC  C003  FFD9         	movff	(c:fputc@fp+1),fsr2h
  3307  0010D0  C004  FFDA         	movff	postinc2,??_fputc+2+0
  3308  0010D4  CFDE F007          	movff	postdec2,??_fputc+2+0+1
  3309  0010D8  CFDD F008          	movf	(??_fputc+0+0),c,w
  3310  0010DC  5005               	addwf	(??_fputc+2+0),c,w
  3311  0010DE  2407               	movwf	c:fsr2l
  3312  0010E0  6ED9               	movf	(??_fputc+0+1),c,w
  3313  0010E2  5006               	addwfc	(??_fputc+2+1),c,w
  3314  0010E4  2008               	movwf	1+c:fsr2l
  3315  0010E6  6EDA               	movff	(c:fputc@c),indf2
  3316  0010E8  C001  FFDF         
  3317                           	line	17
  3318                           	lfsr	2,02h
  3319  0010EC  EE20 F002          	movf	((c:fputc@fp)),c,w
  3320  0010F0  5003               	addwf	fsr2l
  3321  0010F2  26D9               	movf	((c:fputc@fp+1)),c,w
  3322  0010F4  5004               	addwfc	fsr2h
  3323  0010F6  22DA               	incf	postinc2
  3324  0010F8  2ADE               	movlw	0
  3325  0010FA  0E00               	addwfc	postdec2
  3326  0010FC  22DD               	goto	l854
  3327  0010FE  EF85  F008         	line	18
  3328                           	
  3329                           l851:
  3330  001102                     	goto	l854
  3331  001102  EF85  F008         	line	19
  3332                           	
  3333                           l850:
  3334  001106                     	goto	l854
  3335  001106  EF85  F008         	line	20
  3336                           	
  3337                           l1226:
  3338  00110A                     	line	21
  3339                           ;	Return value of _fputc is never used
  3340                           	
  3341                           l854:
  3342  00110A                     	return	;funcret
  3343  00110A  0012               	opt stack 0
  3344                           GLOBAL	__end_of_fputc
  3345                           	__end_of_fputc:
  3346  00110C                     	signat	_fputc,8314
  3347                           	global	_putch
  3348                           
  3349 ;; *************** function _putch *****************
  3350 ;; Defined at:
  3351 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  c               1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  c               1    0[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3365 ;;      Params:         0       0       0       0       0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_fputc
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           psect	text11,class=CODE,space=0,reloc=2,group=2
  3378                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  3379                           	line	7
  3380                           global __ptext11
  3381                           __ptext11:
  3382  00153C                     psect	text11
  3383                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  3384                           	line	7
  3385                           	global	__size_of_putch
  3386                           	__size_of_putch	equ	__end_of_putch-_putch
  3387  0000                     	
  3388                           _putch:
  3389  00153C                     ;incstack = 0
  3390                           	opt	stack 25
  3391                           	line	9
  3392                           	
  3393                           l872:
  3394  00153C                     	return	;funcret
  3395  00153C  0012               	opt stack 0
  3396                           GLOBAL	__end_of_putch
  3397                           	__end_of_putch:
  3398  00153E                     	signat	_putch,4217
  3399                           	global	_abs
  3400                           
  3401 ;; *************** function _abs *****************
  3402 ;; Defined at:
  3403 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  a               2   18[COMRAM] int 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  2   18[COMRAM] int 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3417 ;;      Params:         2       0       0       0       0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3419 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3420 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3421 ;;Total ram usage:        4 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_dtoa
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           psect	text12,class=CODE,space=0,reloc=2,group=2
  3430                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  3431                           	line	1
  3432                           global __ptext12
  3433                           __ptext12:
  3434  001462                     psect	text12
  3435                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  3436                           	line	1
  3437                           	global	__size_of_abs
  3438                           	__size_of_abs	equ	__end_of_abs-_abs
  3439  0000                     	
  3440                           _abs:
  3441  001462                     ;incstack = 0
  3442                           	opt	stack 25
  3443                           	line	3
  3444                           	
  3445                           l1268:
  3446  001462                     	btfsc	((c:abs@a+1)),c,7
  3447  001462  BE14               	goto	u620
  3448  001464  EF3E  F00A         	movf	((c:abs@a+1)),c,w
  3449  001468  5014               	bnz	u621
  3450  00146A  E106               	decf	((c:abs@a)),c,w
  3451  00146C  0413               	btfsc	status,0
  3452  00146E  B0D8               	goto	u621
  3453  001470  EF3C  F00A         	goto	u620
  3454  001474  EF3E  F00A         
  3455                           u621:
  3456  001478                     	goto	l839
  3457  001478  EF4C  F00A         u620:
  3458  00147C                     	
  3459                           l1270:
  3460  00147C                     	movff	(c:abs@a),??_abs+0+0
  3461  00147C  C013  F015         	movff	(c:abs@a+1),??_abs+0+0+1
  3462  001480  C014  F016         	comf	(??_abs+0+0),c
  3463  001484  1E15               	comf	(??_abs+0+1),c
  3464  001486  1E16               	infsnz	(??_abs+0+0),c
  3465  001488  4A15               	incf	(??_abs+0+1),c
  3466  00148A  2A16               	movff	??_abs+0+0,(c:?_abs)
  3467  00148C  C015  F013         	movff	??_abs+0+1,(c:?_abs+1)
  3468  001490  C016  F014         	goto	l842
  3469  001494  EF52  F00A         	
  3470                           l839:
  3471  001498                     	movff	(c:abs@a),(c:?_abs)
  3472  001498  C013  F013         	movff	(c:abs@a+1),(c:?_abs+1)
  3473  00149C  C014  F014         	goto	l842
  3474  0014A0  EF52  F00A         	
  3475                           l841:
  3476  0014A4                     	line	4
  3477                           	
  3478                           l842:
  3479  0014A4                     	return	;funcret
  3480  0014A4  0012               	opt stack 0
  3481                           GLOBAL	__end_of_abs
  3482                           	__end_of_abs:
  3483  0014A6                     	signat	_abs,4218
  3484                           	global	___aomod
  3485                           
  3486 ;; *************** function ___aomod *****************
  3487 ;; Defined at:
  3488 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  dividend        8    0[COMRAM] long long 
  3491 ;;  divisor         8    8[COMRAM] long long 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  sign            1   17[COMRAM] unsigned char 
  3494 ;;  counter         1   16[COMRAM] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  8    0[COMRAM] long long 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3504 ;;      Params:        16       0       0       0       0       0       0       0       0
  3505 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3507 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3508 ;;Total ram usage:       18 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; This function calls:
  3511 ;;		Nothing
  3512 ;; This function is called by:
  3513 ;;		_dtoa
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           psect	text13,class=CODE,space=0,reloc=2,group=1
  3517                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  3518                           	line	9
  3519                           global __ptext13
  3520                           __ptext13:
  3521  000EA2                     psect	text13
  3522                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  3523                           	line	9
  3524                           	global	__size_of___aomod
  3525                           	__size_of___aomod	equ	__end_of___aomod-___aomod
  3526  0000                     	
  3527                           ___aomod:
  3528  000EA2                     ;incstack = 0
  3529                           	opt	stack 25
  3530                           	line	14
  3531                           	
  3532                           l1316:
  3533  000EA2                     	movlw	low(0)
  3534  000EA2  0E00               	movwf	((c:___aomod@sign)),c
  3535  000EA4  6E12               	line	15
  3536                           	
  3537                           l1318:
  3538  000EA6                     	btfsc	((c:___aomod@dividend+7)),c,7
  3539  000EA6  BE08               	goto	u700
  3540  000EA8  EF5A  F007         	goto	u701
  3541  000EAC  EF58  F007         
  3542                           u701:
  3543  000EB0                     	goto	l1324
  3544  000EB0  EF6E  F007         u700:
  3545  000EB4                     	line	16
  3546                           	
  3547                           l1320:
  3548  000EB4                     	comf	((c:___aomod@dividend+7)),c
  3549  000EB4  1E08               	comf	((c:___aomod@dividend+6)),c
  3550  000EB6  1E07               	comf	((c:___aomod@dividend+5)),c
  3551  000EB8  1E06               	comf	((c:___aomod@dividend+4)),c
  3552  000EBA  1E05               	comf	((c:___aomod@dividend+3)),c
  3553  000EBC  1E04               	comf	((c:___aomod@dividend+2)),c
  3554  000EBE  1E03               	comf	((c:___aomod@dividend+1)),c
  3555  000EC0  1E02               	negf	((c:___aomod@dividend)),c
  3556  000EC2  6C01               	movlw	0
  3557  000EC4  0E00               	addwfc	((c:___aomod@dividend+1)),c
  3558  000EC6  2202               	addwfc	((c:___aomod@dividend+2)),c
  3559  000EC8  2203               	addwfc	((c:___aomod@dividend+3)),c
  3560  000ECA  2204               	addwfc	((c:___aomod@dividend+4)),c
  3561  000ECC  2205               	addwfc	((c:___aomod@dividend+5)),c
  3562  000ECE  2206               	addwfc	((c:___aomod@dividend+6)),c
  3563  000ED0  2207               	addwfc	((c:___aomod@dividend+7)),c
  3564  000ED2  2208               	line	17
  3565                           	
  3566                           l1322:
  3567  000ED4                     	movlw	low(01h)
  3568  000ED4  0E01               	movwf	((c:___aomod@sign)),c
  3569  000ED6  6E12               	goto	l1324
  3570  000ED8  EF6E  F007         	line	18
  3571                           	
  3572                           l281:
  3573  000EDC                     	line	19
  3574                           	
  3575                           l1324:
  3576  000EDC                     	btfsc	((c:___aomod@divisor+7)),c,7
  3577  000EDC  BE10               	goto	u710
  3578  000EDE  EF75  F007         	goto	u711
  3579  000EE2  EF73  F007         
  3580                           u711:
  3581  000EE6                     	goto	l1328
  3582  000EE6  EF87  F007         u710:
  3583  000EEA                     	line	20
  3584                           	
  3585                           l1326:
  3586  000EEA                     	comf	((c:___aomod@divisor+7)),c
  3587  000EEA  1E10               	comf	((c:___aomod@divisor+6)),c
  3588  000EEC  1E0F               	comf	((c:___aomod@divisor+5)),c
  3589  000EEE  1E0E               	comf	((c:___aomod@divisor+4)),c
  3590  000EF0  1E0D               	comf	((c:___aomod@divisor+3)),c
  3591  000EF2  1E0C               	comf	((c:___aomod@divisor+2)),c
  3592  000EF4  1E0B               	comf	((c:___aomod@divisor+1)),c
  3593  000EF6  1E0A               	negf	((c:___aomod@divisor)),c
  3594  000EF8  6C09               	movlw	0
  3595  000EFA  0E00               	addwfc	((c:___aomod@divisor+1)),c
  3596  000EFC  220A               	addwfc	((c:___aomod@divisor+2)),c
  3597  000EFE  220B               	addwfc	((c:___aomod@divisor+3)),c
  3598  000F00  220C               	addwfc	((c:___aomod@divisor+4)),c
  3599  000F02  220D               	addwfc	((c:___aomod@divisor+5)),c
  3600  000F04  220E               	addwfc	((c:___aomod@divisor+6)),c
  3601  000F06  220F               	addwfc	((c:___aomod@divisor+7)),c
  3602  000F08  2210               	goto	l1328
  3603  000F0A  EF87  F007         	
  3604                           l282:
  3605  000F0E                     	line	21
  3606                           	
  3607                           l1328:
  3608  000F0E                     	movf	((c:___aomod@divisor)),c,w
  3609  000F0E  5009               iorwf	((c:___aomod@divisor+1)),c,w
  3610  000F10  100A               iorwf	((c:___aomod@divisor+2)),c,w
  3611  000F12  100B               iorwf	((c:___aomod@divisor+3)),c,w
  3612  000F14  100C               iorwf	((c:___aomod@divisor+4)),c,w
  3613  000F16  100D               iorwf	((c:___aomod@divisor+5)),c,w
  3614  000F18  100E               iorwf	((c:___aomod@divisor+6)),c,w
  3615  000F1A  100F               iorwf	((c:___aomod@divisor+7)),c,w
  3616  000F1C  1010               	btfsc	status,2
  3617  000F1E  B4D8               	goto	u721
  3618  000F20  EF94  F007         	goto	u720
  3619  000F24  EF96  F007         
  3620                           u721:
  3621  000F28                     	goto	l1344
  3622  000F28  EFEA  F007         u720:
  3623  000F2C                     	line	22
  3624                           	
  3625                           l1330:
  3626  000F2C                     	movlw	low(01h)
  3627  000F2C  0E01               	movwf	((c:___aomod@counter)),c
  3628  000F2E  6E11               	line	23
  3629                           	goto	l1334
  3630  000F30  EFA6  F007         	
  3631                           l285:
  3632  000F34                     	line	24
  3633                           	
  3634                           l1332:
  3635  000F34                     	bcf	status,0
  3636  000F34  90D8               	rlcf	((c:___aomod@divisor)),c
  3637  000F36  3609               	rlcf	((c:___aomod@divisor+1)),c
  3638  000F38  360A               	rlcf	((c:___aomod@divisor+2)),c
  3639  000F3A  360B               	rlcf	((c:___aomod@divisor+3)),c
  3640  000F3C  360C               	rlcf	((c:___aomod@divisor+4)),c
  3641  000F3E  360D               	rlcf	((c:___aomod@divisor+5)),c
  3642  000F40  360E               	rlcf	((c:___aomod@divisor+6)),c
  3643  000F42  360F               	rlcf	((c:___aomod@divisor+7)),c
  3644  000F44  3610               	line	25
  3645                           	incf	((c:___aomod@counter)),c
  3646  000F46  2A11               	goto	l1334
  3647  000F48  EFA6  F007         	line	26
  3648                           	
  3649                           l284:
  3650  000F4C                     	line	23
  3651                           	
  3652                           l1334:
  3653  000F4C                     	
  3654                           	btfss	((c:___aomod@divisor+7)),c,(63)&7
  3655  000F4C  AE10               	goto	u731
  3656  000F4E  EFAB  F007         	goto	u730
  3657  000F52  EFAD  F007         u731:
  3658  000F56                     	goto	l1332
  3659  000F56  EF9A  F007         u730:
  3660  000F5A                     	goto	l1336
  3661  000F5A  EFB1  F007         	
  3662                           l286:
  3663  000F5E                     	goto	l1336
  3664  000F5E  EFB1  F007         	line	27
  3665                           	
  3666                           l287:
  3667  000F62                     	line	28
  3668                           	
  3669                           l1336:
  3670  000F62                     		movf	((c:___aomod@divisor)),c,w
  3671  000F62  5009               	subwf	((c:___aomod@dividend)),c,w
  3672  000F64  5C01               	movf	((c:___aomod@divisor+1)),c,w
  3673  000F66  500A               	subwfb	((c:___aomod@dividend+1)),c,w
  3674  000F68  5802               	movf	((c:___aomod@divisor+2)),c,w
  3675  000F6A  500B               	subwfb	((c:___aomod@dividend+2)),c,w
  3676  000F6C  5803               	movf	((c:___aomod@divisor+3)),c,w
  3677  000F6E  500C               	subwfb	((c:___aomod@dividend+3)),c,w
  3678  000F70  5804               	movf	((c:___aomod@divisor+4)),c,w
  3679  000F72  500D               	subwfb	((c:___aomod@dividend+4)),c,w
  3680  000F74  5805               	movf	((c:___aomod@divisor+5)),c,w
  3681  000F76  500E               	subwfb	((c:___aomod@dividend+5)),c,w
  3682  000F78  5806               	movf	((c:___aomod@divisor+6)),c,w
  3683  000F7A  500F               	subwfb	((c:___aomod@dividend+6)),c,w
  3684  000F7C  5807               	movf	((c:___aomod@divisor+7)),c,w
  3685  000F7E  5010               	subwfb	((c:___aomod@dividend+7)),c,w
  3686  000F80  5808               	btfss	status,0
  3687  000F82  A0D8               	goto	u741
  3688  000F84  EFC6  F007         	goto	u740
  3689  000F88  EFC8  F007         
  3690                           u741:
  3691  000F8C                     	goto	l1340
  3692  000F8C  EFDA  F007         u740:
  3693  000F90                     	line	29
  3694                           	
  3695                           l1338:
  3696  000F90                     	movf	((c:___aomod@divisor)),c,w
  3697  000F90  5009               	subwf	((c:___aomod@dividend)),c
  3698  000F92  5E01               	movf	((c:___aomod@divisor+1)),c,w
  3699  000F94  500A               	subwfb	((c:___aomod@dividend+1)),c
  3700  000F96  5A02               	movf	((c:___aomod@divisor+2)),c,w
  3701  000F98  500B               	subwfb	((c:___aomod@dividend+2)),c
  3702  000F9A  5A03               	movf	((c:___aomod@divisor+3)),c,w
  3703  000F9C  500C               	subwfb	((c:___aomod@dividend+3)),c
  3704  000F9E  5A04               	movf	((c:___aomod@divisor+4)),c,w
  3705  000FA0  500D               	subwfb	((c:___aomod@dividend+4)),c
  3706  000FA2  5A05               	movf	((c:___aomod@divisor+5)),c,w
  3707  000FA4  500E               	subwfb	((c:___aomod@dividend+5)),c
  3708  000FA6  5A06               	movf	((c:___aomod@divisor+6)),c,w
  3709  000FA8  500F               	subwfb	((c:___aomod@dividend+6)),c
  3710  000FAA  5A07               	movf	((c:___aomod@divisor+7)),c,w
  3711  000FAC  5010               	subwfb	((c:___aomod@dividend+7)),c
  3712  000FAE  5A08               	goto	l1340
  3713  000FB0  EFDA  F007         	
  3714                           l288:
  3715  000FB4                     	line	30
  3716                           	
  3717                           l1340:
  3718  000FB4                     	bcf	status,0
  3719  000FB4  90D8               	rrcf	((c:___aomod@divisor+7)),c
  3720  000FB6  3210               	rrcf	((c:___aomod@divisor+6)),c
  3721  000FB8  320F               	rrcf	((c:___aomod@divisor+5)),c
  3722  000FBA  320E               	rrcf	((c:___aomod@divisor+4)),c
  3723  000FBC  320D               	rrcf	((c:___aomod@divisor+3)),c
  3724  000FBE  320C               	rrcf	((c:___aomod@divisor+2)),c
  3725  000FC0  320B               	rrcf	((c:___aomod@divisor+1)),c
  3726  000FC2  320A               	rrcf	((c:___aomod@divisor)),c
  3727  000FC4  3209               	line	31
  3728                           	
  3729                           l1342:
  3730  000FC6                     	decfsz	((c:___aomod@counter)),c
  3731  000FC6  2E11               	
  3732                           	goto	l1336
  3733  000FC8  EFB1  F007         	goto	l1344
  3734  000FCC  EFEA  F007         	
  3735                           l289:
  3736  000FD0                     	goto	l1344
  3737  000FD0  EFEA  F007         	line	32
  3738                           	
  3739                           l283:
  3740  000FD4                     	line	33
  3741                           	
  3742                           l1344:
  3743  000FD4                     	movf	((c:___aomod@sign)),c,w
  3744  000FD4  5012               	btfsc	status,2
  3745  000FD6  B4D8               	goto	u751
  3746  000FD8  EFF0  F007         	goto	u750
  3747  000FDC  EFF2  F007         u751:
  3748  000FE0                     	goto	l1348
  3749  000FE0  EF04  F008         u750:
  3750  000FE4                     	line	34
  3751                           	
  3752                           l1346:
  3753  000FE4                     	comf	((c:___aomod@dividend+7)),c
  3754  000FE4  1E08               	comf	((c:___aomod@dividend+6)),c
  3755  000FE6  1E07               	comf	((c:___aomod@dividend+5)),c
  3756  000FE8  1E06               	comf	((c:___aomod@dividend+4)),c
  3757  000FEA  1E05               	comf	((c:___aomod@dividend+3)),c
  3758  000FEC  1E04               	comf	((c:___aomod@dividend+2)),c
  3759  000FEE  1E03               	comf	((c:___aomod@dividend+1)),c
  3760  000FF0  1E02               	negf	((c:___aomod@dividend)),c
  3761  000FF2  6C01               	movlw	0
  3762  000FF4  0E00               	addwfc	((c:___aomod@dividend+1)),c
  3763  000FF6  2202               	addwfc	((c:___aomod@dividend+2)),c
  3764  000FF8  2203               	addwfc	((c:___aomod@dividend+3)),c
  3765  000FFA  2204               	addwfc	((c:___aomod@dividend+4)),c
  3766  000FFC  2205               	addwfc	((c:___aomod@dividend+5)),c
  3767  000FFE  2206               	addwfc	((c:___aomod@dividend+6)),c
  3768  001000  2207               	addwfc	((c:___aomod@dividend+7)),c
  3769  001002  2208               	goto	l1348
  3770  001004  EF04  F008         	
  3771                           l290:
  3772  001008                     	line	35
  3773                           	
  3774                           l1348:
  3775  001008                     	movff	(c:___aomod@dividend),(c:?___aomod)
  3776  001008  C001  F001         	movff	(c:___aomod@dividend+1),(c:?___aomod+1)
  3777  00100C  C002  F002         	movff	(c:___aomod@dividend+2),(c:?___aomod+2)
  3778  001010  C003  F003         	movff	(c:___aomod@dividend+3),(c:?___aomod+3)
  3779  001014  C004  F004         	movff	(c:___aomod@dividend+4),(c:?___aomod+4)
  3780  001018  C005  F005         	movff	(c:___aomod@dividend+5),(c:?___aomod+5)
  3781  00101C  C006  F006         	movff	(c:___aomod@dividend+6),(c:?___aomod+6)
  3782  001020  C007  F007         	movff	(c:___aomod@dividend+7),(c:?___aomod+7)
  3783  001024  C008  F008         	goto	l291
  3784  001028  EF16  F008         	
  3785                           l1350:
  3786  00102C                     	line	36
  3787                           	
  3788                           l291:
  3789  00102C                     	return	;funcret
  3790  00102C  0012               	opt stack 0
  3791                           GLOBAL	__end_of___aomod
  3792                           	__end_of___aomod:
  3793  00102E                     	signat	___aomod,8319
  3794                           	global	___aodiv
  3795                           
  3796 ;; *************** function ___aodiv *****************
  3797 ;; Defined at:
  3798 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  dividend        8    0[COMRAM] long long 
  3801 ;;  divisor         8    8[COMRAM] long long 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;  quotient        8   18[COMRAM] long long 
  3804 ;;  sign            1   17[COMRAM] unsigned char 
  3805 ;;  counter         1   16[COMRAM] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  8    0[COMRAM] long long 
  3808 ;; Registers used:
  3809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3815 ;;      Params:        16       0       0       0       0       0       0       0       0
  3816 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3818 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3819 ;;Total ram usage:       26 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_dtoa
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           psect	text14,class=CODE,space=0,reloc=2,group=1
  3828                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  3829                           	line	9
  3830                           global __ptext14
  3831                           __ptext14:
  3832  000CF2                     psect	text14
  3833                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  3834                           	line	9
  3835                           	global	__size_of___aodiv
  3836                           	__size_of___aodiv	equ	__end_of___aodiv-___aodiv
  3837  0000                     	
  3838                           ___aodiv:
  3839  000CF2                     ;incstack = 0
  3840                           	opt	stack 25
  3841                           	line	15
  3842                           	
  3843                           l1272:
  3844  000CF2                     	movlw	low(0)
  3845  000CF2  0E00               	movwf	((c:___aodiv@sign)),c
  3846  000CF4  6E12               	line	16
  3847                           	
  3848                           l1274:
  3849  000CF6                     	btfsc	((c:___aodiv@divisor+7)),c,7
  3850  000CF6  BE10               	goto	u630
  3851  000CF8  EF82  F006         	goto	u631
  3852  000CFC  EF80  F006         
  3853                           u631:
  3854  000D00                     	goto	l1280
  3855  000D00  EF96  F006         u630:
  3856  000D04                     	line	17
  3857                           	
  3858                           l1276:
  3859  000D04                     	comf	((c:___aodiv@divisor+7)),c
  3860  000D04  1E10               	comf	((c:___aodiv@divisor+6)),c
  3861  000D06  1E0F               	comf	((c:___aodiv@divisor+5)),c
  3862  000D08  1E0E               	comf	((c:___aodiv@divisor+4)),c
  3863  000D0A  1E0D               	comf	((c:___aodiv@divisor+3)),c
  3864  000D0C  1E0C               	comf	((c:___aodiv@divisor+2)),c
  3865  000D0E  1E0B               	comf	((c:___aodiv@divisor+1)),c
  3866  000D10  1E0A               	negf	((c:___aodiv@divisor)),c
  3867  000D12  6C09               	movlw	0
  3868  000D14  0E00               	addwfc	((c:___aodiv@divisor+1)),c
  3869  000D16  220A               	addwfc	((c:___aodiv@divisor+2)),c
  3870  000D18  220B               	addwfc	((c:___aodiv@divisor+3)),c
  3871  000D1A  220C               	addwfc	((c:___aodiv@divisor+4)),c
  3872  000D1C  220D               	addwfc	((c:___aodiv@divisor+5)),c
  3873  000D1E  220E               	addwfc	((c:___aodiv@divisor+6)),c
  3874  000D20  220F               	addwfc	((c:___aodiv@divisor+7)),c
  3875  000D22  2210               	line	18
  3876                           	
  3877                           l1278:
  3878  000D24                     	movlw	low(01h)
  3879  000D24  0E01               	movwf	((c:___aodiv@sign)),c
  3880  000D26  6E12               	goto	l1280
  3881  000D28  EF96  F006         	line	19
  3882                           	
  3883                           l268:
  3884  000D2C                     	line	20
  3885                           	
  3886                           l1280:
  3887  000D2C                     	btfsc	((c:___aodiv@dividend+7)),c,7
  3888  000D2C  BE08               	goto	u640
  3889  000D2E  EF9D  F006         	goto	u641
  3890  000D32  EF9B  F006         
  3891                           u641:
  3892  000D36                     	goto	l1286
  3893  000D36  EFB1  F006         u640:
  3894  000D3A                     	line	21
  3895                           	
  3896                           l1282:
  3897  000D3A                     	comf	((c:___aodiv@dividend+7)),c
  3898  000D3A  1E08               	comf	((c:___aodiv@dividend+6)),c
  3899  000D3C  1E07               	comf	((c:___aodiv@dividend+5)),c
  3900  000D3E  1E06               	comf	((c:___aodiv@dividend+4)),c
  3901  000D40  1E05               	comf	((c:___aodiv@dividend+3)),c
  3902  000D42  1E04               	comf	((c:___aodiv@dividend+2)),c
  3903  000D44  1E03               	comf	((c:___aodiv@dividend+1)),c
  3904  000D46  1E02               	negf	((c:___aodiv@dividend)),c
  3905  000D48  6C01               	movlw	0
  3906  000D4A  0E00               	addwfc	((c:___aodiv@dividend+1)),c
  3907  000D4C  2202               	addwfc	((c:___aodiv@dividend+2)),c
  3908  000D4E  2203               	addwfc	((c:___aodiv@dividend+3)),c
  3909  000D50  2204               	addwfc	((c:___aodiv@dividend+4)),c
  3910  000D52  2205               	addwfc	((c:___aodiv@dividend+5)),c
  3911  000D54  2206               	addwfc	((c:___aodiv@dividend+6)),c
  3912  000D56  2207               	addwfc	((c:___aodiv@dividend+7)),c
  3913  000D58  2208               	line	22
  3914                           	
  3915                           l1284:
  3916  000D5A                     	movlw	(01h)&0ffh
  3917  000D5A  0E01               	xorwf	((c:___aodiv@sign)),c
  3918  000D5C  1A12               	goto	l1286
  3919  000D5E  EFB1  F006         	line	23
  3920                           	
  3921                           l269:
  3922  000D62                     	line	24
  3923                           	
  3924                           l1286:
  3925  000D62                     	lfsr	2,(___aodiv@quotient)
  3926  000D62  EE20  F013         	movlw	8-1
  3927  000D66  0E07               u651:
  3928  000D68                     	clrf	postinc2
  3929  000D68  6ADE               	decf	wreg
  3930  000D6A  06E8               	bc	u651
  3931  000D6C  E2FD               	line	25
  3932                           	
  3933                           l1288:
  3934  000D6E                     	movf	((c:___aodiv@divisor)),c,w
  3935  000D6E  5009               iorwf	((c:___aodiv@divisor+1)),c,w
  3936  000D70  100A               iorwf	((c:___aodiv@divisor+2)),c,w
  3937  000D72  100B               iorwf	((c:___aodiv@divisor+3)),c,w
  3938  000D74  100C               iorwf	((c:___aodiv@divisor+4)),c,w
  3939  000D76  100D               iorwf	((c:___aodiv@divisor+5)),c,w
  3940  000D78  100E               iorwf	((c:___aodiv@divisor+6)),c,w
  3941  000D7A  100F               iorwf	((c:___aodiv@divisor+7)),c,w
  3942  000D7C  1010               	btfsc	status,2
  3943  000D7E  B4D8               	goto	u661
  3944  000D80  EFC4  F006         	goto	u660
  3945  000D84  EFC6  F006         
  3946                           u661:
  3947  000D88                     	goto	l1308
  3948  000D88  EF24  F007         u660:
  3949  000D8C                     	line	26
  3950                           	
  3951                           l1290:
  3952  000D8C                     	movlw	low(01h)
  3953  000D8C  0E01               	movwf	((c:___aodiv@counter)),c
  3954  000D8E  6E11               	line	27
  3955                           	goto	l1294
  3956  000D90  EFD6  F006         	
  3957                           l272:
  3958  000D94                     	line	28
  3959                           	
  3960                           l1292:
  3961  000D94                     	bcf	status,0
  3962  000D94  90D8               	rlcf	((c:___aodiv@divisor)),c
  3963  000D96  3609               	rlcf	((c:___aodiv@divisor+1)),c
  3964  000D98  360A               	rlcf	((c:___aodiv@divisor+2)),c
  3965  000D9A  360B               	rlcf	((c:___aodiv@divisor+3)),c
  3966  000D9C  360C               	rlcf	((c:___aodiv@divisor+4)),c
  3967  000D9E  360D               	rlcf	((c:___aodiv@divisor+5)),c
  3968  000DA0  360E               	rlcf	((c:___aodiv@divisor+6)),c
  3969  000DA2  360F               	rlcf	((c:___aodiv@divisor+7)),c
  3970  000DA4  3610               	line	29
  3971                           	incf	((c:___aodiv@counter)),c
  3972  000DA6  2A11               	goto	l1294
  3973  000DA8  EFD6  F006         	line	30
  3974                           	
  3975                           l271:
  3976  000DAC                     	line	27
  3977                           	
  3978                           l1294:
  3979  000DAC                     	
  3980                           	btfss	((c:___aodiv@divisor+7)),c,(63)&7
  3981  000DAC  AE10               	goto	u671
  3982  000DAE  EFDB  F006         	goto	u670
  3983  000DB2  EFDD  F006         u671:
  3984  000DB6                     	goto	l1292
  3985  000DB6  EFCA  F006         u670:
  3986  000DBA                     	goto	l1296
  3987  000DBA  EFE1  F006         	
  3988                           l273:
  3989  000DBE                     	goto	l1296
  3990  000DBE  EFE1  F006         	line	31
  3991                           	
  3992                           l274:
  3993  000DC2                     	line	32
  3994                           	
  3995                           l1296:
  3996  000DC2                     	bcf	status,0
  3997  000DC2  90D8               	rlcf	((c:___aodiv@quotient)),c
  3998  000DC4  3613               	rlcf	((c:___aodiv@quotient+1)),c
  3999  000DC6  3614               	rlcf	((c:___aodiv@quotient+2)),c
  4000  000DC8  3615               	rlcf	((c:___aodiv@quotient+3)),c
  4001  000DCA  3616               	rlcf	((c:___aodiv@quotient+4)),c
  4002  000DCC  3617               	rlcf	((c:___aodiv@quotient+5)),c
  4003  000DCE  3618               	rlcf	((c:___aodiv@quotient+6)),c
  4004  000DD0  3619               	rlcf	((c:___aodiv@quotient+7)),c
  4005  000DD2  361A               	line	33
  4006                           	
  4007                           l1298:
  4008  000DD4                     		movf	((c:___aodiv@divisor)),c,w
  4009  000DD4  5009               	subwf	((c:___aodiv@dividend)),c,w
  4010  000DD6  5C01               	movf	((c:___aodiv@divisor+1)),c,w
  4011  000DD8  500A               	subwfb	((c:___aodiv@dividend+1)),c,w
  4012  000DDA  5802               	movf	((c:___aodiv@divisor+2)),c,w
  4013  000DDC  500B               	subwfb	((c:___aodiv@dividend+2)),c,w
  4014  000DDE  5803               	movf	((c:___aodiv@divisor+3)),c,w
  4015  000DE0  500C               	subwfb	((c:___aodiv@dividend+3)),c,w
  4016  000DE2  5804               	movf	((c:___aodiv@divisor+4)),c,w
  4017  000DE4  500D               	subwfb	((c:___aodiv@dividend+4)),c,w
  4018  000DE6  5805               	movf	((c:___aodiv@divisor+5)),c,w
  4019  000DE8  500E               	subwfb	((c:___aodiv@dividend+5)),c,w
  4020  000DEA  5806               	movf	((c:___aodiv@divisor+6)),c,w
  4021  000DEC  500F               	subwfb	((c:___aodiv@dividend+6)),c,w
  4022  000DEE  5807               	movf	((c:___aodiv@divisor+7)),c,w
  4023  000DF0  5010               	subwfb	((c:___aodiv@dividend+7)),c,w
  4024  000DF2  5808               	btfss	status,0
  4025  000DF4  A0D8               	goto	u681
  4026  000DF6  EFFF  F006         	goto	u680
  4027  000DFA  EF01  F007         
  4028                           u681:
  4029  000DFE                     	goto	l1304
  4030  000DFE  EF14  F007         u680:
  4031  000E02                     	line	34
  4032                           	
  4033                           l1300:
  4034  000E02                     	movf	((c:___aodiv@divisor)),c,w
  4035  000E02  5009               	subwf	((c:___aodiv@dividend)),c
  4036  000E04  5E01               	movf	((c:___aodiv@divisor+1)),c,w
  4037  000E06  500A               	subwfb	((c:___aodiv@dividend+1)),c
  4038  000E08  5A02               	movf	((c:___aodiv@divisor+2)),c,w
  4039  000E0A  500B               	subwfb	((c:___aodiv@dividend+2)),c
  4040  000E0C  5A03               	movf	((c:___aodiv@divisor+3)),c,w
  4041  000E0E  500C               	subwfb	((c:___aodiv@dividend+3)),c
  4042  000E10  5A04               	movf	((c:___aodiv@divisor+4)),c,w
  4043  000E12  500D               	subwfb	((c:___aodiv@dividend+4)),c
  4044  000E14  5A05               	movf	((c:___aodiv@divisor+5)),c,w
  4045  000E16  500E               	subwfb	((c:___aodiv@dividend+5)),c
  4046  000E18  5A06               	movf	((c:___aodiv@divisor+6)),c,w
  4047  000E1A  500F               	subwfb	((c:___aodiv@dividend+6)),c
  4048  000E1C  5A07               	movf	((c:___aodiv@divisor+7)),c,w
  4049  000E1E  5010               	subwfb	((c:___aodiv@dividend+7)),c
  4050  000E20  5A08               	line	35
  4051                           	
  4052                           l1302:
  4053  000E22                     	bsf	(0+(0/8)+(c:___aodiv@quotient)),c,(0)&7
  4054  000E22  8013               	goto	l1304
  4055  000E24  EF14  F007         	line	36
  4056                           	
  4057                           l275:
  4058  000E28                     	line	37
  4059                           	
  4060                           l1304:
  4061  000E28                     	bcf	status,0
  4062  000E28  90D8               	rrcf	((c:___aodiv@divisor+7)),c
  4063  000E2A  3210               	rrcf	((c:___aodiv@divisor+6)),c
  4064  000E2C  320F               	rrcf	((c:___aodiv@divisor+5)),c
  4065  000E2E  320E               	rrcf	((c:___aodiv@divisor+4)),c
  4066  000E30  320D               	rrcf	((c:___aodiv@divisor+3)),c
  4067  000E32  320C               	rrcf	((c:___aodiv@divisor+2)),c
  4068  000E34  320B               	rrcf	((c:___aodiv@divisor+1)),c
  4069  000E36  320A               	rrcf	((c:___aodiv@divisor)),c
  4070  000E38  3209               	line	38
  4071                           	
  4072                           l1306:
  4073  000E3A                     	decfsz	((c:___aodiv@counter)),c
  4074  000E3A  2E11               	
  4075                           	goto	l1296
  4076  000E3C  EFE1  F006         	goto	l1308
  4077  000E40  EF24  F007         	
  4078                           l276:
  4079  000E44                     	goto	l1308
  4080  000E44  EF24  F007         	line	39
  4081                           	
  4082                           l270:
  4083  000E48                     	line	40
  4084                           	
  4085                           l1308:
  4086  000E48                     	movf	((c:___aodiv@sign)),c,w
  4087  000E48  5012               	btfsc	status,2
  4088  000E4A  B4D8               	goto	u691
  4089  000E4C  EF2A  F007         	goto	u690
  4090  000E50  EF2C  F007         u691:
  4091  000E54                     	goto	l1312
  4092  000E54  EF3E  F007         u690:
  4093  000E58                     	line	41
  4094                           	
  4095                           l1310:
  4096  000E58                     	comf	((c:___aodiv@quotient+7)),c
  4097  000E58  1E1A               	comf	((c:___aodiv@quotient+6)),c
  4098  000E5A  1E19               	comf	((c:___aodiv@quotient+5)),c
  4099  000E5C  1E18               	comf	((c:___aodiv@quotient+4)),c
  4100  000E5E  1E17               	comf	((c:___aodiv@quotient+3)),c
  4101  000E60  1E16               	comf	((c:___aodiv@quotient+2)),c
  4102  000E62  1E15               	comf	((c:___aodiv@quotient+1)),c
  4103  000E64  1E14               	negf	((c:___aodiv@quotient)),c
  4104  000E66  6C13               	movlw	0
  4105  000E68  0E00               	addwfc	((c:___aodiv@quotient+1)),c
  4106  000E6A  2214               	addwfc	((c:___aodiv@quotient+2)),c
  4107  000E6C  2215               	addwfc	((c:___aodiv@quotient+3)),c
  4108  000E6E  2216               	addwfc	((c:___aodiv@quotient+4)),c
  4109  000E70  2217               	addwfc	((c:___aodiv@quotient+5)),c
  4110  000E72  2218               	addwfc	((c:___aodiv@quotient+6)),c
  4111  000E74  2219               	addwfc	((c:___aodiv@quotient+7)),c
  4112  000E76  221A               	goto	l1312
  4113  000E78  EF3E  F007         	
  4114                           l277:
  4115  000E7C                     	line	42
  4116                           	
  4117                           l1312:
  4118  000E7C                     	movff	(c:___aodiv@quotient),(c:?___aodiv)
  4119  000E7C  C013  F001         	movff	(c:___aodiv@quotient+1),(c:?___aodiv+1)
  4120  000E80  C014  F002         	movff	(c:___aodiv@quotient+2),(c:?___aodiv+2)
  4121  000E84  C015  F003         	movff	(c:___aodiv@quotient+3),(c:?___aodiv+3)
  4122  000E88  C016  F004         	movff	(c:___aodiv@quotient+4),(c:?___aodiv+4)
  4123  000E8C  C017  F005         	movff	(c:___aodiv@quotient+5),(c:?___aodiv+5)
  4124  000E90  C018  F006         	movff	(c:___aodiv@quotient+6),(c:?___aodiv+6)
  4125  000E94  C019  F007         	movff	(c:___aodiv@quotient+7),(c:?___aodiv+7)
  4126  000E98  C01A  F008         	goto	l278
  4127  000E9C  EF50  F007         	
  4128                           l1314:
  4129  000EA0                     	line	43
  4130                           	
  4131                           l278:
  4132  000EA0                     	return	;funcret
  4133  000EA0  0012               	opt stack 0
  4134                           GLOBAL	__end_of___aodiv
  4135                           	__end_of___aodiv:
  4136  000EA2                     	signat	___aodiv,8319
  4137                           	global	_UART_Write_String
  4138                           
  4139 ;; *************** function _UART_Write_String *****************
  4140 ;; Defined at:
  4141 ;;		line 66 in file "main.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  text            2    1[COMRAM] PTR unsigned char 
  4144 ;;		 -> Buffer(10), 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  i               2    3[COMRAM] unsigned short 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4156 ;;      Params:         2       0       0       0       0       0       0       0       0
  4157 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4159 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4160 ;;Total ram usage:        4 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; Hardware stack levels required when called:    1
  4163 ;; This function calls:
  4164 ;;		_UART_Write
  4165 ;; This function is called by:
  4166 ;;		_CVD_Touch_Sample
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4170                           	file	"main.c"
  4171                           	line	66
  4172                           global __ptext15
  4173                           __ptext15:
  4174  00141A                     psect	text15
  4175                           	file	"main.c"
  4176                           	line	66
  4177                           	global	__size_of_UART_Write_String
  4178                           	__size_of_UART_Write_String	equ	__end_of_UART_Write_String-_UART_Write_String
  4179  0000                     	
  4180                           _UART_Write_String:
  4181  00141A                     ;incstack = 0
  4182                           	opt	stack 28
  4183                           	line	69
  4184                           	
  4185                           l1468:
  4186  00141A                     ;main.c: 66: void UART_Write_String(uint8_t *text);main.c: 67: {;main.c: 68:   uint16_t 
                                 i;;main.c: 69:   for(i=0;text[i]!='\0';i++)
  4187                           	movlw	high(0)
  4188  00141A  0E00               	movwf	((c:UART_Write_String@i+1)),c
  4189  00141C  6E05               	movlw	low(0)
  4190  00141E  0E00               	movwf	((c:UART_Write_String@i)),c
  4191  001420  6E04               	goto	l1474
  4192  001422  EF20  F00A         	
  4193                           l80:
  4194  001426                     	line	70
  4195                           	
  4196                           l1470:
  4197  001426                     ;main.c: 70:     UART_Write(text[i]);
  4198                           	movf	((c:UART_Write_String@i)),c,w
  4199  001426  5004               	addwf	((c:UART_Write_String@text)),c,w
  4200  001428  2402               	movwf	c:fsr2l
  4201  00142A  6ED9               	movf	((c:UART_Write_String@i+1)),c,w
  4202  00142C  5005               	addwfc	((c:UART_Write_String@text+1)),c,w
  4203  00142E  2003               	movwf	1+c:fsr2l
  4204  001430  6EDA               	movf	indf2,w
  4205  001432  50DF               	
  4206                           	call	_UART_Write
  4207  001434  EC6D  F00A         	
  4208                           l1472:
  4209  001438                     	infsnz	((c:UART_Write_String@i)),c
  4210  001438  4A04               	incf	((c:UART_Write_String@i+1)),c
  4211  00143A  2A05               	goto	l1474
  4212  00143C  EF20  F00A         	
  4213                           l79:
  4214  001440                     	
  4215                           l1474:
  4216  001440                     	movf	((c:UART_Write_String@i)),c,w
  4217  001440  5004               	addwf	((c:UART_Write_String@text)),c,w
  4218  001442  2402               	movwf	c:fsr2l
  4219  001444  6ED9               	movf	((c:UART_Write_String@i+1)),c,w
  4220  001446  5005               	addwfc	((c:UART_Write_String@text+1)),c,w
  4221  001448  2003               	movwf	1+c:fsr2l
  4222  00144A  6EDA               	movf	indf2,w
  4223  00144C  50DF               	btfss	status,2
  4224  00144E  A4D8               	goto	u971
  4225  001450  EF2C  F00A         	goto	u970
  4226  001454  EF2E  F00A         u971:
  4227  001458                     	goto	l1470
  4228  001458  EF13  F00A         u970:
  4229  00145C                     	goto	l82
  4230  00145C  EF30  F00A         	
  4231                           l81:
  4232  001460                     	line	71
  4233                           	
  4234                           l82:
  4235  001460                     	return	;funcret
  4236  001460  0012               	opt stack 0
  4237                           GLOBAL	__end_of_UART_Write_String
  4238                           	__end_of_UART_Write_String:
  4239  001462                     	signat	_UART_Write_String,4217
  4240                           	global	_UART_Write
  4241                           
  4242 ;; *************** function _UART_Write *****************
  4243 ;; Defined at:
  4244 ;;		line 61 in file "main.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;  data            1    wreg     unsigned char 
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;  data            1    0[COMRAM] unsigned char 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  1    wreg      void 
  4251 ;; Registers used:
  4252 ;;		wreg
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4258 ;;      Params:         0       0       0       0       0       0       0       0       0
  4259 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4260 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4261 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4262 ;;Total ram usage:        1 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_UART_Write_String
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           psect	text16,class=CODE,space=0,reloc=2,group=0
  4271                           	line	61
  4272                           global __ptext16
  4273                           __ptext16:
  4274  0014DA                     psect	text16
  4275                           	file	"main.c"
  4276                           	line	61
  4277                           	global	__size_of_UART_Write
  4278                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  4279  0000                     	
  4280                           _UART_Write:
  4281  0014DA                     ;incstack = 0
  4282                           	opt	stack 28
  4283                           ;UART_Write@data stored from wreg
  4284                           	movwf	((c:UART_Write@data)),c
  4285  0014DA  6E01               	line	63
  4286                           	
  4287                           l1456:
  4288  0014DC                     ;main.c: 61: void UART_Write(uint8_t data);main.c: 62: {;main.c: 63:   while(!TRMT);
  4289                           	goto	l73
  4290  0014DC  EF70  F00A         	
  4291                           l74:
  4292  0014E0                     	
  4293                           l73:
  4294  0014E0                     	btfss	c:(32097/8),(32097)&7	;volatile
  4295  0014E0  A2AC               	goto	u951
  4296  0014E2  EF75  F00A         	goto	u950
  4297  0014E6  EF77  F00A         u951:
  4298  0014EA                     	goto	l73
  4299  0014EA  EF70  F00A         u950:
  4300  0014EE                     	goto	l1458
  4301  0014EE  EF79  F00A         	
  4302                           l75:
  4303  0014F2                     	line	64
  4304                           	
  4305                           l1458:
  4306  0014F2                     ;main.c: 64:   TXREG = data;
  4307                           	movff	(c:UART_Write@data),(c:4013)	;volatile
  4308  0014F2  C001  FFAD         	line	65
  4309                           	
  4310                           l76:
  4311  0014F6                     	return	;funcret
  4312  0014F6  0012               	opt stack 0
  4313                           GLOBAL	__end_of_UART_Write
  4314                           	__end_of_UART_Write:
  4315  0014F8                     	signat	_UART_Write,4217
  4316                           	global	_ADC_Init
  4317                           
  4318 ;; *************** function _ADC_Init *****************
  4319 ;; Defined at:
  4320 ;;		line 40 in file "main.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           psect	text17,class=CODE,space=0,reloc=2,group=0
  4347                           	line	40
  4348                           global __ptext17
  4349                           __ptext17:
  4350  001512                     psect	text17
  4351                           	file	"main.c"
  4352                           	line	40
  4353                           	global	__size_of_ADC_Init
  4354                           	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
  4355  0000                     	
  4356                           _ADC_Init:
  4357  001512                     ;incstack = 0
  4358                           	opt	stack 30
  4359                           	line	42
  4360                           	
  4361                           l1154:
  4362  001512                     ;main.c: 42:    TRISA = 0xFF;
  4363                           	setf	((c:3986)),c	;volatile
  4364  001512  6892               	line	43
  4365                           	
  4366                           l1156:
  4367  001514                     ;main.c: 43:    ADCON1 = 0x0A;
  4368                           	movlw	low(0Ah)
  4369  001514  0E0A               	movwf	((c:4033)),c	;volatile
  4370  001516  6EC1               	line	44
  4371                           ;main.c: 44:    ADCON2 = 0x3E;
  4372                           	movlw	low(03Eh)
  4373  001518  0E3E               	movwf	((c:4032)),c	;volatile
  4374  00151A  6EC0               	line	45
  4375                           ;main.c: 45:    ADCON0 = 0x01;
  4376                           	movlw	low(01h)
  4377  00151C  0E01               	movwf	((c:4034)),c	;volatile
  4378  00151E  6EC2               	line	46
  4379                           	
  4380                           l1158:
  4381  001520                     ;main.c: 46:    _delay((unsigned long)((30)*(48000000/4000000.0)));
  4382                           	opt asmopt_push
  4383                           opt asmopt_off
  4384                           	movlw	120
  4385  001520  0E78               u1057:
  4386  001522                     decfsz	wreg,f
  4387  001522  2EE8               	bra	u1057
  4388  001524  D7FE               opt asmopt_pop
  4389                           
  4390                           	line	47
  4391                           	
  4392                           l67:
  4393  001526                     	return	;funcret
  4394  001526  0012               	opt stack 0
  4395                           GLOBAL	__end_of_ADC_Init
  4396                           	__end_of_ADC_Init:
  4397  001528                     	signat	_ADC_Init,89
  4398                           psect	smallconst
  4399                           	db 0	; dummy byte at the end
  4400  000807  00                 	global	__smallconst
  4401                           	global	__mediumconst
  4402                           	GLOBAL	__activetblptr
  4403                           __activetblptr	EQU	1
  4404  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  4405                           	PSECT	rparam,class=COMRAM,space=1,noexec
  4406                           	GLOBAL	__Lrparam
  4407                           	FNCONF	rparam,??,?
  4408                           	GLOBAL	___rparam_used
  4409                           	___rparam_used EQU 1
  4410  0000                     	GLOBAL	___param_bank
  4411                           	___param_bank EQU 0
  4412  0000                     GLOBAL	__Lparam, __Hparam
  4413                           GLOBAL	__Lrparam, __Hrparam
  4414                           __Lparam	EQU	__Lrparam
  4415  0000                     __Hparam	EQU	__Hrparam
  4416  0000                     	end


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160     14      66
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S595_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_Write_String@text	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 


Critical Paths under _main in COMRAM

    _CVD_Touch_Sample->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _UART_Write_String->_UART_Write

Critical Paths under _main in BANK0

    _main->_CVD_Touch_Sample
    _CVD_Touch_Sample->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6644
                                             93 COMRAM     1     1      0
                           _ADC_Init
                   _CVD_Touch_Sample
                       _UART_TX_Init
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CVD_Touch_Sample                                     4     4      0    6644
                                             10 BANK0      4     4      0
                  _UART_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    6456
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _UART_Write_String                                    4     2      2     188
                                              1 COMRAM     4     2      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _CVD_Touch_Sample
     _UART_Write_String
       _UART_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _UART_TX_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      42       5       41.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A0      20        0.0%
DATA                 0      0      A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Sep 23 20:36:50 2019

                        l61 14BA                          l70 153A                          l62 14D2  
                        l63 14D6                          l80 1426                          l64 14D6  
                        l73 14E0                          l81 1460                          l74 14E0  
                        l82 1460                          l67 1526                          l75 14F2  
                        l76 14F6                          l85 1124                          l86 1124  
                        l79 1440                          l87 1136                          l88 11D8  
                        l89 11E0                 __CFG_BORV$3 000000  __size_of_UART_Write_String 0048  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                         l120 129A                         l112 120A  
                       l121 12B6                         l114 1224                         l130 08EE  
                       l116 122C                         l140 0AF8                         l132 08E4  
                       l124 0874                         l117 1254                         l133 0A06  
                       l125 088A                         l118 1238                         l142 0AB4  
                       l134 090A                         l150 0CB2                         l119 1272  
                       l127 08B0                         l151 0C3E                         l144 0AD8  
                       l136 0A8A                         l160 1314                         l129 08B8  
                       l153 0BBA                         l161 131C                         l146 0AE4  
                       l138 0A86                         l154 0CF0                         l147 0B24  
                       l139 0A8E                         l155 0C94                         l270 0E48  
                       l158 12F8                         l271 0DAC                         l159 12CE  
                       l272 0D94                         l273 0DBE                         l281 0EDC  
                       l274 0DC2                         l290 1008                         l282 0F0E  
                       l275 0E28                         l291 102C                         l283 0FD4  
                       l276 0E44                         l268 0D2C                         l284 0F4C  
                       l277 0E7C                         l269 0D62                         l285 0F34  
                       l278 0EA0                         l286 0F5E                         l287 0F62  
                       l288 0FB4                         l289 0FD0                         l841 14A4  
                       l842 14A4                         l850 1106                         l851 1102  
                       l860 13DA                         l853 10B8                         l861 1418  
                       l854 110A                         l862 1418                         l839 1498  
                       l847 1060                         l872 153C                         l849 1056  
                       l859 13F4                         l875 1390                         l876 1388  
                       l877 13AC                         l869 137A                         l878 13CC  
              __CFG_CPB$OFF 000000                         _RB0 007C08                         _RC0 007C10  
                       u520 1040                         u600 1272                         u521 103C  
                       u601 126E                         u530 1052                         u610 1282  
              __CFG_CPD$OFF 000000                         u531 104E                         u611 127E  
                       u700 0EB4                         u620 147C                         u540 107E  
                       u701 0EB0                         u621 1478                         u541 107A  
                       u630 0D04                         u710 0EEA                         u550 10B4  
                       u631 0D00                         u711 0EE6                         u551 10B0  
                       u640 0D3A                         u720 0F2C                         u560 1414  
                       u800 08A4                         u641 0D36                         u721 0F28  
                       u561 1410                         u801 08A0                         u730 0F5A  
                       u570 13A8                         u810 08D2                         u651 0D68  
                       u731 0F56                         u571 13A4                         u811 08CE  
                       u660 0D8C                         u740 0F90                         u580 11F2  
                       u900 0ACC                         u820 08E0                         u661 0D88  
                       u741 0F8C                         u581 11EE                         u901 0AC8  
                       u821 08DC                         u670 0DBA                         u750 0FE4  
                       u590 1218                         u830 0A20                         u910 0B4A  
                       u671 0DB6                         u751 0FE0                         u591 1214  
                       u831 0A1C                         u911 0B46                         u680 0E02  
                       u840 0A3E                         u760 0838                         u920 0B92  
                       u681 0DFE                         u841 0A3A                         u761 0832  
                       u921 0B8E                         u690 0E58                         u850 0A58  
                       u770 083A                         u930 0BB6                         u691 0E54  
                       u851 0A54                         u931 0BB2                         u860 0A72  
                       u780 0850                         u940 0C62                         u861 0A6E  
                       u781 084C                         u941 0C5E                         u950 14EE  
                       u870 0A82                         u790 0884                         u951 14EA  
                       u871 0A7E                         u791 0880                         u880 0AA0  
                       u960 1314                         u881 0A9C                         u961 1310  
                       u970 145C                         u890 0AB0                         u971 1458  
                       u891 0AAC                         u980 1132                         u981 112E  
                       u995 1140                __CFG_BOR$OFF 000000                         _abs 1462  
                       _pad 11E2                         wreg 000FE8                __CFG_IESO$ON 000000  
              __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000                        ?_abs 0013  
                      l1300 0E02                        l1220 1060                        l1310 0E58  
                      l1302 0E22                        l1222 107E                        l1214 102E  
                      l1230 13DA                        l1312 0E7C                        l1304 0E28  
                      l1320 0EB4                        l1224 10B8                        l1216 1040  
                      l1232 13EC                        l1240 1390                        l1400 0AB4  
                      l1160 1528                        l1154 1512                        l1314 0EA0  
                      l1306 0E3A                        l1330 0F2C                        l1322 0ED4  
                      l1226 110A                        l1218 1056                        l1234 13F4  
                      l1242 13AC                        l1250 120A                        l1402 0ABA  
                      l1410 0AF8                        l1170 1534                        l1162 152A  
                      l1156 1514                        l1308 0E48                        l1340 0FB4  
                      l1332 0F34                        l1324 0EDC                        l1316 0EA2  
                      l1228 13CE                        l1244 13CC                        l1236 137C  
                      l1260 1254                        l1252 1218                        l1412 0B24  
                      l1404 0ACC                        l1420 0B6A                        l1500 1190  
                      l1172 1536                        l1164 152E                        l1158 1520  
                      l1350 102C                        l1342 0FC6                        l1334 0F4C  
                      l1326 0EEA                        l1318 0EA6                        l1270 147C  
                      l1238 1388                        l1262 1282                        l1254 1224  
                      l1246 11E2                        l1406 0AD8                        l1430 0C3A  
                      l1422 0B6E                        l1414 0B26                        l1510 11DE  
                      l1502 11A8                        l1174 1538                        l1166 1530  
                      l1280 0D2C                        l1272 0CF2                        l1336 0F62  
                      l1344 0FD4                        l1328 0F0E                        l1264 129A  
                      l1256 1238                        l1248 11F2                        l1408 0AE4  
                      l1360 0884                        l1352 0808                        l1440 0C90  
                      l1432 0C3E                        l1424 0B92                        l1416 0B4A  
                      l1504 11BA                        l1168 1532                        l1520 14B4  
                      l1512 14A6                        l1290 0D8C                        l1282 0D3A  
                      l1274 0CF6                        l1346 0FE4                        l1338 0F90  
                      l1266 12B6                        l1258 124C                        l1370 08E4  
                      l1362 088A                        l1354 0828                        l1450 0CD6  
                      l1434 0C62                        l1442 0C94                        l1426 0BBA  
                      l1418 0B58                        l1506 11D8                        l1522 14BA  
                      l1514 14AE                        l1292 0D94                        l1284 0D5A  
                      l1276 0D04                        l1348 1008                        l1268 1462  
                      l1380 0992                        l1372 08EE                        l1364 08A4  
                      l1356 0850                        l1452 0CE4                        l1444 0CA2  
                      l1436 0C70                        l1428 0C02                        l1460 12B8  
                      l1508 11DC                        l1524 14BE                        l1516 14B0  
                      l1470 1426                        l1294 0DAC                        l1286 0D62  
                      l1278 0D24                        l1390 0A3E                        l1382 0998  
                      l1374 08F6                        l1366 08C0                        l1358 0874  
                      l1454 0CF0                        l1446 0CAE                        l1438 0C84  
                      l1462 12C0                        l1518 14B2                        l1456 14DC  
                      l1472 1438                        l1296 0DC2                        l1288 0D6E  
                      l1392 0A58                        l1384 099E                        l1376 090A  
                      l1368 08D2                        l1448 0CB2                        l1464 12CE  
                      l1480 1338                        l1458 14F2                        l1474 1440  
                      l1298 0DD4                        l1394 0A72                        l1378 0910  
                      l1386 0A06                        l1466 12F8                        l1482 1340  
                      l1490 1118                        l1468 141A                        l1388 0A20  
                      l1396 0A8E                        l1484 1364                        l1476 131E  
                      l1492 111E                        l1398 0AA0                        l1486 137A  
                      l1478 1330                        l1494 1136                        l1496 1168  
                      l1488 110C                        l1498 1184                        ?_pad 0011  
                      STR_1 0801                        _BRGH 007D62                        u1000 11A8  
                      u1001 11A4                        u1010 11B8                        u1011 11B2  
                      u1025 11BA                        u1037 14C4                        u1047 11C6  
                      u1057 1522                        _SPEN 007D5F                        _TRMT 007D61  
                      _TXEN 007D65                        _SYNC 007D64                        abs@a 0013  
                      _dbuf 006A                        _main 14A6                        _dtoa 0808  
                      _prec 0064                        _nout 0060                        pad@i 0018  
                      pad@p 0015                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001A  
                      fsr2l 000FD9            __end_of_ADC_Init 1528                        start 0000  
             __CFG_MCLRE$ON 000000                ___param_bank 000000                       ??_abs 0015  
                     ??_pad 0017               __CFG_PLLDIV$2 000000              __CFG_CCP2MX$ON 000000  
           __end_of___aodiv 0EA2                       ?_main 0001                       ?_dtoa 001C  
           __end_of___aomod 102E                       _BRG16 007DC3                vfpfcnvrt@fmt 0042  
                     _SPBRG 000FAF               __CFG_USBDIV$1 000000                       _TRISA 000F92  
                     _TXREG 000FAD               __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000  
             __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000  
            __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000  
            __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000                 ?_UART_Write 0001  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000                       _flags 0066                       _fputc 102E  
                     _fputs 13CE                       pad@fp 0011                       _width 0062  
                     _putch 153C                       dtoa@d 001E                       dtoa@i 003E  
                     dtoa@n 0036                       dtoa@p 0030                       dtoa@s 0034  
                     dtoa@w 0032                       tablat 000FF5                       status 000FD8  
           __end_of_sprintf 137C             __initialization 14F8                __end_of_main 14DA  
              __end_of_dtoa 0B26                      ??_main 005E                      ??_dtoa 0026  
             __activetblptr 000001                      _ADCON0 000FC2                      _ADCON1 000FC1  
                    _ADCON2 000FC0                      ?_fputc 0001                      ?_fputs 000A  
                    _ADRESH 000FC4                      _ADRESL 000FC3                      _AD_RES 0068  
                    ?_putch 0001                      _TRISB0 007C98                      _TRISC0 007CA0  
                    _TRISC6 007CA6                      _TRISC7 007CA7                      _Buffer 008A  
            __CFG_XINST$OFF 000000           ?_CVD_Touch_Sample 0001                vfprintf@cfmt 0056  
       __size_of_UART_Write 001E                   ??___aodiv 0011                   ??___aomod 0011  
            __CFG_STVREN$ON 000000          ??_CVD_Touch_Sample 009E                      clear_0 14FE  
                    pad@buf 0013                      dtoa@fp 001C                      _strlen 137C  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ?_ADC_Init 0001                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                    putch@c 0001            __end_of_vfprintf 131E                   ??_sprintf 005E  
                __accesstop 0060     __end_of__initialization 1504             __CFG_PBADEN$OFF 000000  
             ___rparam_used 000001              __pcstackCOMRAM 0001               __end_of_fputc 110C  
             __end_of_fputs 141A               __end_of_putch 153E                  ??_ADC_Init 0001  
                   ??_fputc 0005                     ??_fputs 000E                     ??_putch 0001  
                __pbssBANK0 0060                     ?_strlen 0001                ??_UART_Write 0001  
        __size_of_vfpfcnvrt 01CC               ?_UART_TX_Init 0001             __CFG_VREGEN$OFF 000000  
                   __Hparam 0000                     __Lparam 0000                     ___aodiv 0CF2  
                   ___aomod 0EA2          __end_of_UART_Write 14F8                   ?_vfprintf 0050  
              __psmallconst 0800                     __pcinit 14F8                     __ramtop 0800  
                   __ptext0 14A6                     __ptext1 1528                     __ptext2 110C  
                   __ptext3 131E                     __ptext4 12B8                     __ptext5 0B26  
                   __ptext6 0808                     __ptext7 11E2                     __ptext8 137C  
                   __ptext9 13CE             __size_of_strlen 0052                __size_of_abs 0044  
              __size_of_pad 00D6              ??_UART_TX_Init 0001                     _sprintf 131E  
      end_of_initialization 1504                     fputc@fp 0003                     fputs@fp 000C  
         __end_of_vfpfcnvrt 0CF2                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_vfprintf 0056  
                   strlen@a 0005                     strlen@s 0001              UART_Write@data 0001  
 __size_of_CVD_Touch_Sample 00D6       UART_Write_String@text 0002           __size_of_ADC_Init 0016  
               vfpfcnvrt@ap 0044                 vfpfcnvrt@fp 0040                 vfpfcnvrt@ll 0048  
            __end_of_strlen 13CE         start_initialization 14F8                 __end_of_abs 14A6  
               __end_of_pad 12B8                 vfprintf@fmt 0052        __end_of_UART_TX_Init 153C  
          __CFG_LPT1OSC$OFF 000000                    ??_strlen 0003               __pcstackBANK0 0094  
          ___aodiv@dividend 0001                    ?___aodiv 0001                    ?___aomod 0001  
          ___aodiv@quotient 0013           __size_of_vfprintf 0066                 __smallconst 0800  
                  _ADC_Init 1512            _CVD_Touch_Sample 110C                    ?_sprintf 0058  
            __size_of_fputc 00DE              __size_of_fputs 004C              __size_of_putch 0002  
                  _GO_nDONE 007E11            __CFG_WDTPS$32768 000000                   _vfpfcnvrt 0B26  
     __size_of_UART_TX_Init 0014                    __Hrparam 0000                  vfprintf@ap 0054  
                  __Lrparam 0000                  vfprintf@fp 0050                __Lsmallconst 0800  
          __size_of___aodiv 01B0            __size_of___aomod 018C                  ?_vfpfcnvrt 0040  
           ___aodiv@divisor 0009             ___aodiv@counter 0011           _UART_Write_String 141A  
                sprintf@fmt 005A                  sprintf@ret 0094          ?_UART_Write_String 0002  
                  _dtoa$134 002E                    __ptext10 102E                    __ptext11 153C  
                  __ptext12 1462                    __ptext13 0EA2                    __ptext14 0CF2  
                  __ptext15 141A                    __ptext16 14DA                    __ptext17 1512  
          __size_of_sprintf 005E                _UART_TX_Init 1528         ??_UART_Write_String 0004  
             __size_of_main 0034               __size_of_dtoa 031E                    _vfprintf 12B8  
 __end_of_UART_Write_String 1462            ___aomod@dividend 0001       __CFG_CPUDIV$OSC1_PLL2 000000  
                 sprintf@ap 0096    __end_of_CVD_Touch_Sample 11E2          UART_Write_String@i 0004  
           ___aomod@divisor 0009                 ??_vfpfcnvrt 0046             ___aomod@counter 0011  
                  sprintf@f 0098                    sprintf@s 0058                  _UART_Write 14DA  
              ___aodiv@sign 0012          __CFG_FOSC$HSPLL_HS 000000                ___aomod@sign 0012  
