

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Sep 23 14:50:36 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32  0000                     
    33                           ; Version 2.00
    34                           ; Generated 27/05/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F2550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     _TMR1	set	4046
    68  0000                     _TMR1H	set	4047
    69  0000                     _TMR1L	set	4046
    70  0000                     _TXREG	set	4013
    71  0000                     _SPBRG	set	4015
    72  0000                     _CMCON	set	4020
    73  0000                     _CVRCON	set	4021
    74  0000                     _C1OUT	set	32166
    75  0000                     _TMR1ON	set	32360
    76  0000                     _T1CKPS1	set	32365
    77  0000                     _T1CKPS0	set	32364
    78  0000                     _TMR1CS	set	32361
    79  0000                     _TRMT	set	32097
    80  0000                     _TXEN	set	32101
    81  0000                     _TRISC7	set	31911
    82  0000                     _TRISC6	set	31910
    83  0000                     _BRG16	set	32195
    84  0000                     _SPEN	set	32095
    85  0000                     _SYNC	set	32100
    86  0000                     _BRGH	set	32098
    87  0000                     _GIE	set	32663
    88  0000                     _PEIE	set	32662
    89  0000                     _CMIE	set	32006
    90  0000                     _CMIF	set	32014
    91  0000                     _RC2	set	31762
    92  0000                     _TRISC2	set	31906
    93  0000                     _RC1	set	31761
    94  0000                     _TRISC1	set	31905
    95  0000                     _RB0	set	31752
    96  0000                     _TRISB0	set	31896
    97                           
    98                           	psect	smallconst
    99  000800                     __psmallconst:
   100                           	opt stack 0
   101  000800  00                 	db	0
   102  000801                     STR_1:
   103  000801  4F                 	db	79	;'O'
   104  000802  4D                 	db	77	;'M'
   105  000803  47                 	db	71	;'G'
   106  000804  20                 	db	32
   107  000805  50                 	db	80	;'P'
   108  000806  4C                 	db	76	;'L'
   109  000807  5A                 	db	90	;'Z'
   110  000808  5A                 	db	90	;'Z'
   111  000809  5A                 	db	90	;'Z'
   112  00080A  00                 	db	0
   113  00080B                     STR_2:
   114  00080B  25                 	db	37
   115  00080C  64                 	db	100	;'d'
   116  00080D  20                 	db	32
   117  00080E  0A                 	db	10
   118  00080F  0D                 	db	13
   119  000810  00                 	db	0
   120                           
   121                           ; #config settings
   122  000811  00                 	db	0	; dummy byte at the end
   123  0000                     
   124                           	psect	cinit
   125  001224                     __pcinit:
   126                           	opt stack 0
   127  001224                     start_initialization:
   128                           	opt stack 0
   129  001224                     __initialization:
   130                           	opt stack 0
   131                           
   132                           ; Clear objects allocated to BANK0 (54 bytes)
   133  001224  EE00  F060         	lfsr	0,__pbssBANK0
   134  001228  0E36               	movlw	54
   135  00122A                     clear_0:
   136  00122A  6AEE               	clrf	postinc0,c
   137  00122C  06E8               	decf	wreg,f,c
   138  00122E  E1FD               	bnz	clear_0
   139  001230                     end_of_initialization:
   140                           	opt stack 0
   141  001230                     __end_of__initialization:
   142                           	opt stack 0
   143  001230  0E00               	movlw	low (__Lmediumconst shr (0+16))
   144  001232  6EF8               	movwf	tblptru,c
   145  001234  0100               	movlb	0
   146  001236  EFA1  F008         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           
   151                           	psect	bssBANK0
   152  000060                     __pbssBANK0:
   153                           	opt stack 0
   154  000060                     _Ticks:
   155                           	opt stack 0
   156  000060                     	ds	4
   157  000064                     _nout:
   158                           	opt stack 0
   159  000064                     	ds	2
   160  000066                     _width:
   161                           	opt stack 0
   162  000066                     	ds	2
   163  000068                     _prec:
   164                           	opt stack 0
   165  000068                     	ds	2
   166  00006A                     _flags:
   167                           	opt stack 0
   168  00006A                     	ds	2
   169  00006C                     _dbuf:
   170                           	opt stack 0
   171  00006C                     	ds	32
   172  00008C                     _Buffer:
   173                           	opt stack 0
   174  00008C                     	ds	10
   175                           tblptru	equ	0xFF8
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           
   179                           	psect	cstackBANK0
   180  000096                     __pcstackBANK0:
   181                           	opt stack 0
   182  000096                     sprintf@ret:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x0
   186  000096                     	ds	2
   187  000098                     sprintf@ap:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x2
   191  000098                     	ds	2
   192  00009A                     sprintf@f:
   193                           	opt stack 0
   194                           
   195                           ; 6 bytes @ 0x4
   196  00009A                     	ds	6
   197  0000A0                     ??_Touch_Sense:
   198                           
   199                           ; 1 bytes @ 0xA
   200  0000A0                     	ds	2
   201  0000A2                     ??_main:
   202                           
   203                           ; 1 bytes @ 0xC
   204  0000A2                     	ds	1
   205                           tblptru	equ	0xFF8
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209                           	psect	cstackCOMRAM
   210  000001                     __pcstackCOMRAM:
   211                           	opt stack 0
   212  000001                     ?_strlen:
   213                           	opt stack 0
   214  000001                     ?___aodiv:
   215                           	opt stack 0
   216  000001                     ?___aomod:
   217                           	opt stack 0
   218  000001                     UART_Write@data:
   219                           	opt stack 0
   220  000001                     fputc@c:
   221                           	opt stack 0
   222  000001                     strlen@s:
   223                           	opt stack 0
   224  000001                     ___aodiv@dividend:
   225                           	opt stack 0
   226  000001                     ___aomod@dividend:
   227                           	opt stack 0
   228                           
   229                           ; 8 bytes @ 0x0
   230  000001                     	ds	1
   231  000002                     UART_Write_String@text:
   232                           	opt stack 0
   233                           
   234                           ; 2 bytes @ 0x1
   235  000002                     	ds	1
   236  000003                     ??_strlen:
   237  000003                     fputc@fp:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x2
   241  000003                     	ds	1
   242  000004                     ??_UART_Write_String:
   243                           
   244                           ; 1 bytes @ 0x3
   245  000004                     	ds	1
   246  000005                     ??_fputc:
   247  000005                     strlen@a:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x4
   251  000005                     	ds	1
   252  000006                     UART_Write_String@i:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x5
   256  000006                     	ds	3
   257  000009                     ___aodiv@divisor:
   258                           	opt stack 0
   259  000009                     ___aomod@divisor:
   260                           	opt stack 0
   261                           
   262                           ; 8 bytes @ 0x8
   263  000009                     	ds	1
   264  00000A                     fputs@s:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x9
   268  00000A                     	ds	2
   269  00000C                     fputs@fp:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0xB
   273  00000C                     	ds	2
   274  00000E                     fputs@c:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0xD
   278  00000E                     	ds	1
   279  00000F                     fputs@i:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0xE
   283  00000F                     	ds	2
   284  000011                     ?_pad:
   285                           	opt stack 0
   286  000011                     ___aodiv@counter:
   287                           	opt stack 0
   288  000011                     ___aomod@counter:
   289                           	opt stack 0
   290  000011                     pad@fp:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x10
   294  000011                     	ds	1
   295  000012                     ___aodiv@sign:
   296                           	opt stack 0
   297  000012                     ___aomod@sign:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x11
   301  000012                     	ds	1
   302  000013                     ?_abs:
   303                           	opt stack 0
   304  000013                     pad@buf:
   305                           	opt stack 0
   306  000013                     abs@a:
   307                           	opt stack 0
   308  000013                     ___aodiv@quotient:
   309                           	opt stack 0
   310                           
   311                           ; 8 bytes @ 0x12
   312  000013                     	ds	2
   313  000015                     ??_abs:
   314  000015                     pad@p:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x14
   318  000015                     	ds	2
   319  000017                     ??_pad:
   320                           
   321                           ; 1 bytes @ 0x16
   322  000017                     	ds	1
   323  000018                     pad@i:
   324                           	opt stack 0
   325                           
   326                           ; 2 bytes @ 0x17
   327  000018                     	ds	2
   328  00001A                     pad@w:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x19
   332  00001A                     	ds	2
   333  00001C                     ?_dtoa:
   334                           	opt stack 0
   335  00001C                     dtoa@fp:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x1B
   339  00001C                     	ds	2
   340  00001E                     dtoa@d:
   341                           	opt stack 0
   342                           
   343                           ; 8 bytes @ 0x1D
   344  00001E                     	ds	8
   345  000026                     ??_dtoa:
   346                           
   347                           ; 1 bytes @ 0x25
   348  000026                     	ds	8
   349  00002E                     _dtoa$158:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x2D
   353  00002E                     	ds	2
   354  000030                     dtoa@p:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x2F
   358  000030                     	ds	2
   359  000032                     dtoa@w:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x31
   363  000032                     	ds	2
   364  000034                     dtoa@s:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x33
   368  000034                     	ds	2
   369  000036                     dtoa@n:
   370                           	opt stack 0
   371                           
   372                           ; 8 bytes @ 0x35
   373  000036                     	ds	8
   374  00003E                     dtoa@i:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x3D
   378  00003E                     	ds	2
   379  000040                     ?_vfpfcnvrt:
   380                           	opt stack 0
   381  000040                     vfpfcnvrt@fp:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x3F
   385  000040                     	ds	2
   386  000042                     vfpfcnvrt@fmt:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x41
   390  000042                     	ds	2
   391  000044                     vfpfcnvrt@ap:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x43
   395  000044                     	ds	2
   396  000046                     ??_vfpfcnvrt:
   397                           
   398                           ; 1 bytes @ 0x45
   399  000046                     	ds	2
   400  000048                     vfpfcnvrt@ll:
   401                           	opt stack 0
   402                           
   403                           ; 8 bytes @ 0x47
   404  000048                     	ds	8
   405  000050                     ?_vfprintf:
   406                           	opt stack 0
   407  000050                     vfprintf@fp:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x4F
   411  000050                     	ds	2
   412  000052                     vfprintf@fmt:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x51
   416  000052                     	ds	2
   417  000054                     vfprintf@ap:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x53
   421  000054                     	ds	2
   422  000056                     vfprintf@cfmt:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x55
   426  000056                     	ds	2
   427  000058                     ?_sprintf:
   428                           	opt stack 0
   429  000058                     sprintf@s:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x57
   433  000058                     	ds	2
   434  00005A                     sprintf@fmt:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x59
   438  00005A                     	ds	6
   439  000060                     tblptru	equ	0xFF8
   440                           postinc0	equ	0xFEE
   441                           wreg	equ	0xFE8
   442                           
   443                           ; 1 bytes @ 0x5F
   444 ;;
   445 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   446 ;;
   447 ;; *************** function _main *****************
   448 ;; Defined at:
   449 ;;		line 26 in file "C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   463 ;;      Params:         0       0       0       0       0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0
   465 ;;      Temps:          0       1       0       0       0       0       0       0       0
   466 ;;      Totals:         0       1       0       0       0       0       0       0       0
   467 ;;Total ram usage:        1 bytes
   468 ;; Hardware stack levels required when called:    9
   469 ;; This function calls:
   470 ;;		_Comp_Init
   471 ;;		_TMR1_Init
   472 ;;		_Touch_Sense
   473 ;;		_UART_TX_Init
   474 ;;		_UART_Write_String
   475 ;;		_Vref_Init
   476 ;; This function is called by:
   477 ;;		Startup code after reset
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text0
   482  001142                     __ptext0:
   483                           	opt stack 0
   484  001142                     _main:
   485                           	opt stack 22
   486                           
   487                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 29:     TRISB0 = 0;
   488                           
   489                           ;incstack = 0
   490  001142  9093               	bcf	3987,0,c	;volatile
   491                           
   492                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 30:     RB0 = 0;
   493  001144  9081               	bcf	3969,0,c	;volatile
   494                           
   495                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 31:     TRISC1 = 0;
   496  001146  9294               	bcf	3988,1,c	;volatile
   497                           
   498                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 32:     RC1 = 0;
   499  001148  9282               	bcf	3970,1,c	;volatile
   500                           
   501                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 33:     Vref_Init();
   502  00114A  EC3D  F009         	call	_Vref_Init	;wreg free
   503                           
   504                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 34:     Comp_Init();
   505  00114E  EC30  F009         	call	_Comp_Init	;wreg free
   506                           
   507                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 35:     TMR1_Init();
   508  001152  EC27  F009         	call	_TMR1_Init	;wreg free
   509                           
   510                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 36:     UART_TX_Init();
   511  001156  EC1D  F009         	call	_UART_TX_Init	;wreg free
   512                           
   513                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 37:     UART_Write_String("OMG
      +                           PLZZZ");
   514  00115A  0E01               	movlw	low STR_1
   515  00115C  6E02               	movwf	UART_Write_String@text,c
   516  00115E  0E08               	movlw	high STR_1
   517  001160  6E03               	movwf	UART_Write_String@text+1,c
   518  001162  EC10  F008         	call	_UART_Write_String	;wreg free
   519                           
   520                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 38:     TRISC2 = 0;
   521  001166  9494               	bcf	3988,2,c	;volatile
   522                           
   523                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 39:     RC2 =1;
   524  001168  8482               	bsf	3970,2,c	;volatile
   525  00116A                     
   526                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 41:     {;C:/Users/Khaled Magd
      +                          y/Desktop/Capacitive_Touch.X/main.c: 42:        Touch_Sense();
   527  00116A  ECCA  F007         	call	_Touch_Sense	;wreg free
   528                           
   529                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 43:        _delay((unsigned lo
      +                          ng)((10)*(48000000/4000.0)));
   530  00116E  0E9C               	movlw	156
   531  001170  0100               	movlb	0	; () banked
   532  001172  6FA2               	movwf	??_main& (0+255),b
   533  001174  0ED7               	movlw	215
   534  001176                     u1057:
   535  001176  2EE8               	decfsz	wreg,f,c
   536  001178  D7FE               	bra	u1057
   537  00117A  2FA2               	decfsz	??_main& (0+255),f,b
   538  00117C  D7FC               	bra	u1057
   539                           
   540                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 44:     }
   541  00117E  D7F5               	goto	l85
   542  001180                     __end_of_main:
   543                           	opt stack 0
   544                           tblptru	equ	0xFF8
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           
   548 ;; *************** function _Vref_Init *****************
   549 ;; Defined at:
   550 ;;		line 47 in file "C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   564 ;;      Params:         0       0       0       0       0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text1
   578  00127A                     __ptext1:
   579                           	opt stack 0
   580  00127A                     _Vref_Init:
   581                           	opt stack 30
   582                           
   583                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 49:     CVRCON = 0b10001111;
   584                           
   585                           ;incstack = 0
   586  00127A  0E8F               	movlw	143
   587  00127C  6EB5               	movwf	4021,c	;volatile
   588  00127E  0012               	return		;funcret
   589  001280                     __end_of_Vref_Init:
   590                           	opt stack 0
   591                           tblptru	equ	0xFF8
   592                           postinc0	equ	0xFEE
   593                           wreg	equ	0xFE8
   594                           
   595 ;; *************** function _UART_TX_Init *****************
   596 ;; Defined at:
   597 ;;		line 65 in file "C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   611 ;;      Params:         0       0       0       0       0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text2
   625  00123A                     __ptext2:
   626                           	opt stack 0
   627  00123A                     _UART_TX_Init:
   628                           	opt stack 30
   629                           
   630                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 67:   BRGH = 1;
   631                           
   632                           ;incstack = 0
   633  00123A  84AC               	bsf	4012,2,c	;volatile
   634                           
   635                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 68:   SPBRG = 51;
   636  00123C  0E33               	movlw	51
   637  00123E  6EAF               	movwf	4015,c	;volatile
   638                           
   639                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 70:   SYNC = 0;
   640  001240  98AC               	bcf	4012,4,c	;volatile
   641                           
   642                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 71:   SPEN = 1;
   643  001242  8EAB               	bsf	4011,7,c	;volatile
   644                           
   645                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 72:   BRG16 = 0;
   646  001244  96B8               	bcf	4024,3,c	;volatile
   647                           
   648                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 74:   TRISC6 = 0;
   649  001246  9C94               	bcf	3988,6,c	;volatile
   650                           
   651                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 75:   TRISC7 = 1;
   652  001248  8E94               	bsf	3988,7,c	;volatile
   653                           
   654                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 76:   TXEN = 1;
   655  00124A  8AAC               	bsf	4012,5,c	;volatile
   656  00124C  0012               	return		;funcret
   657  00124E                     __end_of_UART_TX_Init:
   658                           	opt stack 0
   659                           tblptru	equ	0xFF8
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           
   663 ;; *************** function _Touch_Sense *****************
   664 ;; Defined at:
   665 ;;		line 103 in file "C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   679 ;;      Params:         0       0       0       0       0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0
   681 ;;      Temps:          0       2       0       0       0       0       0       0       0
   682 ;;      Totals:         0       2       0       0       0       0       0       0       0
   683 ;;Total ram usage:        2 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    8
   686 ;; This function calls:
   687 ;;		_UART_Write_String
   688 ;;		_sprintf
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text3
   695  000F94                     __ptext3:
   696                           	opt stack 0
   697  000F94                     _Touch_Sense:
   698                           	opt stack 22
   699                           
   700                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 105:     TMR1L = 0x00;
   701                           
   702                           ;incstack = 0
   703  000F94  0E00               	movlw	0
   704  000F96  6ECE               	movwf	4046,c	;volatile
   705                           
   706                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 106:     TMR1H = 0x00;
   707  000F98  0E00               	movlw	0
   708  000F9A  6ECF               	movwf	4047,c	;volatile
   709                           
   710                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 107:     RC1 = 1;
   711  000F9C  8282               	bsf	3970,1,c	;volatile
   712                           
   713                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 108:     TMR1ON = 1;
   714  000F9E  80CD               	bsf	4045,0,c	;volatile
   715  000FA0  BCB4               	btfsc	4020,6,c	;volatile
   716  000FA2  D7FE               	goto	l116
   717                           
   718                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 110:     TMR1ON = 0;
   719  000FA4  90CD               	bcf	4045,0,c	;volatile
   720                           
   721                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 111:     Ticks = TMR1;
   722  000FA6  CFCE F060          	movff	4046,_Ticks	;volatile
   723  000FAA  CFCF F061          	movff	4047,_Ticks+1	;volatile
   724  000FAE  0100               	movlb	0	; () banked
   725  000FB0  6B62               	clrf	(_Ticks+2)& (0+255),b
   726  000FB2  6B63               	clrf	(_Ticks+3)& (0+255),b
   727                           
   728                           ; BSR set to: 0
   729                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 112:     sprintf(Buffer, "%d \
      +                          n\r", Ticks);
   730  000FB4  0E8C               	movlw	low _Buffer
   731  000FB6  6E58               	movwf	sprintf@s,c
   732  000FB8  0E00               	movlw	high _Buffer
   733  000FBA  6E59               	movwf	sprintf@s+1,c
   734  000FBC  0E0B               	movlw	low STR_2
   735  000FBE  6E5A               	movwf	sprintf@fmt,c
   736  000FC0  0E08               	movlw	high STR_2
   737  000FC2  6E5B               	movwf	sprintf@fmt+1,c
   738  000FC4  C060  F05C         	movff	_Ticks,?_sprintf+4
   739  000FC8  C061  F05D         	movff	_Ticks+1,?_sprintf+5
   740  000FCC  C062  F05E         	movff	_Ticks+2,?_sprintf+6
   741  000FD0  C063  F05F         	movff	_Ticks+3,?_sprintf+7
   742  000FD4  EC49  F008         	call	_sprintf	;wreg free
   743                           
   744                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 113:     UART_Write_String(Buf
      +                          fer);
   745  000FD8  0E8C               	movlw	low _Buffer
   746  000FDA  6E02               	movwf	UART_Write_String@text,c
   747  000FDC  0E00               	movlw	high _Buffer
   748  000FDE  6E03               	movwf	UART_Write_String@text+1,c
   749  000FE0  EC10  F008         	call	_UART_Write_String	;wreg free
   750                           
   751                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 114:     if(Ticks>2500)
   752  000FE4  0100               	movlb	0	; () banked
   753  000FE6  5163               	movf	(_Ticks+3)& (0+255),w,b
   754  000FE8  1162               	iorwf	(_Ticks+2)& (0+255),w,b
   755  000FEA  E106               	bnz	u1020
   756  000FEC  0EC5               	movlw	197
   757  000FEE  5D60               	subwf	_Ticks& (0+255),w,b
   758  000FF0  0E09               	movlw	9
   759  000FF2  5961               	subwfb	(_Ticks+1)& (0+255),w,b
   760  000FF4  A0D8               	btfss	status,0,c
   761  000FF6  D012               	goto	l118
   762  000FF8                     u1020:
   763                           
   764                           ; BSR set to: 0
   765                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 115:     {;C:/Users/Khaled Mag
      +                          dy/Desktop/Capacitive_Touch.X/main.c: 116:         RB0 = ~RB0;
   766  000FF8  B081               	btfsc	3969,0,c	;volatile
   767  000FFA  D002               	goto	u1030
   768  000FFC  8081               	bsf	3969,0,c	;volatile
   769  000FFE  D001               	goto	u1045
   770  001000                     u1030:
   771  001000  9081               	bcf	3969,0,c	;volatile
   772  001002                     u1045:
   773                           
   774                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 117:         _delay((unsigned 
      +                          long)((200)*(48000000/4000.0)));
   775  001002  0E0D               	movlw	13
   776  001004  0100               	movlb	0	; () banked
   777  001006  6FA1               	movwf	(??_Touch_Sense+1)& (0+255),b
   778  001008  0E2D               	movlw	45
   779  00100A  6FA0               	movwf	??_Touch_Sense& (0+255),b
   780  00100C  0ED7               	movlw	215
   781  00100E                     u1067:
   782  00100E  2EE8               	decfsz	wreg,f,c
   783  001010  D7FE               	bra	u1067
   784  001012  2FA0               	decfsz	??_Touch_Sense& (0+255),f,b
   785  001014  D7FC               	bra	u1067
   786  001016  2FA1               	decfsz	(??_Touch_Sense+1)& (0+255),f,b
   787  001018  D7FA               	bra	u1067
   788  00101A  D000               	nop2	
   789  00101C                     l118:
   790                           
   791                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 119:     RC1 = 0;
   792  00101C  9282               	bcf	3970,1,c	;volatile
   793  00101E  0012               	return		;funcret
   794  001020                     __end_of_Touch_Sense:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           status	equ	0xFD8
   800                           
   801 ;; *************** function _sprintf *****************
   802 ;; Defined at:
   803 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  s               2   87[COMRAM] PTR unsigned char 
   806 ;;		 -> Buffer(10), 
   807 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   808 ;;		 -> STR_2(6), 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  f               6    4[BANK0 ] struct _IO_FILE
   811 ;;  ap              2    2[BANK0 ] PTR void [1]
   812 ;;		 -> ?_sprintf(2), 
   813 ;;  ret             2    0[BANK0 ] int 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  2   87[COMRAM] int 
   816 ;; Registers used:
   817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   823 ;;      Params:         8       0       0       0       0       0       0       0       0
   824 ;;      Locals:         0      10       0       0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0
   826 ;;      Totals:         8      10       0       0       0       0       0       0       0
   827 ;;Total ram usage:       18 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    7
   830 ;; This function calls:
   831 ;;		_vfprintf
   832 ;; This function is called by:
   833 ;;		_Touch_Sense
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text4
   838  001092                     __ptext4:
   839                           	opt stack 0
   840  001092                     _sprintf:
   841                           	opt stack 22
   842                           
   843                           ;incstack = 0
   844  001092  0E5C               	movlw	low (?_sprintf+4)
   845  001094  0100               	movlb	0	; () banked
   846  001096  6F98               	movwf	sprintf@ap& (0+255),b
   847  001098  0E00               	movlw	high (?_sprintf+4)
   848  00109A  6F99               	movwf	(sprintf@ap+1)& (0+255),b
   849  00109C  C058  F09A         	movff	sprintf@s,sprintf@f
   850  0010A0  C059  F09B         	movff	sprintf@s+1,sprintf@f+1
   851                           
   852                           ; BSR set to: 0
   853  0010A4  0E00               	movlw	0
   854  0010A6  6F9D               	movwf	(sprintf@f+3)& (0+255),b
   855  0010A8  0E00               	movlw	0
   856  0010AA  6F9C               	movwf	(sprintf@f+2)& (0+255),b
   857                           
   858                           ; BSR set to: 0
   859  0010AC  0E00               	movlw	0
   860  0010AE  6F9F               	movwf	(sprintf@f+5)& (0+255),b
   861  0010B0  0E00               	movlw	0
   862  0010B2  6F9E               	movwf	(sprintf@f+4)& (0+255),b
   863                           
   864                           ; BSR set to: 0
   865  0010B4  0E9A               	movlw	low sprintf@f
   866  0010B6  6E50               	movwf	vfprintf@fp,c
   867  0010B8  0E00               	movlw	high sprintf@f
   868  0010BA  6E51               	movwf	vfprintf@fp+1,c
   869  0010BC  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   870  0010C0  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   871  0010C4  0E98               	movlw	low sprintf@ap
   872  0010C6  6E54               	movwf	vfprintf@ap,c
   873  0010C8  0E00               	movlw	high sprintf@ap
   874  0010CA  6E55               	movwf	vfprintf@ap+1,c
   875  0010CC  EC76  F008         	call	_vfprintf	;wreg free
   876  0010D0  C050  F096         	movff	?_vfprintf,sprintf@ret
   877  0010D4  C051  F097         	movff	?_vfprintf+1,sprintf@ret+1
   878  0010D8  0100               	movlb	0	; () banked
   879  0010DA  519C               	movf	(sprintf@f+2)& (0+255),w,b
   880  0010DC  2458               	addwf	sprintf@s,w,c
   881  0010DE  6ED9               	movwf	fsr2l,c
   882  0010E0  519D               	movf	(sprintf@f+3)& (0+255),w,b
   883  0010E2  2059               	addwfc	sprintf@s+1,w,c
   884  0010E4  6EDA               	movwf	fsr2h,c
   885  0010E6  0E00               	movlw	0
   886  0010E8  6EDF               	movwf	indf2,c
   887  0010EA  0012               	return	
   888  0010EC                     __end_of_sprintf:
   889                           	opt stack 0
   890                           tblptru	equ	0xFF8
   891                           postinc0	equ	0xFEE
   892                           wreg	equ	0xFE8
   893                           indf2	equ	0xFDF
   894                           fsr2h	equ	0xFDA
   895                           fsr2l	equ	0xFD9
   896                           status	equ	0xFD8
   897                           
   898 ;; *************** function _vfprintf *****************
   899 ;; Defined at:
   900 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   903 ;;		 -> sprintf@f(6), 
   904 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   905 ;;		 -> STR_2(6), 
   906 ;;  ap              2   83[COMRAM] PTR PTR void 
   907 ;;		 -> sprintf@ap(2), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   910 ;;		 -> STR_2(6), 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  2   79[COMRAM] int 
   913 ;; Registers used:
   914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   920 ;;      Params:         6       0       0       0       0       0       0       0       0
   921 ;;      Locals:         2       0       0       0       0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0
   923 ;;      Totals:         8       0       0       0       0       0       0       0       0
   924 ;;Total ram usage:        8 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    6
   927 ;; This function calls:
   928 ;;		_vfpfcnvrt
   929 ;; This function is called by:
   930 ;;		_sprintf
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text5
   935  0010EC                     __ptext5:
   936                           	opt stack 0
   937  0010EC                     _vfprintf:
   938                           	opt stack 22
   939                           
   940                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   941                           
   942                           ; BSR set to: 0
   943                           ;incstack = 0
   944  0010EC  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   945  0010F0  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   946                           
   947                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   948  0010F4  0E00               	movlw	0
   949  0010F6  0100               	movlb	0	; () banked
   950  0010F8  6F65               	movwf	(_nout+1)& (0+255),b
   951  0010FA  0E00               	movlw	0
   952  0010FC  6F64               	movwf	_nout& (0+255),b
   953                           
   954                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   955  0010FE  D013               	goto	l188
   956  001100                     
   957                           ; BSR set to: 0
   958                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
   959                           
   960                           ; BSR set to: 0
   961  001100  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   962  001104  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   963  001108  0E56               	movlw	low vfprintf@cfmt
   964  00110A  6E42               	movwf	vfpfcnvrt@fmt,c
   965  00110C  0E00               	movlw	high vfprintf@cfmt
   966  00110E  6E43               	movwf	vfpfcnvrt@fmt+1,c
   967  001110  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   968  001114  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   969  001118  EC32  F005         	call	_vfpfcnvrt	;wreg free
   970  00111C  5040               	movf	?_vfpfcnvrt,w,c
   971  00111E  0100               	movlb	0	; () banked
   972  001120  2764               	addwf	_nout& (0+255),f,b
   973  001122  5041               	movf	?_vfpfcnvrt+1,w,c
   974  001124  2365               	addwfc	(_nout+1)& (0+255),f,b
   975  001126                     l188:
   976                           
   977                           ; BSR set to: 0
   978                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
   979                           
   980                           ; BSR set to: 0
   981  001126  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   982  00112A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   983  00112E                     	if	0	;tblptru may be non-zero
   984  00112E                     	endif
   985  00112E                     	if	0	;tblptru may be non-zero
   986  00112E                     	endif
   987  00112E  0008               	tblrd		*
   988  001130  50F5               	movf	tablat,w,c
   989  001132  0900               	iorlw	0
   990  001134  A4D8               	btfss	status,2,c
   991  001136  D7E4               	goto	l189
   992                           
   993                           ; BSR set to: 0
   994                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
   995  001138  C064  F050         	movff	_nout,?_vfprintf
   996  00113C  C065  F051         	movff	_nout+1,?_vfprintf+1
   997                           
   998                           ; BSR set to: 0
   999  001140  0012               	return		;funcret
  1000  001142                     __end_of_vfprintf:
  1001                           	opt stack 0
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           indf2	equ	0xFDF
  1009                           fsr2h	equ	0xFDA
  1010                           fsr2l	equ	0xFD9
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _vfpfcnvrt *****************
  1014 ;; Defined at:
  1015 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1018 ;;		 -> sprintf@f(6), 
  1019 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1020 ;;		 -> vfprintf@cfmt(2), 
  1021 ;;  ap              2   67[COMRAM] PTR PTR void 
  1022 ;;		 -> sprintf@ap(2), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  ll              8   71[COMRAM] long long 
  1025 ;;  llu             8    0        unsigned long long 
  1026 ;;  f               4    0        unsigned long long 
  1027 ;;  vp              3    0        PTR void 
  1028 ;;  ct              3    0        unsigned char [3]
  1029 ;;  cp              3    0        PTR unsigned char 
  1030 ;;  i               2    0        int 
  1031 ;;  done            2    0        int 
  1032 ;;  c               1    0        unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  2   63[COMRAM] int 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         6       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1045 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:       16 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    5
  1049 ;; This function calls:
  1050 ;;		_dtoa
  1051 ;;		_fputc
  1052 ;; This function is called by:
  1053 ;;		_vfprintf
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text6
  1058  000A64                     __ptext6:
  1059                           	opt stack 0
  1060  000A64                     _vfpfcnvrt:
  1061                           	opt stack 22
  1062                           
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;incstack = 0
  1067  000A64  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1068  000A68  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1069  000A6C  CFDE FFF6          	movff	postinc2,tblptrl
  1070  000A70  CFDD FFF7          	movff	postdec2,tblptrh
  1071  000A74                     	if	0	;tblptru may be non-zero
  1072  000A74                     	endif
  1073  000A74                     	if	0	;tblptru may be non-zero
  1074  000A74                     	endif
  1075  000A74  0008               	tblrd		*
  1076  000A76  50F5               	movf	tablat,w,c
  1077  000A78  0A25               	xorlw	37
  1078  000A7A  A4D8               	btfss	status,2,c
  1079  000A7C  D09A               	goto	l180
  1080                           
  1081                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1082  000A7E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1083  000A82  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1084  000A86  2ADE               	incf	postinc2,f,c
  1085  000A88  0E00               	movlw	0
  1086  000A8A  22DD               	addwfc	postdec2,f,c
  1087                           
  1088                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1089  000A8C  0E00               	movlw	0
  1090  000A8E  0100               	movlb	0	; () banked
  1091  000A90  6F67               	movwf	(_width+1)& (0+255),b
  1092  000A92  0E00               	movlw	0
  1093  000A94  6F66               	movwf	_width& (0+255),b
  1094  000A96  C066  F06A         	movff	_width,_flags
  1095  000A9A  C067  F06B         	movff	_width+1,_flags+1
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1099  000A9E  6968               	setf	_prec& (0+255),b
  1100  000AA0  6969               	setf	(_prec+1)& (0+255),b
  1101                           
  1102                           ; BSR set to: 0
  1103                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1104  000AA2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1105  000AA6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1106  000AAA  CFDE FFF6          	movff	postinc2,tblptrl
  1107  000AAE  CFDD FFF7          	movff	postdec2,tblptrh
  1108  000AB2                     	if	0	;tblptru may be non-zero
  1109  000AB2                     	endif
  1110  000AB2                     	if	0	;tblptru may be non-zero
  1111  000AB2                     	endif
  1112  000AB2  0008               	tblrd		*
  1113  000AB4  50F5               	movf	tablat,w,c
  1114  000AB6  0A64               	xorlw	100
  1115  000AB8  B4D8               	btfsc	status,2,c
  1116  000ABA  D00D               	goto	u940
  1117                           
  1118                           ; BSR set to: 0
  1119  000ABC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1120  000AC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1121  000AC4  CFDE FFF6          	movff	postinc2,tblptrl
  1122  000AC8  CFDD FFF7          	movff	postdec2,tblptrh
  1123  000ACC                     	if	0	;tblptru may be non-zero
  1124  000ACC                     	endif
  1125  000ACC                     	if	0	;tblptru may be non-zero
  1126  000ACC                     	endif
  1127  000ACC  0008               	tblrd		*
  1128  000ACE  50F5               	movf	tablat,w,c
  1129  000AD0  0A69               	xorlw	105
  1130  000AD2  A4D8               	btfss	status,2,c
  1131  000AD4  D03F               	goto	l181
  1132  000AD6                     u940:
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1136                           
  1137                           ; BSR set to: 0
  1138  000AD6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1139  000ADA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1140  000ADE  2ADE               	incf	postinc2,f,c
  1141  000AE0  0E00               	movlw	0
  1142  000AE2  22DD               	addwfc	postdec2,f,c
  1143                           
  1144                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1145  000AE4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1146  000AE8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1147  000AEC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1148  000AF0  0E02               	movlw	2
  1149  000AF2  26DE               	addwf	postinc2,f,c
  1150  000AF4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1151  000AF8  0E00               	movlw	0
  1152  000AFA  22DD               	addwfc	postdec2,f,c
  1153  000AFC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1154  000B00  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1155  000B04  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1156  000B08  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1157  000B0C  0E00               	movlw	0
  1158  000B0E  BE49               	btfsc	vfpfcnvrt@ll+1,7,c
  1159  000B10  0EFF               	movlw	-1
  1160  000B12  6E4A               	movwf	vfpfcnvrt@ll+2,c
  1161  000B14  6E4B               	movwf	vfpfcnvrt@ll+3,c
  1162  000B16  6E4C               	movwf	vfpfcnvrt@ll+4,c
  1163  000B18  6E4D               	movwf	vfpfcnvrt@ll+5,c
  1164  000B1A  6E4E               	movwf	vfpfcnvrt@ll+6,c
  1165  000B1C  6E4F               	movwf	vfpfcnvrt@ll+7,c
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1169  000B1E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1170  000B22  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1171  000B26  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1172  000B2A  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1173  000B2E  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1174  000B32  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1175  000B36  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1176  000B3A  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1177  000B3E  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1178  000B42  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1179  000B46  EC09  F004         	call	_dtoa	;wreg free
  1180  000B4A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1181  000B4E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1182  000B52  0012               	return	
  1183  000B54                     l181:
  1184                           
  1185                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1186  000B54  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1187  000B58  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1188  000B5C  CFDE FFF6          	movff	postinc2,tblptrl
  1189  000B60  CFDD FFF7          	movff	postdec2,tblptrh
  1190  000B64                     	if	0	;tblptru may be non-zero
  1191  000B64                     	endif
  1192  000B64                     	if	0	;tblptru may be non-zero
  1193  000B64                     	endif
  1194  000B64  0008               	tblrd		*
  1195  000B66  50F5               	movf	tablat,w,c
  1196  000B68  0A25               	xorlw	37
  1197  000B6A  A4D8               	btfss	status,2,c
  1198  000B6C  D016               	goto	l185
  1199                           
  1200                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1201  000B6E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202  000B72  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203  000B76  2ADE               	incf	postinc2,f,c
  1204  000B78  0E00               	movlw	0
  1205  000B7A  22DD               	addwfc	postdec2,f,c
  1206                           
  1207                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1208  000B7C  0E00               	movlw	0
  1209  000B7E  6E02               	movwf	fputc@c+1,c
  1210  000B80  0E25               	movlw	37
  1211  000B82  6E01               	movwf	fputc@c,c
  1212  000B84  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1213  000B88  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1214  000B8C  EC2D  F007         	call	_fputc	;wreg free
  1215                           
  1216                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1217  000B90  0E00               	movlw	0
  1218  000B92  6E41               	movwf	?_vfpfcnvrt+1,c
  1219  000B94  0E01               	movlw	1
  1220  000B96  6E40               	movwf	?_vfpfcnvrt,c
  1221  000B98  0012               	return	
  1222  000B9A                     l185:
  1223                           
  1224                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1225  000B9A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1226  000B9E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1227  000BA2  2ADE               	incf	postinc2,f,c
  1228  000BA4  0E00               	movlw	0
  1229  000BA6  22DD               	addwfc	postdec2,f,c
  1230                           
  1231                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1232  000BA8  0E00               	movlw	0
  1233  000BAA  6E41               	movwf	?_vfpfcnvrt+1,c
  1234  000BAC  0E00               	movlw	0
  1235  000BAE  6E40               	movwf	?_vfpfcnvrt,c
  1236  000BB0  0012               	return	
  1237  000BB2                     l180:
  1238                           
  1239                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1240  000BB2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1241  000BB6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1242  000BBA  CFDE FFF6          	movff	postinc2,tblptrl
  1243  000BBE  CFDD FFF7          	movff	postdec2,tblptrh
  1244  000BC2                     	if	0	;tblptru may be non-zero
  1245  000BC2                     	endif
  1246  000BC2                     	if	0	;tblptru may be non-zero
  1247  000BC2                     	endif
  1248  000BC2  0008               	tblrd		*
  1249  000BC4  50F5               	movf	tablat,w,c
  1250  000BC6  6E01               	movwf	fputc@c,c
  1251  000BC8  6A02               	clrf	fputc@c+1,c
  1252  000BCA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1253  000BCE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1254  000BD2  EC2D  F007         	call	_fputc	;wreg free
  1255                           
  1256                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1257  000BD6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1258  000BDA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1259  000BDE  2ADE               	incf	postinc2,f,c
  1260  000BE0  0E00               	movlw	0
  1261  000BE2  22DD               	addwfc	postdec2,f,c
  1262                           
  1263                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
      +                          eturn 1;
  1264  000BE4  0E00               	movlw	0
  1265  000BE6  6E41               	movwf	?_vfpfcnvrt+1,c
  1266  000BE8  0E01               	movlw	1
  1267  000BEA  6E40               	movwf	?_vfpfcnvrt,c
  1268  000BEC  0012               	return	
  1269  000BEE                     __end_of_vfpfcnvrt:
  1270                           	opt stack 0
  1271                           tblptru	equ	0xFF8
  1272                           tblptrh	equ	0xFF7
  1273                           tblptrl	equ	0xFF6
  1274                           tablat	equ	0xFF5
  1275                           postinc0	equ	0xFEE
  1276                           wreg	equ	0xFE8
  1277                           indf2	equ	0xFDF
  1278                           postinc2	equ	0xFDE
  1279                           postdec2	equ	0xFDD
  1280                           fsr2h	equ	0xFDA
  1281                           fsr2l	equ	0xFD9
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _dtoa *****************
  1285 ;; Defined at:
  1286 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1289 ;;		 -> sprintf@f(6), 
  1290 ;;  d               8   29[COMRAM] long long 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  n               8   53[COMRAM] long long 
  1293 ;;  i               2   61[COMRAM] int 
  1294 ;;  s               2   51[COMRAM] int 
  1295 ;;  w               2   49[COMRAM] int 
  1296 ;;  p               2   47[COMRAM] int 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  2   27[COMRAM] int 
  1299 ;; Registers used:
  1300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1306 ;;      Params:        10       0       0       0       0       0       0       0       0
  1307 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1308 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1309 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1310 ;;Total ram usage:       36 bytes
  1311 ;; Hardware stack levels used:    1
  1312 ;; Hardware stack levels required when called:    4
  1313 ;; This function calls:
  1314 ;;		___aodiv
  1315 ;;		___aomod
  1316 ;;		_abs
  1317 ;;		_pad
  1318 ;; This function is called by:
  1319 ;;		_vfpfcnvrt
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text7
  1324  000812                     __ptext7:
  1325                           	opt stack 0
  1326  000812                     _dtoa:
  1327                           	opt stack 22
  1328                           
  1329                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.00\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1330                           
  1331                           ;incstack = 0
  1332  000812  C01E  F036         	movff	dtoa@d,dtoa@n
  1333  000816  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1334  00081A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1335  00081E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1336  000822  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1337  000826  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1338  00082A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1339  00082E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1340                           
  1341                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1342  000832  AE3D               	btfss	dtoa@n+7,7,c
  1343  000834  D002               	goto	u770
  1344  000836  0E01               	movlw	1
  1345  000838  D001               	goto	u780
  1346  00083A                     u770:
  1347  00083A  0E00               	movlw	0
  1348  00083C                     u780:
  1349  00083C  6E34               	movwf	dtoa@s,c
  1350  00083E  6A35               	clrf	dtoa@s+1,c
  1351                           
  1352                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1353  000840  5034               	movf	dtoa@s,w,c
  1354  000842  1035               	iorwf	dtoa@s+1,w,c
  1355  000844  B4D8               	btfsc	status,2,c
  1356  000846  D010               	goto	l154
  1357                           
  1358                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1359  000848  1E3D               	comf	dtoa@n+7,f,c
  1360  00084A  1E3C               	comf	dtoa@n+6,f,c
  1361  00084C  1E3B               	comf	dtoa@n+5,f,c
  1362  00084E  1E3A               	comf	dtoa@n+4,f,c
  1363  000850  1E39               	comf	dtoa@n+3,f,c
  1364  000852  1E38               	comf	dtoa@n+2,f,c
  1365  000854  1E37               	comf	dtoa@n+1,f,c
  1366  000856  6C36               	negf	dtoa@n,c
  1367  000858  0E00               	movlw	0
  1368  00085A  2237               	addwfc	dtoa@n+1,f,c
  1369  00085C  2238               	addwfc	dtoa@n+2,f,c
  1370  00085E  2239               	addwfc	dtoa@n+3,f,c
  1371  000860  223A               	addwfc	dtoa@n+4,f,c
  1372  000862  223B               	addwfc	dtoa@n+5,f,c
  1373  000864  223C               	addwfc	dtoa@n+6,f,c
  1374  000866  223D               	addwfc	dtoa@n+7,f,c
  1375  000868                     l154:
  1376                           
  1377                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1378  000868  0100               	movlb	0	; () banked
  1379  00086A  AF69               	btfss	(_prec+1)& (0+255),7,b
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1383  00086C  936A               	bcf	_flags& (0+255),1,b
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1387                           
  1388                           ; BSR set to: 0
  1389                           
  1390                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }
  1391  00086E  BF69               	btfsc	(_prec+1)& (0+255),7,b
  1392  000870  D005               	goto	u810
  1393  000872  5169               	movf	(_prec+1)& (0+255),w,b
  1394  000874  E108               	bnz	l157
  1395  000876  0568               	decf	_prec& (0+255),w,b
  1396  000878  B0D8               	btfsc	status,0,c
  1397  00087A  D005               	goto	l157
  1398  00087C                     u810:
  1399                           
  1400                           ; BSR set to: 0
  1401  00087C  0E00               	movlw	0
  1402  00087E  6E31               	movwf	dtoa@p+1,c
  1403  000880  0E01               	movlw	1
  1404  000882  6E30               	movwf	dtoa@p,c
  1405  000884  D004               	goto	l159
  1406  000886                     l157:
  1407                           
  1408                           ; BSR set to: 0
  1409  000886  C068  F030         	movff	_prec,dtoa@p
  1410  00088A  C069  F031         	movff	_prec+1,dtoa@p+1
  1411  00088E                     l159:
  1412                           
  1413                           ; BSR set to: 0
  1414                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1415  00088E  C066  F032         	movff	_width,dtoa@w
  1416  000892  C067  F033         	movff	_width+1,dtoa@w+1
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1420  000896  5034               	movf	dtoa@s,w,c
  1421  000898  1035               	iorwf	dtoa@s+1,w,c
  1422  00089A  A4D8               	btfss	status,2,c
  1423  00089C  D002               	goto	u830
  1424                           
  1425                           ; BSR set to: 0
  1426  00089E  A56A               	btfss	_flags& (0+255),2,b
  1427  0008A0  D003               	goto	l160
  1428  0008A2                     u830:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1432                           
  1433                           ; BSR set to: 0
  1434  0008A2  0632               	decf	dtoa@w,f,c
  1435  0008A4  A0D8               	btfss	status,0,c
  1436  0008A6  0633               	decf	dtoa@w+1,f,c
  1437  0008A8                     l160:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1441                           
  1442                           ; BSR set to: 0
  1443  0008A8  0E00               	movlw	0
  1444  0008AA  6E3F               	movwf	dtoa@i+1,c
  1445  0008AC  0E1F               	movlw	31
  1446  0008AE  6E3E               	movwf	dtoa@i,c
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1450  0008B0  0E6C               	movlw	low _dbuf
  1451  0008B2  243E               	addwf	dtoa@i,w,c
  1452  0008B4  6ED9               	movwf	fsr2l,c
  1453  0008B6  0E00               	movlw	high _dbuf
  1454  0008B8  203F               	addwfc	dtoa@i+1,w,c
  1455  0008BA  6EDA               	movwf	fsr2h,c
  1456  0008BC  0E00               	movlw	0
  1457  0008BE  6EDF               	movwf	indf2,c
  1458                           
  1459                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1460  0008C0  D07C               	goto	l163
  1461  0008C2                     
  1462                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1463                           
  1464                           ; BSR set to: 0
  1465  0008C2  063E               	decf	dtoa@i,f,c
  1466  0008C4  A0D8               	btfss	status,0,c
  1467  0008C6  063F               	decf	dtoa@i+1,f,c
  1468                           
  1469                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1470  0008C8  0E6C               	movlw	low _dbuf
  1471  0008CA  243E               	addwf	dtoa@i,w,c
  1472  0008CC  6ED9               	movwf	fsr2l,c
  1473  0008CE  0E00               	movlw	high _dbuf
  1474  0008D0  203F               	addwfc	dtoa@i+1,w,c
  1475  0008D2  6EDA               	movwf	fsr2h,c
  1476  0008D4  C036  F001         	movff	dtoa@n,___aomod@dividend
  1477  0008D8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1478  0008DC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1479  0008E0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1480  0008E4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1481  0008E8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1482  0008EC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1483  0008F0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1484  0008F4  0E0A               	movlw	10
  1485  0008F6  6E09               	movwf	___aomod@divisor,c
  1486  0008F8  0E00               	movlw	0
  1487  0008FA  6E0A               	movwf	___aomod@divisor+1,c
  1488  0008FC  0E00               	movlw	0
  1489  0008FE  6E0B               	movwf	___aomod@divisor+2,c
  1490  000900  0E00               	movlw	0
  1491  000902  6E0C               	movwf	___aomod@divisor+3,c
  1492  000904  0E00               	movlw	0
  1493  000906  6E0D               	movwf	___aomod@divisor+4,c
  1494  000908  0E00               	movlw	0
  1495  00090A  6E0E               	movwf	___aomod@divisor+5,c
  1496  00090C  0E00               	movlw	0
  1497  00090E  6E0F               	movwf	___aomod@divisor+6,c
  1498  000910  0E00               	movlw	0
  1499  000912  6E10               	movwf	___aomod@divisor+7,c
  1500  000914  EC9B  F006         	call	___aomod	;wreg free
  1501  000918  C001  F026         	movff	?___aomod,??_dtoa
  1502  00091C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1503  000920  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1504  000924  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1505  000928  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1506  00092C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1507  000930  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1508  000934  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1509  000938  C026  F013         	movff	??_dtoa,abs@a
  1510  00093C  C028  F014         	movff	??_dtoa+2,abs@a+1
  1511  000940  ECF9  F008         	call	_abs	;wreg free
  1512  000944  5013               	movf	?_abs,w,c
  1513  000946  0F30               	addlw	48
  1514  000948  6EDF               	movwf	indf2,c
  1515                           
  1516                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1517  00094A  0630               	decf	dtoa@p,f,c
  1518  00094C  A0D8               	btfss	status,0,c
  1519  00094E  0631               	decf	dtoa@p+1,f,c
  1520                           
  1521                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1522  000950  0632               	decf	dtoa@w,f,c
  1523  000952  A0D8               	btfss	status,0,c
  1524  000954  0633               	decf	dtoa@w+1,f,c
  1525                           
  1526                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1527  000956  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1528  00095A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1529  00095E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1530  000962  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1531  000966  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1532  00096A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1533  00096E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1534  000972  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1535  000976  0E0A               	movlw	10
  1536  000978  6E09               	movwf	___aodiv@divisor,c
  1537  00097A  0E00               	movlw	0
  1538  00097C  6E0A               	movwf	___aodiv@divisor+1,c
  1539  00097E  0E00               	movlw	0
  1540  000980  6E0B               	movwf	___aodiv@divisor+2,c
  1541  000982  0E00               	movlw	0
  1542  000984  6E0C               	movwf	___aodiv@divisor+3,c
  1543  000986  0E00               	movlw	0
  1544  000988  6E0D               	movwf	___aodiv@divisor+4,c
  1545  00098A  0E00               	movlw	0
  1546  00098C  6E0E               	movwf	___aodiv@divisor+5,c
  1547  00098E  0E00               	movlw	0
  1548  000990  6E0F               	movwf	___aodiv@divisor+6,c
  1549  000992  0E00               	movlw	0
  1550  000994  6E10               	movwf	___aodiv@divisor+7,c
  1551  000996  ECF7  F005         	call	___aodiv	;wreg free
  1552  00099A  C001  F036         	movff	?___aodiv,dtoa@n
  1553  00099E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1554  0009A2  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1555  0009A6  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1556  0009AA  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1557  0009AE  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1558  0009B2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1559  0009B6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1560  0009BA                     l163:
  1561                           
  1562                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1563  0009BA  BE3F               	btfsc	dtoa@i+1,7,c
  1564  0009BC  D020               	goto	u880
  1565  0009BE  503F               	movf	dtoa@i+1,w,c
  1566  0009C0  E103               	bnz	u840
  1567  0009C2  043E               	decf	dtoa@i,w,c
  1568  0009C4  A0D8               	btfss	status,0,c
  1569  0009C6  D01B               	goto	u880
  1570  0009C8                     u840:
  1571  0009C8  5036               	movf	dtoa@n,w,c
  1572  0009CA  1037               	iorwf	dtoa@n+1,w,c
  1573  0009CC  1038               	iorwf	dtoa@n+2,w,c
  1574  0009CE  1039               	iorwf	dtoa@n+3,w,c
  1575  0009D0  103A               	iorwf	dtoa@n+4,w,c
  1576  0009D2  103B               	iorwf	dtoa@n+5,w,c
  1577  0009D4  103C               	iorwf	dtoa@n+6,w,c
  1578  0009D6  103D               	iorwf	dtoa@n+7,w,c
  1579  0009D8  A4D8               	btfss	status,2,c
  1580  0009DA  D773               	goto	l164
  1581  0009DC  BE31               	btfsc	dtoa@p+1,7,c
  1582  0009DE  D005               	goto	u860
  1583  0009E0  5031               	movf	dtoa@p+1,w,c
  1584  0009E2  E102               	bnz	u861
  1585  0009E4  0430               	decf	dtoa@p,w,c
  1586  0009E6  B0D8               	btfsc	status,0,c
  1587  0009E8                     u861:
  1588  0009E8  D76C               	goto	l164
  1589  0009EA                     u860:
  1590  0009EA  BE33               	btfsc	dtoa@w+1,7,c
  1591  0009EC  D008               	goto	u880
  1592  0009EE  5033               	movf	dtoa@w+1,w,c
  1593  0009F0  E103               	bnz	u870
  1594  0009F2  0432               	decf	dtoa@w,w,c
  1595  0009F4  A0D8               	btfss	status,0,c
  1596  0009F6  D003               	goto	u880
  1597  0009F8                     u870:
  1598  0009F8  0100               	movlb	0	; () banked
  1599  0009FA  B36A               	btfsc	_flags& (0+255),1,b
  1600  0009FC  D762               	goto	l164
  1601  0009FE                     u880:
  1602                           
  1603                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1604                           
  1605                           ; BSR set to: 0
  1606                           
  1607                           ; BSR set to: 0
  1608                           
  1609                           ; BSR set to: 0
  1610  0009FE  5034               	movf	dtoa@s,w,c
  1611  000A00  1035               	iorwf	dtoa@s+1,w,c
  1612  000A02  A4D8               	btfss	status,2,c
  1613  000A04  D003               	goto	u900
  1614  000A06  0100               	movlb	0	; () banked
  1615  000A08  A56A               	btfss	_flags& (0+255),2,b
  1616  000A0A  D017               	goto	l170
  1617  000A0C                     u900:
  1618                           
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1620                           
  1621                           ; BSR set to: 0
  1622  000A0C  063E               	decf	dtoa@i,f,c
  1623  000A0E  A0D8               	btfss	status,0,c
  1624  000A10  063F               	decf	dtoa@i+1,f,c
  1625                           
  1626                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1627  000A12  5034               	movf	dtoa@s,w,c
  1628  000A14  1035               	iorwf	dtoa@s+1,w,c
  1629  000A16  A4D8               	btfss	status,2,c
  1630  000A18  D004               	goto	l174
  1631  000A1A  0E00               	movlw	0
  1632  000A1C  6E2F               	movwf	_dtoa$158+1,c
  1633  000A1E  0E2B               	movlw	43
  1634  000A20  D003               	goto	L1
  1635  000A22                     l174:
  1636  000A22  0E00               	movlw	0
  1637  000A24  6E2F               	movwf	_dtoa$158+1,c
  1638  000A26  0E2D               	movlw	45
  1639  000A28                     L1:
  1640  000A28  6E2E               	movwf	_dtoa$158,c
  1641  000A2A  0E6C               	movlw	low _dbuf
  1642  000A2C  243E               	addwf	dtoa@i,w,c
  1643  000A2E  6ED9               	movwf	fsr2l,c
  1644  000A30  0E00               	movlw	high _dbuf
  1645  000A32  203F               	addwfc	dtoa@i+1,w,c
  1646  000A34  6EDA               	movwf	fsr2h,c
  1647  000A36  C02E  FFDF         	movff	_dtoa$158,indf2
  1648  000A3A                     l170:
  1649                           
  1650                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1651  000A3A  C01C  F011         	movff	dtoa@fp,pad@fp
  1652  000A3E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1653  000A42  0E6C               	movlw	low _dbuf
  1654  000A44  243E               	addwf	dtoa@i,w,c
  1655  000A46  6E13               	movwf	pad@buf,c
  1656  000A48  0E00               	movlw	high _dbuf
  1657  000A4A  203F               	addwfc	dtoa@i+1,w,c
  1658  000A4C  6E14               	movwf	pad@buf+1,c
  1659  000A4E  C032  F015         	movff	dtoa@w,pad@p
  1660  000A52  C033  F016         	movff	dtoa@w+1,pad@p+1
  1661  000A56  EC7D  F007         	call	_pad	;wreg free
  1662  000A5A  C011  F01C         	movff	?_pad,?_dtoa
  1663  000A5E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1664  000A62  0012               	return	
  1665  000A64                     __end_of_dtoa:
  1666                           	opt stack 0
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           postinc0	equ	0xFEE
  1672                           wreg	equ	0xFE8
  1673                           indf2	equ	0xFDF
  1674                           postinc2	equ	0xFDE
  1675                           postdec2	equ	0xFDD
  1676                           fsr2h	equ	0xFDA
  1677                           fsr2l	equ	0xFD9
  1678                           status	equ	0xFD8
  1679                           
  1680 ;; *************** function _pad *****************
  1681 ;; Defined at:
  1682 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1685 ;;		 -> sprintf@f(6), 
  1686 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1687 ;;		 -> dbuf(32), 
  1688 ;;  p               2   20[COMRAM] int 
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;  w               2   25[COMRAM] int 
  1691 ;;  i               2   23[COMRAM] int 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  2   16[COMRAM] int 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1701 ;;      Params:         6       0       0       0       0       0       0       0       0
  1702 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1703 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1704 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1705 ;;Total ram usage:       11 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    3
  1708 ;; This function calls:
  1709 ;;		_fputc
  1710 ;;		_fputs
  1711 ;;		_strlen
  1712 ;; This function is called by:
  1713 ;;		_dtoa
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text8
  1718  000EFA                     __ptext8:
  1719                           	opt stack 0
  1720  000EFA                     _pad:
  1721                           	opt stack 22
  1722                           
  1723                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1724                           
  1725                           ;incstack = 0
  1726  000EFA  0100               	movlb	0	; () banked
  1727  000EFC  A16A               	btfss	_flags& (0+255),0,b
  1728  000EFE  D00A               	goto	l142
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  1732  000F00  C013  F00A         	movff	pad@buf,fputs@s
  1733  000F04  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1734  000F08  C011  F00C         	movff	pad@fp,fputs@fp
  1735  000F0C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1736  000F10  ECDD  F008         	call	_fputs	;wreg free
  1737  000F14                     l142:
  1738                           
  1739                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  1740  000F14  BE16               	btfsc	pad@p+1,7,c
  1741  000F16  D005               	goto	l144
  1742  000F18  C015  F01A         	movff	pad@p,pad@w
  1743  000F1C  C016  F01B         	movff	pad@p+1,pad@w+1
  1744  000F20  D004               	goto	l146
  1745  000F22                     l144:
  1746  000F22  0E00               	movlw	0
  1747  000F24  6E1B               	movwf	pad@w+1,c
  1748  000F26  0E00               	movlw	0
  1749  000F28  6E1A               	movwf	pad@w,c
  1750  000F2A                     l146:
  1751                           
  1752                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  1753  000F2A  0E00               	movlw	0
  1754  000F2C  6E19               	movwf	pad@i+1,c
  1755  000F2E  0E00               	movlw	0
  1756  000F30  6E18               	movwf	pad@i,c
  1757                           
  1758                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1759  000F32  D00C               	goto	l147
  1760  000F34                     
  1761                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  1762  000F34  0E00               	movlw	0
  1763  000F36  6E02               	movwf	fputc@c+1,c
  1764  000F38  0E20               	movlw	32
  1765  000F3A  6E01               	movwf	fputc@c,c
  1766  000F3C  C011  F003         	movff	pad@fp,fputc@fp
  1767  000F40  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1768  000F44  EC2D  F007         	call	_fputc	;wreg free
  1769                           
  1770                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  1771  000F48  4A18               	infsnz	pad@i,f,c
  1772  000F4A  2A19               	incf	pad@i+1,f,c
  1773  000F4C                     l147:
  1774                           
  1775                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  1776  000F4C  501A               	movf	pad@w,w,c
  1777  000F4E  5C18               	subwf	pad@i,w,c
  1778  000F50  5019               	movf	pad@i+1,w,c
  1779  000F52  0A80               	xorlw	128
  1780  000F54  6E17               	movwf	??_pad& (0+255),c
  1781  000F56  501B               	movf	pad@w+1,w,c
  1782  000F58  0A80               	xorlw	128
  1783  000F5A  5817               	subwfb	??_pad& (0+255),w,c
  1784  000F5C  A0D8               	btfss	status,0,c
  1785  000F5E  D7EA               	goto	l148
  1786                           
  1787                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  1788  000F60  0100               	movlb	0	; () banked
  1789  000F62  B16A               	btfsc	_flags& (0+255),0,b
  1790  000F64  D00A               	goto	l150
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  1794  000F66  C013  F00A         	movff	pad@buf,fputs@s
  1795  000F6A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1796  000F6E  C011  F00C         	movff	pad@fp,fputs@fp
  1797  000F72  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1798  000F76  ECDD  F008         	call	_fputs	;wreg free
  1799  000F7A                     l150:
  1800                           
  1801                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  1802  000F7A  C013  F001         	movff	pad@buf,strlen@s
  1803  000F7E  C014  F002         	movff	pad@buf+1,strlen@s+1
  1804  000F82  ECC0  F008         	call	_strlen	;wreg free
  1805  000F86  501A               	movf	pad@w,w,c
  1806  000F88  2401               	addwf	?_strlen,w,c
  1807  000F8A  6E11               	movwf	?_pad,c
  1808  000F8C  501B               	movf	pad@w+1,w,c
  1809  000F8E  2002               	addwfc	?_strlen+1,w,c
  1810  000F90  6E12               	movwf	?_pad+1,c
  1811  000F92  0012               	return	
  1812  000F94                     __end_of_pad:
  1813                           	opt stack 0
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           indf2	equ	0xFDF
  1821                           postinc2	equ	0xFDE
  1822                           postdec2	equ	0xFDD
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _strlen *****************
  1828 ;; Defined at:
  1829 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1832 ;;		 -> dbuf(32), 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  a               2    4[COMRAM] PTR const unsigned char 
  1835 ;;		 -> dbuf(32), 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  2    0[COMRAM] unsigned int 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1845 ;;      Params:         2       0       0       0       0       0       0       0       0
  1846 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1847 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1848 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1849 ;;Total ram usage:        6 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_pad
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text9
  1859  001180                     __ptext9:
  1860                           	opt stack 0
  1861  001180                     _strlen:
  1862                           	opt stack 24
  1863                           
  1864                           ;incstack = 0
  1865  001180  C001  F005         	movff	strlen@s,strlen@a
  1866  001184  C002  F006         	movff	strlen@s+1,strlen@a+1
  1867  001188  D002               	goto	l905
  1868  00118A  4A01               	infsnz	strlen@s,f,c
  1869  00118C  2A02               	incf	strlen@s+1,f,c
  1870  00118E                     l905:
  1871  00118E  C001  FFD9         	movff	strlen@s,fsr2l
  1872  001192  C002  FFDA         	movff	strlen@s+1,fsr2h
  1873  001196  50DF               	movf	indf2,w,c
  1874  001198  A4D8               	btfss	status,2,c
  1875  00119A  D7F7               	goto	l906
  1876  00119C  C005  F003         	movff	strlen@a,??_strlen
  1877  0011A0  C006  F004         	movff	strlen@a+1,??_strlen+1
  1878  0011A4  1E03               	comf	??_strlen,f,c
  1879  0011A6  1E04               	comf	??_strlen+1,f,c
  1880  0011A8  4A03               	infsnz	??_strlen,f,c
  1881  0011AA  2A04               	incf	??_strlen+1,f,c
  1882  0011AC  5001               	movf	strlen@s,w,c
  1883  0011AE  2403               	addwf	??_strlen,w,c
  1884  0011B0  6E01               	movwf	?_strlen,c
  1885  0011B2  5002               	movf	strlen@s+1,w,c
  1886  0011B4  2004               	addwfc	??_strlen+1,w,c
  1887  0011B6  6E02               	movwf	?_strlen+1,c
  1888  0011B8  0012               	return	
  1889  0011BA                     __end_of_strlen:
  1890                           	opt stack 0
  1891                           tblptru	equ	0xFF8
  1892                           tblptrh	equ	0xFF7
  1893                           tblptrl	equ	0xFF6
  1894                           tablat	equ	0xFF5
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           indf2	equ	0xFDF
  1898                           postinc2	equ	0xFDE
  1899                           postdec2	equ	0xFDD
  1900                           fsr2h	equ	0xFDA
  1901                           fsr2l	equ	0xFD9
  1902                           status	equ	0xFD8
  1903                           
  1904 ;; *************** function _fputs *****************
  1905 ;; Defined at:
  1906 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1909 ;;		 -> dbuf(32), 
  1910 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1911 ;;		 -> sprintf@f(6), 
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  i               2   14[COMRAM] int 
  1914 ;;  c               1   13[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2    9[COMRAM] int 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1924 ;;      Params:         4       0       0       0       0       0       0       0       0
  1925 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1927 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        7 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    2
  1931 ;; This function calls:
  1932 ;;		_fputc
  1933 ;; This function is called by:
  1934 ;;		_pad
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text10
  1939  0011BA                     __ptext10:
  1940                           	opt stack 0
  1941  0011BA                     _fputs:
  1942                           	opt stack 22
  1943                           
  1944                           ;incstack = 0
  1945  0011BA  0E00               	movlw	0
  1946  0011BC  6E10               	movwf	fputs@i+1,c
  1947  0011BE  0E00               	movlw	0
  1948  0011C0  6E0F               	movwf	fputs@i,c
  1949  0011C2  D00B               	goto	l889
  1950  0011C4  C00E  F001         	movff	fputs@c,fputc@c
  1951  0011C8  6A02               	clrf	fputc@c+1,c
  1952  0011CA  C00C  F003         	movff	fputs@fp,fputc@fp
  1953  0011CE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1954  0011D2  EC2D  F007         	call	_fputc	;wreg free
  1955  0011D6  4A0F               	infsnz	fputs@i,f,c
  1956  0011D8  2A10               	incf	fputs@i+1,f,c
  1957  0011DA                     l889:
  1958  0011DA  500F               	movf	fputs@i,w,c
  1959  0011DC  240A               	addwf	fputs@s,w,c
  1960  0011DE  6ED9               	movwf	fsr2l,c
  1961  0011E0  5010               	movf	fputs@i+1,w,c
  1962  0011E2  200B               	addwfc	fputs@s+1,w,c
  1963  0011E4  6EDA               	movwf	fsr2h,c
  1964  0011E6  50DF               	movf	indf2,w,c
  1965  0011E8  6E0E               	movwf	fputs@c,c
  1966  0011EA  500E               	movf	fputs@c,w,c
  1967  0011EC  B4D8               	btfsc	status,2,c
  1968  0011EE  0012               	return	
  1969  0011F0  D7E9               	goto	l890
  1970  0011F2                     __end_of_fputs:
  1971                           	opt stack 0
  1972                           tblptru	equ	0xFF8
  1973                           tblptrh	equ	0xFF7
  1974                           tblptrl	equ	0xFF6
  1975                           tablat	equ	0xFF5
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           indf2	equ	0xFDF
  1979                           postinc2	equ	0xFDE
  1980                           postdec2	equ	0xFDD
  1981                           fsr2h	equ	0xFDA
  1982                           fsr2l	equ	0xFD9
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function _fputc *****************
  1986 ;; Defined at:
  1987 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  c               2    0[COMRAM] int 
  1990 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1991 ;;		 -> sprintf@f(6), 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2    0[COMRAM] int 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2003 ;;      Params:         4       0       0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2005 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2006 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2007 ;;Total ram usage:        9 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    1
  2010 ;; This function calls:
  2011 ;;		_putch
  2012 ;; This function is called by:
  2013 ;;		_pad
  2014 ;;		_vfpfcnvrt
  2015 ;;		_fputs
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text11
  2020  000E5A                     __ptext11:
  2021                           	opt stack 0
  2022  000E5A                     _fputc:
  2023                           	opt stack 25
  2024                           
  2025                           ;incstack = 0
  2026  000E5A  5003               	movf	fputc@fp,w,c
  2027  000E5C  1004               	iorwf	fputc@fp+1,w,c
  2028  000E5E  B4D8               	btfsc	status,2,c
  2029  000E60  D004               	goto	u540
  2030  000E62  5003               	movf	fputc@fp,w,c
  2031  000E64  1004               	iorwf	fputc@fp+1,w,c
  2032  000E66  A4D8               	btfss	status,2,c
  2033  000E68  D004               	goto	l877
  2034  000E6A                     u540:
  2035  000E6A  5001               	movf	fputc@c,w,c
  2036  000E6C  EC40  F009         	call	_putch
  2037  000E70  0012               	return	
  2038  000E72                     l877:
  2039  000E72  EE20 F004          	lfsr	2,4
  2040  000E76  5003               	movf	fputc@fp,w,c
  2041  000E78  26D9               	addwf	fsr2l,f,c
  2042  000E7A  5004               	movf	fputc@fp+1,w,c
  2043  000E7C  22DA               	addwfc	fsr2h,f,c
  2044  000E7E  50DE               	movf	postinc2,w,c
  2045  000E80  10DE               	iorwf	postinc2,w,c
  2046  000E82  B4D8               	btfsc	status,2,c
  2047  000E84  D016               	goto	u560
  2048  000E86  EE20 F004          	lfsr	2,4
  2049  000E8A  5003               	movf	fputc@fp,w,c
  2050  000E8C  26D9               	addwf	fsr2l,f,c
  2051  000E8E  5004               	movf	fputc@fp+1,w,c
  2052  000E90  22DA               	addwfc	fsr2h,f,c
  2053  000E92  EE10 F002          	lfsr	1,2
  2054  000E96  5003               	movf	fputc@fp,w,c
  2055  000E98  26E1               	addwf	fsr1l,f,c
  2056  000E9A  5004               	movf	fputc@fp+1,w,c
  2057  000E9C  22E2               	addwfc	fsr1h,f,c
  2058  000E9E  50DE               	movf	postinc2,w,c
  2059  000EA0  5CE6               	subwf	postinc1,w,c
  2060  000EA2  50E6               	movf	postinc1,w,c
  2061  000EA4  0A80               	xorlw	128
  2062  000EA6  6E09               	movwf	(??_fputc+4)& (0+255),c
  2063  000EA8  50DE               	movf	postinc2,w,c
  2064  000EAA  0A80               	xorlw	128
  2065  000EAC  5809               	subwfb	(??_fputc+4)& (0+255),w,c
  2066  000EAE  B0D8               	btfsc	status,0,c
  2067  000EB0  0012               	return	
  2068  000EB2                     u560:
  2069  000EB2  EE20 F002          	lfsr	2,2
  2070  000EB6  5003               	movf	fputc@fp,w,c
  2071  000EB8  26D9               	addwf	fsr2l,f,c
  2072  000EBA  5004               	movf	fputc@fp+1,w,c
  2073  000EBC  22DA               	addwfc	fsr2h,f,c
  2074  000EBE  CFDE F005          	movff	postinc2,??_fputc
  2075  000EC2  CFDD F006          	movff	postdec2,??_fputc+1
  2076  000EC6  C003  FFD9         	movff	fputc@fp,fsr2l
  2077  000ECA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2078  000ECE  CFDE F007          	movff	postinc2,??_fputc+2
  2079  000ED2  CFDD F008          	movff	postdec2,??_fputc+3
  2080  000ED6  5005               	movf	??_fputc,w,c
  2081  000ED8  2407               	addwf	??_fputc+2,w,c
  2082  000EDA  6ED9               	movwf	fsr2l,c
  2083  000EDC  5006               	movf	??_fputc+1,w,c
  2084  000EDE  2008               	addwfc	??_fputc+3,w,c
  2085  000EE0  6EDA               	movwf	fsr2h,c
  2086  000EE2  C001  FFDF         	movff	fputc@c,indf2
  2087  000EE6  EE20 F002          	lfsr	2,2
  2088  000EEA  5003               	movf	fputc@fp,w,c
  2089  000EEC  26D9               	addwf	fsr2l,f,c
  2090  000EEE  5004               	movf	fputc@fp+1,w,c
  2091  000EF0  22DA               	addwfc	fsr2h,f,c
  2092  000EF2  2ADE               	incf	postinc2,f,c
  2093  000EF4  0E00               	movlw	0
  2094  000EF6  22DD               	addwfc	postdec2,f,c
  2095  000EF8  0012               	return	
  2096  000EFA                     __end_of_fputc:
  2097                           	opt stack 0
  2098                           tblptru	equ	0xFF8
  2099                           tblptrh	equ	0xFF7
  2100                           tblptrl	equ	0xFF6
  2101                           tablat	equ	0xFF5
  2102                           postinc0	equ	0xFEE
  2103                           wreg	equ	0xFE8
  2104                           postinc1	equ	0xFE6
  2105                           fsr1h	equ	0xFE2
  2106                           fsr1l	equ	0xFE1
  2107                           indf2	equ	0xFDF
  2108                           postinc2	equ	0xFDE
  2109                           postdec2	equ	0xFDD
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8
  2113                           
  2114 ;; *************** function _putch *****************
  2115 ;; Defined at:
  2116 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  c               1    wreg     unsigned char 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  c               1    0[COMRAM] unsigned char 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_fputc
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text12
  2144  001280                     __ptext12:
  2145                           	opt stack 0
  2146  001280                     _putch:
  2147                           	opt stack 25
  2148                           
  2149                           ;incstack = 0
  2150  001280  0012               	return		;funcret
  2151  001282                     __end_of_putch:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           postinc1	equ	0xFE6
  2160                           fsr1h	equ	0xFE2
  2161                           fsr1l	equ	0xFE1
  2162                           indf2	equ	0xFDF
  2163                           postinc2	equ	0xFDE
  2164                           postdec2	equ	0xFDD
  2165                           fsr2h	equ	0xFDA
  2166                           fsr2l	equ	0xFD9
  2167                           status	equ	0xFD8
  2168                           
  2169 ;; *************** function _abs *****************
  2170 ;; Defined at:
  2171 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  a               2   18[COMRAM] int 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  2   18[COMRAM] int 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2185 ;;      Params:         2       0       0       0       0       0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2187 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2188 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2189 ;;Total ram usage:        4 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_dtoa
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text13
  2199  0011F2                     __ptext13:
  2200                           	opt stack 0
  2201  0011F2                     _abs:
  2202                           	opt stack 25
  2203                           
  2204                           ;incstack = 0
  2205  0011F2  BE14               	btfsc	abs@a+1,7,c
  2206  0011F4  D005               	goto	u630
  2207  0011F6  5014               	movf	abs@a+1,w,c
  2208  0011F8  E110               	bnz	l869
  2209  0011FA  0413               	decf	abs@a,w,c
  2210  0011FC  B0D8               	btfsc	status,0,c
  2211  0011FE  D00D               	goto	l869
  2212  001200                     u630:
  2213  001200  C013  F015         	movff	abs@a,??_abs
  2214  001204  C014  F016         	movff	abs@a+1,??_abs+1
  2215  001208  1E15               	comf	??_abs,f,c
  2216  00120A  1E16               	comf	??_abs+1,f,c
  2217  00120C  4A15               	infsnz	??_abs,f,c
  2218  00120E  2A16               	incf	??_abs+1,f,c
  2219  001210  C015  F013         	movff	??_abs,?_abs
  2220  001214  C016  F014         	movff	??_abs+1,?_abs+1
  2221  001218  0012               	return	
  2222  00121A                     l869:
  2223  00121A  C013  F013         	movff	abs@a,?_abs
  2224  00121E  C014  F014         	movff	abs@a+1,?_abs+1
  2225  001222  0012               	return	
  2226  001224                     __end_of_abs:
  2227                           	opt stack 0
  2228                           tblptru	equ	0xFF8
  2229                           tblptrh	equ	0xFF7
  2230                           tblptrl	equ	0xFF6
  2231                           tablat	equ	0xFF5
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           postinc1	equ	0xFE6
  2235                           fsr1h	equ	0xFE2
  2236                           fsr1l	equ	0xFE1
  2237                           indf2	equ	0xFDF
  2238                           postinc2	equ	0xFDE
  2239                           postdec2	equ	0xFDD
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function ___aomod *****************
  2245 ;; Defined at:
  2246 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  dividend        8    0[COMRAM] long long 
  2249 ;;  divisor         8    8[COMRAM] long long 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;  sign            1   17[COMRAM] unsigned char 
  2252 ;;  counter         1   16[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  8    0[COMRAM] long long 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2262 ;;      Params:        16       0       0       0       0       0       0       0       0
  2263 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2265 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2266 ;;Total ram usage:       18 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_dtoa
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text14
  2276  000D36                     __ptext14:
  2277                           	opt stack 0
  2278  000D36                     ___aomod:
  2279                           	opt stack 25
  2280                           
  2281                           ;incstack = 0
  2282  000D36  0E00               	movlw	0
  2283  000D38  6E12               	movwf	___aomod@sign,c
  2284  000D3A  AE08               	btfss	___aomod@dividend+7,7,c
  2285  000D3C  D012               	goto	l311
  2286  000D3E  1E08               	comf	___aomod@dividend+7,f,c
  2287  000D40  1E07               	comf	___aomod@dividend+6,f,c
  2288  000D42  1E06               	comf	___aomod@dividend+5,f,c
  2289  000D44  1E05               	comf	___aomod@dividend+4,f,c
  2290  000D46  1E04               	comf	___aomod@dividend+3,f,c
  2291  000D48  1E03               	comf	___aomod@dividend+2,f,c
  2292  000D4A  1E02               	comf	___aomod@dividend+1,f,c
  2293  000D4C  6C01               	negf	___aomod@dividend,c
  2294  000D4E  0E00               	movlw	0
  2295  000D50  2202               	addwfc	___aomod@dividend+1,f,c
  2296  000D52  2203               	addwfc	___aomod@dividend+2,f,c
  2297  000D54  2204               	addwfc	___aomod@dividend+3,f,c
  2298  000D56  2205               	addwfc	___aomod@dividend+4,f,c
  2299  000D58  2206               	addwfc	___aomod@dividend+5,f,c
  2300  000D5A  2207               	addwfc	___aomod@dividend+6,f,c
  2301  000D5C  2208               	addwfc	___aomod@dividend+7,f,c
  2302  000D5E  0E01               	movlw	1
  2303  000D60  6E12               	movwf	___aomod@sign,c
  2304  000D62                     l311:
  2305  000D62  AE10               	btfss	___aomod@divisor+7,7,c
  2306  000D64  D010               	goto	l312
  2307  000D66  1E10               	comf	___aomod@divisor+7,f,c
  2308  000D68  1E0F               	comf	___aomod@divisor+6,f,c
  2309  000D6A  1E0E               	comf	___aomod@divisor+5,f,c
  2310  000D6C  1E0D               	comf	___aomod@divisor+4,f,c
  2311  000D6E  1E0C               	comf	___aomod@divisor+3,f,c
  2312  000D70  1E0B               	comf	___aomod@divisor+2,f,c
  2313  000D72  1E0A               	comf	___aomod@divisor+1,f,c
  2314  000D74  6C09               	negf	___aomod@divisor,c
  2315  000D76  0E00               	movlw	0
  2316  000D78  220A               	addwfc	___aomod@divisor+1,f,c
  2317  000D7A  220B               	addwfc	___aomod@divisor+2,f,c
  2318  000D7C  220C               	addwfc	___aomod@divisor+3,f,c
  2319  000D7E  220D               	addwfc	___aomod@divisor+4,f,c
  2320  000D80  220E               	addwfc	___aomod@divisor+5,f,c
  2321  000D82  220F               	addwfc	___aomod@divisor+6,f,c
  2322  000D84  2210               	addwfc	___aomod@divisor+7,f,c
  2323  000D86                     l312:
  2324  000D86  5009               	movf	___aomod@divisor,w,c
  2325  000D88  100A               	iorwf	___aomod@divisor+1,w,c
  2326  000D8A  100B               	iorwf	___aomod@divisor+2,w,c
  2327  000D8C  100C               	iorwf	___aomod@divisor+3,w,c
  2328  000D8E  100D               	iorwf	___aomod@divisor+4,w,c
  2329  000D90  100E               	iorwf	___aomod@divisor+5,w,c
  2330  000D92  100F               	iorwf	___aomod@divisor+6,w,c
  2331  000D94  1010               	iorwf	___aomod@divisor+7,w,c
  2332  000D96  B4D8               	btfsc	status,2,c
  2333  000D98  D03C               	goto	l319
  2334  000D9A  0E01               	movlw	1
  2335  000D9C  6E11               	movwf	___aomod@counter,c
  2336  000D9E  D00A               	goto	l314
  2337  000DA0  90D8               	bcf	status,0,c
  2338  000DA2  3609               	rlcf	___aomod@divisor,f,c
  2339  000DA4  360A               	rlcf	___aomod@divisor+1,f,c
  2340  000DA6  360B               	rlcf	___aomod@divisor+2,f,c
  2341  000DA8  360C               	rlcf	___aomod@divisor+3,f,c
  2342  000DAA  360D               	rlcf	___aomod@divisor+4,f,c
  2343  000DAC  360E               	rlcf	___aomod@divisor+5,f,c
  2344  000DAE  360F               	rlcf	___aomod@divisor+6,f,c
  2345  000DB0  3610               	rlcf	___aomod@divisor+7,f,c
  2346  000DB2  2A11               	incf	___aomod@counter,f,c
  2347  000DB4                     l314:
  2348  000DB4  AE10               	btfss	___aomod@divisor+7,7,c
  2349  000DB6  D7F4               	goto	l315
  2350  000DB8                     u740:
  2351  000DB8  5009               	movf	___aomod@divisor,w,c
  2352  000DBA  5C01               	subwf	___aomod@dividend,w,c
  2353  000DBC  500A               	movf	___aomod@divisor+1,w,c
  2354  000DBE  5802               	subwfb	___aomod@dividend+1,w,c
  2355  000DC0  500B               	movf	___aomod@divisor+2,w,c
  2356  000DC2  5803               	subwfb	___aomod@dividend+2,w,c
  2357  000DC4  500C               	movf	___aomod@divisor+3,w,c
  2358  000DC6  5804               	subwfb	___aomod@dividend+3,w,c
  2359  000DC8  500D               	movf	___aomod@divisor+4,w,c
  2360  000DCA  5805               	subwfb	___aomod@dividend+4,w,c
  2361  000DCC  500E               	movf	___aomod@divisor+5,w,c
  2362  000DCE  5806               	subwfb	___aomod@dividend+5,w,c
  2363  000DD0  500F               	movf	___aomod@divisor+6,w,c
  2364  000DD2  5807               	subwfb	___aomod@dividend+6,w,c
  2365  000DD4  5010               	movf	___aomod@divisor+7,w,c
  2366  000DD6  5808               	subwfb	___aomod@dividend+7,w,c
  2367  000DD8  A0D8               	btfss	status,0,c
  2368  000DDA  D010               	goto	l318
  2369  000DDC  5009               	movf	___aomod@divisor,w,c
  2370  000DDE  5E01               	subwf	___aomod@dividend,f,c
  2371  000DE0  500A               	movf	___aomod@divisor+1,w,c
  2372  000DE2  5A02               	subwfb	___aomod@dividend+1,f,c
  2373  000DE4  500B               	movf	___aomod@divisor+2,w,c
  2374  000DE6  5A03               	subwfb	___aomod@dividend+2,f,c
  2375  000DE8  500C               	movf	___aomod@divisor+3,w,c
  2376  000DEA  5A04               	subwfb	___aomod@dividend+3,f,c
  2377  000DEC  500D               	movf	___aomod@divisor+4,w,c
  2378  000DEE  5A05               	subwfb	___aomod@dividend+4,f,c
  2379  000DF0  500E               	movf	___aomod@divisor+5,w,c
  2380  000DF2  5A06               	subwfb	___aomod@dividend+5,f,c
  2381  000DF4  500F               	movf	___aomod@divisor+6,w,c
  2382  000DF6  5A07               	subwfb	___aomod@dividend+6,f,c
  2383  000DF8  5010               	movf	___aomod@divisor+7,w,c
  2384  000DFA  5A08               	subwfb	___aomod@dividend+7,f,c
  2385  000DFC                     l318:
  2386  000DFC  90D8               	bcf	status,0,c
  2387  000DFE  3210               	rrcf	___aomod@divisor+7,f,c
  2388  000E00  320F               	rrcf	___aomod@divisor+6,f,c
  2389  000E02  320E               	rrcf	___aomod@divisor+5,f,c
  2390  000E04  320D               	rrcf	___aomod@divisor+4,f,c
  2391  000E06  320C               	rrcf	___aomod@divisor+3,f,c
  2392  000E08  320B               	rrcf	___aomod@divisor+2,f,c
  2393  000E0A  320A               	rrcf	___aomod@divisor+1,f,c
  2394  000E0C  3209               	rrcf	___aomod@divisor,f,c
  2395  000E0E  2E11               	decfsz	___aomod@counter,f,c
  2396  000E10  D7D3               	goto	u740
  2397  000E12                     l319:
  2398  000E12  5012               	movf	___aomod@sign,w,c
  2399  000E14  B4D8               	btfsc	status,2,c
  2400  000E16  D010               	goto	l320
  2401  000E18  1E08               	comf	___aomod@dividend+7,f,c
  2402  000E1A  1E07               	comf	___aomod@dividend+6,f,c
  2403  000E1C  1E06               	comf	___aomod@dividend+5,f,c
  2404  000E1E  1E05               	comf	___aomod@dividend+4,f,c
  2405  000E20  1E04               	comf	___aomod@dividend+3,f,c
  2406  000E22  1E03               	comf	___aomod@dividend+2,f,c
  2407  000E24  1E02               	comf	___aomod@dividend+1,f,c
  2408  000E26  6C01               	negf	___aomod@dividend,c
  2409  000E28  0E00               	movlw	0
  2410  000E2A  2202               	addwfc	___aomod@dividend+1,f,c
  2411  000E2C  2203               	addwfc	___aomod@dividend+2,f,c
  2412  000E2E  2204               	addwfc	___aomod@dividend+3,f,c
  2413  000E30  2205               	addwfc	___aomod@dividend+4,f,c
  2414  000E32  2206               	addwfc	___aomod@dividend+5,f,c
  2415  000E34  2207               	addwfc	___aomod@dividend+6,f,c
  2416  000E36  2208               	addwfc	___aomod@dividend+7,f,c
  2417  000E38                     l320:
  2418  000E38  C001  F001         	movff	___aomod@dividend,?___aomod
  2419  000E3C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2420  000E40  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2421  000E44  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2422  000E48  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2423  000E4C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2424  000E50  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2425  000E54  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2426  000E58  0012               	return	
  2427  000E5A                     __end_of___aomod:
  2428                           	opt stack 0
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           postinc0	equ	0xFEE
  2434                           wreg	equ	0xFE8
  2435                           postinc1	equ	0xFE6
  2436                           fsr1h	equ	0xFE2
  2437                           fsr1l	equ	0xFE1
  2438                           indf2	equ	0xFDF
  2439                           postinc2	equ	0xFDE
  2440                           postdec2	equ	0xFDD
  2441                           fsr2h	equ	0xFDA
  2442                           fsr2l	equ	0xFD9
  2443                           status	equ	0xFD8
  2444                           
  2445 ;; *************** function ___aodiv *****************
  2446 ;; Defined at:
  2447 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  dividend        8    0[COMRAM] long long 
  2450 ;;  divisor         8    8[COMRAM] long long 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  quotient        8   18[COMRAM] long long 
  2453 ;;  sign            1   17[COMRAM] unsigned char 
  2454 ;;  counter         1   16[COMRAM] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  8    0[COMRAM] long long 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2464 ;;      Params:        16       0       0       0       0       0       0       0       0
  2465 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2467 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2468 ;;Total ram usage:       26 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_dtoa
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text15
  2478  000BEE                     __ptext15:
  2479                           	opt stack 0
  2480  000BEE                     ___aodiv:
  2481                           	opt stack 25
  2482                           
  2483                           ;incstack = 0
  2484  000BEE  0E00               	movlw	0
  2485  000BF0  6E12               	movwf	___aodiv@sign,c
  2486  000BF2  AE10               	btfss	___aodiv@divisor+7,7,c
  2487  000BF4  D012               	goto	l298
  2488  000BF6  1E10               	comf	___aodiv@divisor+7,f,c
  2489  000BF8  1E0F               	comf	___aodiv@divisor+6,f,c
  2490  000BFA  1E0E               	comf	___aodiv@divisor+5,f,c
  2491  000BFC  1E0D               	comf	___aodiv@divisor+4,f,c
  2492  000BFE  1E0C               	comf	___aodiv@divisor+3,f,c
  2493  000C00  1E0B               	comf	___aodiv@divisor+2,f,c
  2494  000C02  1E0A               	comf	___aodiv@divisor+1,f,c
  2495  000C04  6C09               	negf	___aodiv@divisor,c
  2496  000C06  0E00               	movlw	0
  2497  000C08  220A               	addwfc	___aodiv@divisor+1,f,c
  2498  000C0A  220B               	addwfc	___aodiv@divisor+2,f,c
  2499  000C0C  220C               	addwfc	___aodiv@divisor+3,f,c
  2500  000C0E  220D               	addwfc	___aodiv@divisor+4,f,c
  2501  000C10  220E               	addwfc	___aodiv@divisor+5,f,c
  2502  000C12  220F               	addwfc	___aodiv@divisor+6,f,c
  2503  000C14  2210               	addwfc	___aodiv@divisor+7,f,c
  2504  000C16  0E01               	movlw	1
  2505  000C18  6E12               	movwf	___aodiv@sign,c
  2506  000C1A                     l298:
  2507  000C1A  AE08               	btfss	___aodiv@dividend+7,7,c
  2508  000C1C  D012               	goto	l299
  2509  000C1E  1E08               	comf	___aodiv@dividend+7,f,c
  2510  000C20  1E07               	comf	___aodiv@dividend+6,f,c
  2511  000C22  1E06               	comf	___aodiv@dividend+5,f,c
  2512  000C24  1E05               	comf	___aodiv@dividend+4,f,c
  2513  000C26  1E04               	comf	___aodiv@dividend+3,f,c
  2514  000C28  1E03               	comf	___aodiv@dividend+2,f,c
  2515  000C2A  1E02               	comf	___aodiv@dividend+1,f,c
  2516  000C2C  6C01               	negf	___aodiv@dividend,c
  2517  000C2E  0E00               	movlw	0
  2518  000C30  2202               	addwfc	___aodiv@dividend+1,f,c
  2519  000C32  2203               	addwfc	___aodiv@dividend+2,f,c
  2520  000C34  2204               	addwfc	___aodiv@dividend+3,f,c
  2521  000C36  2205               	addwfc	___aodiv@dividend+4,f,c
  2522  000C38  2206               	addwfc	___aodiv@dividend+5,f,c
  2523  000C3A  2207               	addwfc	___aodiv@dividend+6,f,c
  2524  000C3C  2208               	addwfc	___aodiv@dividend+7,f,c
  2525  000C3E  0E01               	movlw	1
  2526  000C40  1A12               	xorwf	___aodiv@sign,f,c
  2527  000C42                     l299:
  2528  000C42  EE20  F013         	lfsr	2,___aodiv@quotient
  2529  000C46  0E07               	movlw	7
  2530  000C48                     u661:
  2531  000C48  6ADE               	clrf	postinc2,c
  2532  000C4A  06E8               	decf	wreg,f,c
  2533  000C4C  E2FD               	bc	u661
  2534  000C4E  5009               	movf	___aodiv@divisor,w,c
  2535  000C50  100A               	iorwf	___aodiv@divisor+1,w,c
  2536  000C52  100B               	iorwf	___aodiv@divisor+2,w,c
  2537  000C54  100C               	iorwf	___aodiv@divisor+3,w,c
  2538  000C56  100D               	iorwf	___aodiv@divisor+4,w,c
  2539  000C58  100E               	iorwf	___aodiv@divisor+5,w,c
  2540  000C5A  100F               	iorwf	___aodiv@divisor+6,w,c
  2541  000C5C  1010               	iorwf	___aodiv@divisor+7,w,c
  2542  000C5E  B4D8               	btfsc	status,2,c
  2543  000C60  D046               	goto	l306
  2544  000C62  0E01               	movlw	1
  2545  000C64  6E11               	movwf	___aodiv@counter,c
  2546  000C66  D00A               	goto	l301
  2547  000C68  90D8               	bcf	status,0,c
  2548  000C6A  3609               	rlcf	___aodiv@divisor,f,c
  2549  000C6C  360A               	rlcf	___aodiv@divisor+1,f,c
  2550  000C6E  360B               	rlcf	___aodiv@divisor+2,f,c
  2551  000C70  360C               	rlcf	___aodiv@divisor+3,f,c
  2552  000C72  360D               	rlcf	___aodiv@divisor+4,f,c
  2553  000C74  360E               	rlcf	___aodiv@divisor+5,f,c
  2554  000C76  360F               	rlcf	___aodiv@divisor+6,f,c
  2555  000C78  3610               	rlcf	___aodiv@divisor+7,f,c
  2556  000C7A  2A11               	incf	___aodiv@counter,f,c
  2557  000C7C                     l301:
  2558  000C7C  AE10               	btfss	___aodiv@divisor+7,7,c
  2559  000C7E  D7F4               	goto	l302
  2560  000C80                     u680:
  2561  000C80  90D8               	bcf	status,0,c
  2562  000C82  3613               	rlcf	___aodiv@quotient,f,c
  2563  000C84  3614               	rlcf	___aodiv@quotient+1,f,c
  2564  000C86  3615               	rlcf	___aodiv@quotient+2,f,c
  2565  000C88  3616               	rlcf	___aodiv@quotient+3,f,c
  2566  000C8A  3617               	rlcf	___aodiv@quotient+4,f,c
  2567  000C8C  3618               	rlcf	___aodiv@quotient+5,f,c
  2568  000C8E  3619               	rlcf	___aodiv@quotient+6,f,c
  2569  000C90  361A               	rlcf	___aodiv@quotient+7,f,c
  2570  000C92  5009               	movf	___aodiv@divisor,w,c
  2571  000C94  5C01               	subwf	___aodiv@dividend,w,c
  2572  000C96  500A               	movf	___aodiv@divisor+1,w,c
  2573  000C98  5802               	subwfb	___aodiv@dividend+1,w,c
  2574  000C9A  500B               	movf	___aodiv@divisor+2,w,c
  2575  000C9C  5803               	subwfb	___aodiv@dividend+2,w,c
  2576  000C9E  500C               	movf	___aodiv@divisor+3,w,c
  2577  000CA0  5804               	subwfb	___aodiv@dividend+3,w,c
  2578  000CA2  500D               	movf	___aodiv@divisor+4,w,c
  2579  000CA4  5805               	subwfb	___aodiv@dividend+4,w,c
  2580  000CA6  500E               	movf	___aodiv@divisor+5,w,c
  2581  000CA8  5806               	subwfb	___aodiv@dividend+5,w,c
  2582  000CAA  500F               	movf	___aodiv@divisor+6,w,c
  2583  000CAC  5807               	subwfb	___aodiv@dividend+6,w,c
  2584  000CAE  5010               	movf	___aodiv@divisor+7,w,c
  2585  000CB0  5808               	subwfb	___aodiv@dividend+7,w,c
  2586  000CB2  A0D8               	btfss	status,0,c
  2587  000CB4  D011               	goto	l305
  2588  000CB6  5009               	movf	___aodiv@divisor,w,c
  2589  000CB8  5E01               	subwf	___aodiv@dividend,f,c
  2590  000CBA  500A               	movf	___aodiv@divisor+1,w,c
  2591  000CBC  5A02               	subwfb	___aodiv@dividend+1,f,c
  2592  000CBE  500B               	movf	___aodiv@divisor+2,w,c
  2593  000CC0  5A03               	subwfb	___aodiv@dividend+2,f,c
  2594  000CC2  500C               	movf	___aodiv@divisor+3,w,c
  2595  000CC4  5A04               	subwfb	___aodiv@dividend+3,f,c
  2596  000CC6  500D               	movf	___aodiv@divisor+4,w,c
  2597  000CC8  5A05               	subwfb	___aodiv@dividend+4,f,c
  2598  000CCA  500E               	movf	___aodiv@divisor+5,w,c
  2599  000CCC  5A06               	subwfb	___aodiv@dividend+5,f,c
  2600  000CCE  500F               	movf	___aodiv@divisor+6,w,c
  2601  000CD0  5A07               	subwfb	___aodiv@dividend+6,f,c
  2602  000CD2  5010               	movf	___aodiv@divisor+7,w,c
  2603  000CD4  5A08               	subwfb	___aodiv@dividend+7,f,c
  2604  000CD6  8013               	bsf	___aodiv@quotient,0,c
  2605  000CD8                     l305:
  2606  000CD8  90D8               	bcf	status,0,c
  2607  000CDA  3210               	rrcf	___aodiv@divisor+7,f,c
  2608  000CDC  320F               	rrcf	___aodiv@divisor+6,f,c
  2609  000CDE  320E               	rrcf	___aodiv@divisor+5,f,c
  2610  000CE0  320D               	rrcf	___aodiv@divisor+4,f,c
  2611  000CE2  320C               	rrcf	___aodiv@divisor+3,f,c
  2612  000CE4  320B               	rrcf	___aodiv@divisor+2,f,c
  2613  000CE6  320A               	rrcf	___aodiv@divisor+1,f,c
  2614  000CE8  3209               	rrcf	___aodiv@divisor,f,c
  2615  000CEA  2E11               	decfsz	___aodiv@counter,f,c
  2616  000CEC  D7C9               	goto	u680
  2617  000CEE                     l306:
  2618  000CEE  5012               	movf	___aodiv@sign,w,c
  2619  000CF0  B4D8               	btfsc	status,2,c
  2620  000CF2  D010               	goto	l307
  2621  000CF4  1E1A               	comf	___aodiv@quotient+7,f,c
  2622  000CF6  1E19               	comf	___aodiv@quotient+6,f,c
  2623  000CF8  1E18               	comf	___aodiv@quotient+5,f,c
  2624  000CFA  1E17               	comf	___aodiv@quotient+4,f,c
  2625  000CFC  1E16               	comf	___aodiv@quotient+3,f,c
  2626  000CFE  1E15               	comf	___aodiv@quotient+2,f,c
  2627  000D00  1E14               	comf	___aodiv@quotient+1,f,c
  2628  000D02  6C13               	negf	___aodiv@quotient,c
  2629  000D04  0E00               	movlw	0
  2630  000D06  2214               	addwfc	___aodiv@quotient+1,f,c
  2631  000D08  2215               	addwfc	___aodiv@quotient+2,f,c
  2632  000D0A  2216               	addwfc	___aodiv@quotient+3,f,c
  2633  000D0C  2217               	addwfc	___aodiv@quotient+4,f,c
  2634  000D0E  2218               	addwfc	___aodiv@quotient+5,f,c
  2635  000D10  2219               	addwfc	___aodiv@quotient+6,f,c
  2636  000D12  221A               	addwfc	___aodiv@quotient+7,f,c
  2637  000D14                     l307:
  2638  000D14  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2639  000D18  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2640  000D1C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2641  000D20  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2642  000D24  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2643  000D28  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2644  000D2C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2645  000D30  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2646  000D34  0012               	return	
  2647  000D36                     __end_of___aodiv:
  2648                           	opt stack 0
  2649                           tblptru	equ	0xFF8
  2650                           tblptrh	equ	0xFF7
  2651                           tblptrl	equ	0xFF6
  2652                           tablat	equ	0xFF5
  2653                           postinc0	equ	0xFEE
  2654                           wreg	equ	0xFE8
  2655                           postinc1	equ	0xFE6
  2656                           fsr1h	equ	0xFE2
  2657                           fsr1l	equ	0xFE1
  2658                           indf2	equ	0xFDF
  2659                           postinc2	equ	0xFDE
  2660                           postdec2	equ	0xFDD
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8
  2664                           
  2665 ;; *************** function _UART_Write_String *****************
  2666 ;; Defined at:
  2667 ;;		line 84 in file "C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  text            2    1[COMRAM] PTR unsigned char 
  2670 ;;		 -> Buffer(10), STR_1(10), 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  i               2    5[COMRAM] unsigned short 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2682 ;;      Params:         2       0       0       0       0       0       0       0       0
  2683 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2684 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2685 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2686 ;;Total ram usage:        6 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    1
  2689 ;; This function calls:
  2690 ;;		_UART_Write
  2691 ;; This function is called by:
  2692 ;;		_main
  2693 ;;		_Touch_Sense
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text16
  2698  001020                     __ptext16:
  2699                           	opt stack 0
  2700  001020                     _UART_Write_String:
  2701                           	opt stack 29
  2702                           
  2703                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 84: void UART_Write_String(uin
      +                          t8_t *text);C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 85: {;C:/Users/Khal
      +                          ed Magdy/Desktop/Capacitive_Touch.X/main.c: 86:   uint16_t i;;C:/Users/Khaled Magdy/Desk
      +                          top/Capacitive_Touch.X/main.c: 87:   for(i=0;text[i]!='\0';i++)
  2704                           
  2705                           ;incstack = 0
  2706  001020  0E00               	movlw	0
  2707  001022  6E07               	movwf	UART_Write_String@i+1,c
  2708  001024  0E00               	movlw	0
  2709  001026  6E06               	movwf	UART_Write_String@i,c
  2710  001028  D01A               	goto	l106
  2711  00102A                     
  2712                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 88:     UART_Write(text[i]);
  2713  00102A  5006               	movf	UART_Write_String@i,w,c
  2714  00102C  2402               	addwf	UART_Write_String@text,w,c
  2715  00102E  6E04               	movwf	??_UART_Write_String& (0+255),c
  2716  001030  5007               	movf	UART_Write_String@i+1,w,c
  2717  001032  2003               	addwfc	UART_Write_String@text+1,w,c
  2718  001034  6E05               	movwf	(??_UART_Write_String+1)& (0+255),c
  2719  001036  C004  FFF6         	movff	??_UART_Write_String,tblptrl
  2720  00103A  C005  FFF7         	movff	??_UART_Write_String+1,tblptrh
  2721  00103E  6AF8               	clrf	tblptru,c
  2722  001040  0E07               	movlw	(high __ramtop+-1)
  2723  001042  64F7               	cpfsgt	tblptrh,c
  2724  001044  D003               	bra	u987
  2725  001046  0008               	tblrd		*
  2726  001048  50F5               	movf	tablat,w,c
  2727  00104A  D005               	bra	u980
  2728  00104C                     u987:
  2729  00104C  CFF6 FFE1          	movff	tblptrl,fsr1l
  2730  001050  CFF7 FFE2          	movff	tblptrh,fsr1h
  2731  001054  50E7               	movf	indf1,w,c
  2732  001056                     u980:
  2733  001056  EC37  F009         	call	_UART_Write
  2734  00105A  4A06               	infsnz	UART_Write_String@i,f,c
  2735  00105C  2A07               	incf	UART_Write_String@i+1,f,c
  2736  00105E                     l106:
  2737  00105E  5006               	movf	UART_Write_String@i,w,c
  2738  001060  2402               	addwf	UART_Write_String@text,w,c
  2739  001062  6E04               	movwf	??_UART_Write_String& (0+255),c
  2740  001064  5007               	movf	UART_Write_String@i+1,w,c
  2741  001066  2003               	addwfc	UART_Write_String@text+1,w,c
  2742  001068  6E05               	movwf	(??_UART_Write_String+1)& (0+255),c
  2743  00106A  C004  FFF6         	movff	??_UART_Write_String,tblptrl
  2744  00106E  C005  FFF7         	movff	??_UART_Write_String+1,tblptrh
  2745  001072  6AF8               	clrf	tblptru,c
  2746  001074  0E07               	movlw	(high __ramtop+-1)
  2747  001076  64F7               	cpfsgt	tblptrh,c
  2748  001078  D003               	bra	u997
  2749  00107A  0008               	tblrd		*
  2750  00107C  50F5               	movf	tablat,w,c
  2751  00107E  D005               	bra	u990
  2752  001080                     u997:
  2753  001080  CFF6 FFE1          	movff	tblptrl,fsr1l
  2754  001084  CFF7 FFE2          	movff	tblptrh,fsr1h
  2755  001088  50E7               	movf	indf1,w,c
  2756  00108A                     u990:
  2757  00108A  0900               	iorlw	0
  2758  00108C  B4D8               	btfsc	status,2,c
  2759  00108E  0012               	return	
  2760  001090  D7CC               	goto	l107
  2761  001092                     __end_of_UART_Write_String:
  2762                           	opt stack 0
  2763                           tblptru	equ	0xFF8
  2764                           tblptrh	equ	0xFF7
  2765                           tblptrl	equ	0xFF6
  2766                           tablat	equ	0xFF5
  2767                           postinc0	equ	0xFEE
  2768                           wreg	equ	0xFE8
  2769                           indf1	equ	0xFE7
  2770                           postinc1	equ	0xFE6
  2771                           fsr1h	equ	0xFE2
  2772                           fsr1l	equ	0xFE1
  2773                           indf2	equ	0xFDF
  2774                           postinc2	equ	0xFDE
  2775                           postdec2	equ	0xFDD
  2776                           fsr2h	equ	0xFDA
  2777                           fsr2l	equ	0xFD9
  2778                           status	equ	0xFD8
  2779                           
  2780 ;; *************** function _UART_Write *****************
  2781 ;; Defined at:
  2782 ;;		line 78 in file "C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  data            1    wreg     unsigned char 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  data            1    0[COMRAM] unsigned char 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0
  2797 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2799 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2800 ;;Total ram usage:        1 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_UART_Write_String
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text17
  2810  00126E                     __ptext17:
  2811                           	opt stack 0
  2812  00126E                     _UART_Write:
  2813                           	opt stack 29
  2814                           
  2815                           ;incstack = 0
  2816                           ;UART_Write@data stored from wreg
  2817  00126E  6E01               	movwf	UART_Write@data,c
  2818  001270                     
  2819                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 78: void UART_Write(uint8_t da
      +                          ta);C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 79: {;C:/Users/Khaled Magdy
      +                          /Desktop/Capacitive_Touch.X/main.c: 80:   while(!TRMT);
  2820  001270  A2AC               	btfss	4012,1,c	;volatile
  2821  001272  D7FE               	goto	l1498
  2822                           
  2823                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 81:   TXREG = data;
  2824  001274  C001  FFAD         	movff	UART_Write@data,4013	;volatile
  2825  001278  0012               	return		;funcret
  2826  00127A                     __end_of_UART_Write:
  2827                           	opt stack 0
  2828                           tblptru	equ	0xFF8
  2829                           tblptrh	equ	0xFF7
  2830                           tblptrl	equ	0xFF6
  2831                           tablat	equ	0xFF5
  2832                           postinc0	equ	0xFEE
  2833                           wreg	equ	0xFE8
  2834                           indf1	equ	0xFE7
  2835                           postinc1	equ	0xFE6
  2836                           fsr1h	equ	0xFE2
  2837                           fsr1l	equ	0xFE1
  2838                           indf2	equ	0xFDF
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _TMR1_Init *****************
  2846 ;; Defined at:
  2847 ;;		line 90 in file "C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2861 ;;      Params:         0       0       0       0       0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2864 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2865 ;;Total ram usage:        0 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text18
  2875  00124E                     __ptext18:
  2876                           	opt stack 0
  2877  00124E                     _TMR1_Init:
  2878                           	opt stack 30
  2879                           
  2880                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 94:   TMR1 = 0;
  2881                           
  2882                           ;incstack = 0
  2883  00124E  0E00               	movlw	0
  2884  001250  6ECF               	movwf	4047,c	;volatile
  2885  001252  0E00               	movlw	0
  2886  001254  6ECE               	movwf	4046,c	;volatile
  2887                           
  2888                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 96:   TMR1CS = 0;
  2889  001256  92CD               	bcf	4045,1,c	;volatile
  2890                           
  2891                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 98:   T1CKPS0 = 0;
  2892  001258  98CD               	bcf	4045,4,c	;volatile
  2893                           
  2894                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 99:   T1CKPS1 = 0;
  2895  00125A  9ACD               	bcf	4045,5,c	;volatile
  2896                           
  2897                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 101:   TMR1ON = 0;
  2898  00125C  90CD               	bcf	4045,0,c	;volatile
  2899  00125E  0012               	return		;funcret
  2900  001260                     __end_of_TMR1_Init:
  2901                           	opt stack 0
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           postinc0	equ	0xFEE
  2907                           wreg	equ	0xFE8
  2908                           indf1	equ	0xFE7
  2909                           postinc1	equ	0xFE6
  2910                           fsr1h	equ	0xFE2
  2911                           fsr1l	equ	0xFE1
  2912                           indf2	equ	0xFDF
  2913                           postinc2	equ	0xFDE
  2914                           postdec2	equ	0xFDD
  2915                           fsr2h	equ	0xFDA
  2916                           fsr2l	equ	0xFD9
  2917                           status	equ	0xFD8
  2918                           
  2919 ;; *************** function _Comp_Init *****************
  2920 ;; Defined at:
  2921 ;;		line 51 in file "C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2938 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_main
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text19
  2949  001260                     __ptext19:
  2950                           	opt stack 0
  2951  001260                     _Comp_Init:
  2952                           	opt stack 30
  2953                           
  2954                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 59:     CMCON = 0b00000110;
  2955                           
  2956                           ;incstack = 0
  2957  001260  0E06               	movlw	6
  2958  001262  6EB4               	movwf	4020,c	;volatile
  2959                           
  2960                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 60:     CMIF = 0;
  2961  001264  9CA1               	bcf	4001,6,c	;volatile
  2962                           
  2963                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 61:     CMIE = 1;
  2964  001266  8CA0               	bsf	4000,6,c	;volatile
  2965                           
  2966                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 62:     PEIE = 1;
  2967  001268  8CF2               	bsf	intcon,6,c	;volatile
  2968                           
  2969                           ;C:/Users/Khaled Magdy/Desktop/Capacitive_Touch.X/main.c: 63:     GIE = 0;
  2970  00126A  9EF2               	bcf	intcon,7,c	;volatile
  2971  00126C  0012               	return		;funcret
  2972  00126E                     __end_of_Comp_Init:
  2973                           	opt stack 0
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           intcon	equ	0xFF2
  2979                           postinc0	equ	0xFEE
  2980                           wreg	equ	0xFE8
  2981                           indf1	equ	0xFE7
  2982                           postinc1	equ	0xFE6
  2983                           fsr1h	equ	0xFE2
  2984                           fsr1l	equ	0xFE1
  2985                           indf2	equ	0xFDF
  2986                           postinc2	equ	0xFDE
  2987                           postdec2	equ	0xFDD
  2988                           fsr2h	equ	0xFDA
  2989                           fsr2l	equ	0xFD9
  2990                           status	equ	0xFD8
  2991                           tblptru	equ	0xFF8
  2992                           tblptrh	equ	0xFF7
  2993                           tblptrl	equ	0xFF6
  2994                           tablat	equ	0xFF5
  2995                           intcon	equ	0xFF2
  2996                           postinc0	equ	0xFEE
  2997                           wreg	equ	0xFE8
  2998                           indf1	equ	0xFE7
  2999                           postinc1	equ	0xFE6
  3000                           fsr1h	equ	0xFE2
  3001                           fsr1l	equ	0xFE1
  3002                           indf2	equ	0xFDF
  3003                           postinc2	equ	0xFDE
  3004                           postdec2	equ	0xFDD
  3005                           fsr2h	equ	0xFDA
  3006                           fsr2l	equ	0xFD9
  3007                           status	equ	0xFD8
  3008                           
  3009                           	psect	rparam
  3010  0000                     tblptru	equ	0xFF8
  3011                           tblptrh	equ	0xFF7
  3012                           tblptrl	equ	0xFF6
  3013                           tablat	equ	0xFF5
  3014                           intcon	equ	0xFF2
  3015                           postinc0	equ	0xFEE
  3016                           wreg	equ	0xFE8
  3017                           indf1	equ	0xFE7
  3018                           postinc1	equ	0xFE6
  3019                           fsr1h	equ	0xFE2
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           postinc2	equ	0xFDE
  3023                           postdec2	equ	0xFDD
  3024                           fsr2h	equ	0xFDA
  3025                           fsr2l	equ	0xFD9
  3026                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     13      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S619_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    UART_Write_String@text	PTR unsigned char  size(2) Largest target is 10
		 -> Buffer(BANK0[10]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _Touch_Sense->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _UART_Write_String->_UART_Write

Critical Paths under _main in BANK0

    _main->_Touch_Sense
    _Touch_Sense->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6984
                                             12 BANK0      1     1      0
                          _Comp_Init
                          _TMR1_Init
                        _Touch_Sense
                       _UART_TX_Init
                  _UART_Write_String
                          _Vref_Init
 ---------------------------------------------------------------------------------
 (1) _Vref_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_TX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Touch_Sense                                          2     2      0    6720
                                             10 BANK0      2     2      0
                  _UART_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8    6456
                                             87 COMRAM     8     0      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _UART_Write_String                                    6     4      2     264
                                              1 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp_Init
   _TMR1_Init
   _Touch_Sense
     _UART_Write_String
       _UART_Write
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _UART_TX_Init
   _UART_Write_String
     _UART_Write
   _Vref_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D      43       5       41.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A2      20        0.0%
DATA                 0      0      A2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Sep 23 14:50:36 2019

                        l85 116A                 __CFG_BORV$3 000000  __size_of_UART_Write_String 0072  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000  
              __CFG_CP3$OFF 000000                         l106 105E                         l107 102A  
                       l116 0FA0                         l301 0C7C                         l302 0C68  
                       l150 0F7A                         l142 0F14                         l118 101C  
                       l311 0D62                         l320 0E38                         l312 0D86  
                       l144 0F22                         l160 08A8                         l305 0CD8  
                       l306 0CEE                         l314 0DB4                         l146 0F2A  
                       l170 0A3A                         l154 0868                         l307 0D14  
                       l315 0DA0                         l147 0F4C                         l163 09BA  
                       l148 0F34                         l164 08C2                         l180 0BB2  
                       l157 0886                         l181 0B54                         l318 0DFC  
                       l174 0A22                         l319 0E12                         l159 088E  
                       l185 0B9A                         l188 1126                         l189 1100  
                       l298 0C1A                         l299 0C42                         l905 118E  
                       l906 118A                         l890 11C4                         l869 121A  
                       l877 0E72                         l889 11DA                         _GIE 007F97  
              __CFG_CPB$OFF 000000                         _RB0 007C08                         _RC1 007C11  
                       _RC2 007C12                __CFG_CPD$OFF 000000                         u540 0E6A  
                       u630 1200                         u560 0EB2                         u810 087C  
                       u740 0DB8                         u900 0A0C                         u661 0C48  
                       u830 08A2                         u680 0C80                         u840 09C8  
                       u770 083A                         u860 09EA                         u780 083C  
                       u940 0AD6                         u861 09E8                         u870 09F8  
                       u880 09FE                         u980 1056                         u990 108A  
                       u987 104C                         u997 1080                __CFG_BOR$OFF 000000  
                       _abs 11F2                         _pad 0EFA                         wreg 000FE8  
              __CFG_IESO$ON 000000                __CFG_LVP$OFF 000000                __CFG_WDT$OFF 000000  
                      ?_abs 0013                        l1498 1270                        ?_pad 0011  
                      STR_1 0801                        STR_2 080B                        _CMIE 007D06  
                      _CMIF 007D0E                        _BRGH 007D62                        u1020 0FF8  
                      u1030 1000                        u1045 1002                        u1057 1176  
                      u1067 100E                        _PEIE 007F96                        _TMR1 000FCE  
                      _SPEN 007D5F                        _TRMT 007D61                        _TXEN 007D65  
                      _SYNC 007D64                        abs@a 0013                        _dbuf 006C  
                      _main 1142                        _dtoa 0812                        _prec 0068  
                      _nout 0064                        pad@i 0018                        pad@p 0015  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001A  
                      fsr2l 000FD9                        start 0000               __CFG_MCLRE$ON 000000  
              ___param_bank 000000                       ??_abs 0015                       ??_pad 0017  
             __CFG_PLLDIV$2 000000              __CFG_CCP2MX$ON 000000                       _C1OUT 007DA6  
           __end_of___aodiv 0D36                       ?_main 0001                       ?_dtoa 001C  
           __end_of___aomod 0E5A                       _BRG16 007DC3                       _CMCON 000FB4  
              vfpfcnvrt@fmt 0042                       _TMR1H 000FCF                       _TMR1L 000FCE  
                     _SPBRG 000FAF               __CFG_USBDIV$1 000000                       _TXREG 000FAD  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000                       _Ticks 0060                 ?_UART_Write 0001  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
        __size_of_TMR1_Init 0012              __CFG_EBTRB$OFF 000000                       _flags 006A  
                     _fputc 0E5A                       _fputs 11BA                       pad@fp 0011  
                     _width 0066                       _putch 1280                       dtoa@d 001E  
                     dtoa@i 003E                       dtoa@n 0036                       dtoa@p 0030  
                     dtoa@s 0034                       dtoa@w 0032                       tablat 000FF5  
                     status 000FD8             __end_of_sprintf 10EC             __initialization 1224  
              __end_of_main 1180                __end_of_dtoa 0A64                      ??_main 00A2  
                    ??_dtoa 0026               __activetblptr 000002          __size_of_Comp_Init 000E  
                    ?_fputc 0001                      ?_fputs 000A                      ?_putch 0001  
                    _CVRCON 000FB5                      _TMR1CS 007E69                      _TMR1ON 007E68  
                    _TRISB0 007C98                      _TRISC1 007CA1                      _TRISC2 007CA2  
                    _TRISC6 007CA6                      _TRISC7 007CA7                      _Buffer 008C  
            __CFG_XINST$OFF 000000                vfprintf@cfmt 0056           __end_of_TMR1_Init 1260  
       __size_of_UART_Write 000C                   ??___aodiv 0011                   ??___aomod 0011  
            __CFG_STVREN$ON 000000                      clear_0 122A                      pad@buf 0013  
                    dtoa@fp 001C                      _strlen 1180                      fputc@c 0001  
                    fputs@c 000E                      fputs@i 000F                      fputs@s 000A  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                      putch@c 0001            __end_of_vfprintf 1142  
        __size_of_Vref_Init 0006                   ??_sprintf 0060                  __accesstop 0060  
   __end_of__initialization 1230             __CFG_PBADEN$OFF 000000               ___rparam_used 000001  
         __end_of_Comp_Init 126E              __pcstackCOMRAM 0001               __end_of_fputc 0EFA  
             __end_of_fputs 11F2               __end_of_putch 1282               ??_Touch_Sense 00A0  
                   ??_fputc 0005                     ??_fputs 000E                     ??_putch 0001  
                __pbssBANK0 0060           __end_of_Vref_Init 1280                     _T1CKPS0 007E6C  
                   _T1CKPS1 007E6D                     ?_strlen 0001                ??_UART_Write 0001  
        __size_of_vfpfcnvrt 018A         __end_of_Touch_Sense 1020               ?_UART_TX_Init 0001  
           __CFG_VREGEN$OFF 000000                     __Hparam 0000                     __Lparam 0000  
                   ___aodiv 0BEE                     ___aomod 0D36          __end_of_UART_Write 127A  
                 ?_vfprintf 0050                __psmallconst 0800                     __pcinit 1224  
                   __ramtop 0800                     __ptext0 1142                     __ptext1 127A  
                   __ptext2 123A                     __ptext3 0F94                     __ptext4 1092  
                   __ptext5 10EC                     __ptext6 0A64                     __ptext7 0812  
                   __ptext8 0EFA                     __ptext9 1180             __size_of_strlen 003A  
              __size_of_abs 0032                __size_of_pad 009A              ??_UART_TX_Init 0001  
                   _sprintf 1092        end_of_initialization 1230                     fputc@fp 0003  
             __Lmediumconst 0000                     fputs@fp 000C           __end_of_vfpfcnvrt 0BEE  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  ??_vfprintf 0056                     strlen@a 0005  
                   strlen@s 0001                   _TMR1_Init 124E              UART_Write@data 0001  
               _Touch_Sense 0F94       UART_Write_String@text 0002                 vfpfcnvrt@ap 0044  
               vfpfcnvrt@fp 0040                 vfpfcnvrt@ll 0048                   _Comp_Init 1260  
                ?_TMR1_Init 0001              __end_of_strlen 11BA         start_initialization 1224  
               __end_of_abs 1224                 __end_of_pad 0F94                 vfprintf@fmt 0052  
      __end_of_UART_TX_Init 124E            __CFG_LPT1OSC$OFF 000000                  ?_Comp_Init 0001  
                 _Vref_Init 127A                    ??_strlen 0003               __pcstackBANK0 0096  
          ___aodiv@dividend 0001                    ?___aodiv 0001                    ?___aomod 0001  
          ___aodiv@quotient 0013                 ??_TMR1_Init 0001                  ?_Vref_Init 0001  
         __size_of_vfprintf 0056                 __smallconst 0800                    ?_sprintf 0058  
            __size_of_fputc 00A0              __size_of_fputs 0038              __size_of_putch 0002  
          __CFG_WDTPS$32768 000000                 ??_Comp_Init 0001                   _vfpfcnvrt 0A64  
              ?_Touch_Sense 0001       __size_of_UART_TX_Init 0014                    __Hrparam 0000  
                vfprintf@ap 0054                    __Lrparam 0000                  vfprintf@fp 0050  
          __size_of___aodiv 0148            __size_of___aomod 0124                  ?_vfpfcnvrt 0040  
           ___aodiv@divisor 0009                 ??_Vref_Init 0001             ___aodiv@counter 0011  
         _UART_Write_String 1020                  sprintf@fmt 005A                  sprintf@ret 0096  
        ?_UART_Write_String 0002                    _dtoa$158 002E                    __ptext10 11BA  
                  __ptext11 0E5A                    __ptext12 1280                    __ptext13 11F2  
                  __ptext14 0D36                    __ptext15 0BEE                    __ptext16 1020  
                  __ptext17 126E                    __ptext18 124E                    __ptext19 1260  
          __size_of_sprintf 005A                _UART_TX_Init 123A         ??_UART_Write_String 0004  
             __size_of_main 003E               __size_of_dtoa 0252                    _vfprintf 10EC  
 __end_of_UART_Write_String 1092            ___aomod@dividend 0001       __CFG_CPUDIV$OSC1_PLL2 000000  
                 sprintf@ap 0098          UART_Write_String@i 0006             ___aomod@divisor 0009  
               ??_vfpfcnvrt 0046             ___aomod@counter 0011                    sprintf@f 009A  
                  sprintf@s 0058                  _UART_Write 126E        __size_of_Touch_Sense 008C  
              ___aodiv@sign 0012          __CFG_FOSC$HSPLL_HS 000000                ___aomod@sign 0012  
